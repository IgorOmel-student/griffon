/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2008-2020 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
pluginManagement {
    repositories {
        jcenter()
        gradlePluginPortal()
        maven { url 'http://dl.bintray.com/pledbrook/plugins' }
        mavenLocal()
    }
    plugins {
        id 'org.kordamp.gradle.java-project'     version kordampPluginVersion
        id 'org.kordamp.gradle.source-html'      version kordampPluginVersion
        id 'org.kordamp.gradle.coveralls'        version kordampPluginVersion
        id 'org.kordamp.gradle.bintray'          version kordampPluginVersion
        id 'org.kordamp.gradle.clirr'            version kordampPluginVersion
        id 'org.kordamp.gradle.guide'            version kordampPluginVersion
        id 'org.kordamp.gradle.plugin'           version kordampPluginVersion
        id 'org.kordamp.gradle.integration-test' version kordampPluginVersion
        id 'org.kordamp.gradle.functional-test'  version kordampPluginVersion
        id 'org.kordamp.gradle.jdeps'            version '0.9.0'
        id 'net.ossindex.audit'                  version '0.4.11'
        id 'org.jonnyzzz.java9c'                 version '0.2.3'
        id 'nebula.optional-base'                version '5.0.3'
        id 'org.ajoberstar.git-publish'          version '2.1.3'
        id 'org.jbake.site'                      version '5.0.0'
    }
}

buildscript {
    repositories {
        gradlePluginPortal()
        mavenLocal()
    }
    dependencies {
        classpath "org.kordamp.gradle:settings-gradle-plugin:$kordampPluginVersion"
        classpath "org.kordamp.gradle:enforcer-gradle-plugin:$enforcerPluginVersion"
    }
}
apply plugin: 'org.kordamp.gradle.settings'
apply plugin: 'org.kordamp.gradle.enforcer'

import static org.kordamp.gradle.plugin.settings.SettingsPlugin.includeProject

boolean travis   = (System.env['TRAVIS'] ?: false) as boolean
boolean circleci = (System.env['CIRCLECI'] ?: false) as boolean
boolean appveyor = (System.env['APPVEYOR'] ?: false) as boolean
boolean fullBuild = !travis && !appveyor && !circleci

rootProject.name = 'griffon'

includeBuild '../jsr377-api'
includeBuild '../jsr377-tck'
includeBuild '../jsr377-converters'

projects {
    layout = 'multi-level'
}

includeProject settings, 'subprojects/griffon-core'
includeProject settings, 'subprojects/griffon-core-compile'
includeProject settings, 'subprojects/griffon-core-test'
includeProject settings, 'subprojects/griffon-beans'
includeProject settings, 'subprojects/griffon-beans-compile'
includeProject settings, 'subprojects/griffon-guice'
includeProject settings, 'subprojects/griffon-groovy'
includeProject settings, 'subprojects/griffon-groovy-compile'
includeProject settings, 'subprojects/griffon-swing'
includeProject settings, 'subprojects/griffon-swing-groovy'
includeProject settings, 'subprojects/griffon-javafx'
includeProject settings, 'subprojects/griffon-javafx-compile'
includeProject settings, 'subprojects/griffon-javafx-groovy'
includeProject settings, 'subprojects/griffon-javafx-kotlin'
includeProject settings, 'subprojects/griffon-lanterna'
includeProject settings, 'subprojects/griffon-lanterna-groovy'
includeProject settings, 'subprojects/griffon-lanterna3'
includeProject settings, 'subprojects/griffon-lanterna3-groovy'
includeProject settings, 'subprojects/griffon-pivot'
includeProject settings, 'subprojects/griffon-pivot-groovy'
includeProject settings, 'subprojects/griffon-swing-test'
includeProject settings, 'subprojects/griffon-pivot-test'
includeProject settings, 'subprojects/griffon-javafx-test'
includeProject settings, 'subprojects/griffon-gradle-plugin'

if (!appveyor) {
    includeProject settings, 'samples/sample-swing-java'
    includeProject settings, 'samples/sample-swing-groovy'
    includeProject settings, 'samples/sample-javafx-java'
    includeProject settings, 'samples/sample-javafx-groovy'
    includeProject settings, 'samples/sample-lanterna-java'
    includeProject settings, 'samples/sample-lanterna-groovy'
    includeProject settings, 'samples/sample-lanterna3-java'
    includeProject settings, 'samples/sample-lanterna3-groovy'
    includeProject settings, 'samples/sample-javafx-kotlin'
    includeProject settings, 'samples/sample-pivot-java'
    includeProject settings, 'samples/sample-pivot-groovy'
}

if (fullBuild) {
    includeProject settings, 'subprojects/griffon-pom'
    // includeProject settings 'samples/editor-swing-groovy'
    includeProject settings, 'samples/editor-swing-java'
    includeProject settings, 'samples/editor-javafx-java'
    includeProject settings, 'samples/browser-javafx-groovy'
    includeProject settings, 'samples/console-swing-groovy'
    includeProject settings, 'templates/griffon-swing-java-templates'
    includeProject settings, 'templates/griffon-swing-groovy-templates'
    includeProject settings, 'templates/griffon-javafx-java-templates'
    includeProject settings, 'templates/griffon-javafx-groovy-templates'
    includeProject settings, 'templates/griffon-javafx-kotlin-templates'
    includeProject settings, 'templates/griffon-pivot-java-templates'
    includeProject settings, 'templates/griffon-pivot-groovy-templates'
    includeProject settings, 'templates/griffon-lanterna-java-templates'
    includeProject settings, 'templates/griffon-lanterna-groovy-templates'
    includeProject settings, 'templates/griffon-lanterna3-java-templates'
    includeProject settings, 'templates/griffon-lanterna3-groovy-templates'
    includeProject settings, 'templates/griffon-standard-templates'
    includeProject settings, 'docs/griffon-guide'
    includeProject settings, 'docs/griffon-site'
    includeProject settings, 'archetypes/griffon-javafx-java-archetype'
    includeProject settings, 'archetypes/griffon-javafx-groovy-archetype'
    includeProject settings, 'archetypes/griffon-lanterna-java-archetype'
    includeProject settings, 'archetypes/griffon-lanterna-groovy-archetype'
    includeProject settings, 'archetypes/griffon-lanterna3-java-archetype'
    includeProject settings, 'archetypes/griffon-lanterna3-groovy-archetype'
    includeProject settings, 'archetypes/griffon-pivot-java-archetype'
    includeProject settings, 'archetypes/griffon-pivot-groovy-archetype'
    includeProject settings, 'archetypes/griffon-swing-java-archetype'
    includeProject settings, 'archetypes/griffon-swing-groovy-archetype'
    includeProject settings, 'archetypes/archetypes'
}

ExtraPropertiesExtension ext = settings.extensions.findByType(ExtraPropertiesExtension)
String scompat = ext.has('sourceCompatibility') ? ext.get('sourceCompatibility') : ''
String tcompat = ext.has('targetCompatibility') ? ext.get('targetCompatibility') : ''
String javaVersion = scompat ?: tcompat

enforce {
    if (javaVersion) {
        rule(enforcer.rules.EnforceBytecodeVersion) { r ->
            r.maxJdkVersion.set(javaVersion)
        }
        rule(enforcer.rules.RequireJavaVersion) { r ->
            r.version.set(javaVersion)
        }
    }
    rule(enforcer.rules.DependencyConvergence)
    rule(enforcer.rules.BanDuplicateClasses) { r ->
        r.enabled = false
        // r.ignoreWhenIdentical = true
        // r.findAllDuplicates = false
        // dependency("org.slf4j:slf4j-log4j12:$slf4jVersion") { d ->
        //     d.ignore('org.slf4j.impl.*')
        // }
    }
    rule(enforcer.rules.ForceDependencies) { r ->
        r.dependencies.addAll "com.google.guava:guava:$guavaVersion",
        "jline:jline:$jlineVersion",
        "junit:junit:$junitVersion",
        "cglib:cglib-nodep:$cglibVersion",
        "org.asciidoctor:asciidoctorj:$asciidoctorjVersion",
        "org.codehau.groovy:groovy-all:$groovyVersion",
        "org.codehaus.groovy:groovy:$groovyVersion",
        "org.codehaus.groovy:groovy-json:$groovyVersion",
        "org.codehaus.groovy:groovy-macro:$groovyVersion",
        "org.codehaus.groovy:groovy-nio:$groovyVersion",
        "org.codehaus.groovy:groovy-sql:$groovyVersion",
        "org.codehaus.groovy:groovy-templates:$groovyVersion",
        "org.codehaus.groovy:groovy-test:$groovyVersion",
        "org.codehaus.groovy:groovy-xml:$groovyVersion",
        "org.slf4j:slf4j-api:$slf4jVersion",
        "org.slf4j:slf4j-simple:$slf4jVersion",
        "com.google.code.findbugs:jsr305:$jsr305Version",
        "commons-io:commons-io:$commonsIoVersion",
        "commons-lang:commons-lang:$commonsLangVersion",
        "commons-logging:commons-logging:$commonsLoggingVersion",
        "org.apache.commons:commons-lang3:$commonsLang3Version",
        "com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:$concurrentLHMVersion",
        "org.ow2.asm:asm:$asmVersion",
        "org.ow2.asm:asm-commons:$asmVersion",
        "org.ow2.asm:asm-tree:$asmVersion",
        "org.objenesis:objenesis:$objenesisVersion",
        "net.bytebuddy:byte-buddy:$bytebuddyVersion",
        "net.bytebuddy:byte-buddy-agent:$bytebuddyVersion",
        "org.junit.jupiter:junit-jupiter-engine:$junit5Version",
        "org.junit.platform:junit-platform-engine:$junitPlatformVersion",
        "org.junit.platform:junit-platform-launcher:$junitPlatformVersion",
        "org.apiguardian:apiguardian-api:$apiguardianVersion",
        "org.apache.ant:ant:$antVersion",
        "commons-collections:commons-collections:$commonsCollectionsVersion",
        "com.vladsch.flexmark:flexmark:$flexmarkVersion",
        "com.vladsch.flexmark:flexmark-profile-pegdown:$flexmarkVersion",
        "org.jruby:jruby-complete:$jrubyVersion",
        "org.eclipse.jgit:org.eclipse.jgit.ui:$jgitVersion",
        "org.eclipse.jgit:org.eclipse.jgit:$jgitVersion",
        "com.jcraft:jsch.agentproxy.pageant:$jschAgentproxyVersion",
        "com.jcraft:jsch.agentproxy.sshagent:$jschAgentproxyVersion",
        "com.jcraft:jsch.agentproxy.usocket-jna:$jschAgentproxyVersion",
        "com.jcraft:jsch.agentproxy.usocket-nc:$jschAgentproxyVersion",
        "com.jcraft:jsch.agentproxy.core:$jschAgentproxyVersion",
        "com.jcraft:jsch:$jschVersion",
        "org.codehaus.plexus:plexus-utils:3.1.0",
        "org.codehaus.plexus:plexus-interpolation:1.14",
        "org.apache.ant:ant-launcher:1.9.13",
        "org.apache.maven:maven-settings:3.0.4",
        "org.codehaus.groovy.modules.http-builder:http-builder:0.7.2",
        "org.apache.httpcomponents:httpclient:4.3.6",
        "com.trilead:trilead-ssh2:1.0.0-build220"
    }
}