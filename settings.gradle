/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2008-2020 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
pluginManagement {
    repositories {
        jcenter()
        gradlePluginPortal()
        maven { url 'http://dl.bintray.com/pledbrook/plugins' }
        mavenLocal()
    }
    plugins {
        id 'org.kordamp.gradle.java-project'     version kordampPluginVersion
        id 'org.kordamp.gradle.source-html'      version kordampPluginVersion
        id 'org.kordamp.gradle.coveralls'        version kordampPluginVersion
        id 'org.kordamp.gradle.bintray'          version kordampPluginVersion
        id 'org.kordamp.gradle.clirr'            version kordampPluginVersion
        id 'org.kordamp.gradle.guide'            version kordampPluginVersion
        id 'org.kordamp.gradle.plugin'           version kordampPluginVersion
        id 'org.kordamp.gradle.integration-test' version kordampPluginVersion
        id 'org.kordamp.gradle.functional-test'  version kordampPluginVersion
        id 'org.sonarqube'                       version '2.8'
    }
}

buildscript {
    repositories {
        gradlePluginPortal()
        mavenLocal()
    }
    dependencies {
        classpath "org.kordamp.gradle:settings-gradle-plugin:$kordampPluginVersion"
    }
}
apply plugin: 'org.kordamp.gradle.settings'

import static org.kordamp.gradle.plugin.settings.SettingsPlugin.includeProject

boolean travis   = (System.env['TRAVIS'] ?: false) as boolean
boolean circleci = (System.env['CIRCLECI'] ?: false) as boolean
boolean appveyor = (System.env['APPVEYOR'] ?: false) as boolean
boolean fullBuild = !travis && !appveyor && !circleci

rootProject.name = 'griffon'

includeBuild '../jsr377-api'
includeBuild '../jsr377-tck'
includeBuild '../jsr377-converters'

projects {
    layout = 'multi-level'
}

includeProject settings, 'subprojects/griffon-core'
includeProject settings, 'subprojects/griffon-core-compile'
includeProject settings, 'subprojects/griffon-core-test'
includeProject settings, 'subprojects/griffon-beans'
includeProject settings, 'subprojects/griffon-beans-compile'
includeProject settings, 'subprojects/griffon-guice'
includeProject settings, 'subprojects/griffon-groovy'
includeProject settings, 'subprojects/griffon-groovy-compile'
includeProject settings, 'subprojects/griffon-swing'
includeProject settings, 'subprojects/griffon-swing-groovy'
includeProject settings, 'subprojects/griffon-javafx'
includeProject settings, 'subprojects/griffon-javafx-compile'
includeProject settings, 'subprojects/griffon-javafx-groovy'
includeProject settings, 'subprojects/griffon-javafx-kotlin'
includeProject settings, 'subprojects/griffon-lanterna'
includeProject settings, 'subprojects/griffon-lanterna-groovy'
includeProject settings, 'subprojects/griffon-lanterna3'
includeProject settings, 'subprojects/griffon-lanterna3-groovy'
includeProject settings, 'subprojects/griffon-pivot'
includeProject settings, 'subprojects/griffon-pivot-groovy'
includeProject settings, 'subprojects/griffon-swing-test'
includeProject settings, 'subprojects/griffon-pivot-test'
includeProject settings, 'subprojects/griffon-javafx-test'
includeProject settings, 'subprojects/gradle-griffon-plugin'

if (!appveyor) {
    includeProject settings, 'samples/sample-swing-java'
    includeProject settings, 'samples/sample-swing-groovy'
    includeProject settings, 'samples/sample-javafx-java'
    includeProject settings, 'samples/sample-javafx-groovy'
    includeProject settings, 'samples/sample-lanterna-java'
    includeProject settings, 'samples/sample-lanterna-groovy'
    includeProject settings, 'samples/sample-lanterna3-java'
    includeProject settings, 'samples/sample-lanterna3-groovy'
    includeProject settings, 'samples/sample-javafx-kotlin'
    includeProject settings, 'samples/sample-pivot-java'
    includeProject settings, 'samples/sample-pivot-groovy'
}

if (fullBuild) {
    includeProject settings, 'subprojects/application-master-pom'
    // includeProject settings 'samples/editor-swing-groovy'
    includeProject settings, 'samples/editor-swing-java'
    includeProject settings, 'samples/editor-javafx-java'
    includeProject settings, 'samples/browser-javafx-groovy'
    includeProject settings, 'samples/console-swing-groovy'
    includeProject settings, 'templates/griffon-swing-java-templates'
    includeProject settings, 'templates/griffon-swing-groovy-templates'
    includeProject settings, 'templates/griffon-javafx-java-templates'
    includeProject settings, 'templates/griffon-javafx-groovy-templates'
    includeProject settings, 'templates/griffon-javafx-kotlin-templates'
    includeProject settings, 'templates/griffon-pivot-java-templates'
    includeProject settings, 'templates/griffon-pivot-groovy-templates'
    includeProject settings, 'templates/griffon-lanterna-java-templates'
    includeProject settings, 'templates/griffon-lanterna-groovy-templates'
    includeProject settings, 'templates/griffon-lanterna3-java-templates'
    includeProject settings, 'templates/griffon-lanterna3-groovy-templates'
    includeProject settings, 'templates/griffon-standard-templates'
    includeProject settings, 'docs/griffon-guide'
    includeProject settings, 'docs/griffon-site'
    includeProject settings, 'archetypes/griffon-javafx-java-archetype'
    includeProject settings, 'archetypes/griffon-javafx-groovy-archetype'
    includeProject settings, 'archetypes/griffon-lanterna-java-archetype'
    includeProject settings, 'archetypes/griffon-lanterna-groovy-archetype'
    includeProject settings, 'archetypes/griffon-lanterna3-java-archetype'
    includeProject settings, 'archetypes/griffon-lanterna3-groovy-archetype'
    includeProject settings, 'archetypes/griffon-pivot-java-archetype'
    includeProject settings, 'archetypes/griffon-pivot-groovy-archetype'
    includeProject settings, 'archetypes/griffon-swing-java-archetype'
    includeProject settings, 'archetypes/griffon-swing-groovy-archetype'
    includeProject settings, 'archetypes/archetypes'
}
