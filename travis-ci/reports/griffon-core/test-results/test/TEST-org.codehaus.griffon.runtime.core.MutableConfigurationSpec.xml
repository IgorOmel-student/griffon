<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" tests="89" skipped="0" failures="0" errors="0" timestamp="2017-04-18T07:09:11" hostname="testing-gce-002cfebe-ce3e-40e2-ac44-84a0ecf46dae" time="0.167">
  <properties/>
  <testcase name="Calling configuration.get(key.string, null) returns string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.034"/>
  <testcase name="Calling configuration.get(key.string, foo) returns string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.get(key.foo, null) returns null" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.get(key.foo, foo) returns foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.getAsString(key.string, null) returns string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.getAsString(key.string, foo) returns string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.getAsString(key.foo, null) returns null" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.getAsString(key.foo, foo) returns foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.set(key.string, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.002"/>
  <testcase name="Calling configuration.set(key.boolean.type, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.set(key.boolean.string, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.set(key.int.type, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.set(key.int.string, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.set(key.long.type, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.set(key.long.string, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.002"/>
  <testcase name="Calling configuration.set(key.float.type, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.set(key.float.string, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.set(key.double.type, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.015"/>
  <testcase name="Calling configuration.set(key.double.string, foo) stores foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Check containsKey after removal" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.002"/>
  <testcase name="Calling configuration.set(key.string, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.set(key.boolean.type, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.set(key.boolean.string, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.set(key.int.type, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.set(key.int.string, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.set(key.long.type, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.set(key.long.string, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.set(key.float.type, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.set(key.float.string, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.set(key.double.type, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.set(key.double.string, foo) stores foo (recall with getAsString)" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.remove(key.string) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.002"/>
  <testcase name="Calling configuration.remove(key.boolean.type) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.remove(key.boolean.string) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.remove(key.int.type) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.remove(key.int.string) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.remove(key.long.type) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.remove(key.long.string) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.remove(key.float.type) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.008"/>
  <testcase name="Calling configuration.remove(key.float.string) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.remove(key.double.type) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.remove(key.double.string) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.remove(key.foo) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.removeAs(key.string) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.002"/>
  <testcase name="Calling configuration.removeAs(key.boolean.string) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.removeAs(key.int.string) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.removeAs(key.long.string) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.removeAs(key.float.string) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Calling configuration.removeAs(key.double.string) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.removeAs(key.foo) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.005"/>
  <testcase name="Calling configuration.removeConverted(key.int.type) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.002"/>
  <testcase name="Calling configuration.removeConverted(key.int.string) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Calling configuration.removeConverted(key.foo) removes the key" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.003"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.boolean.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.boolean.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.int.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.int.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.long.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.long.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.float.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.float.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.double.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.double.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into flat Map and retrieving key key.foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.004"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.boolean.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.002"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.boolean.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.int.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.int.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.long.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.long.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.float.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.float.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.double.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.double.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into Properties and retrieving key key.foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.003"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.boolean.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.boolean.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.int.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.int.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.002"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.long.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.002"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.long.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.float.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.float.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.001"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.double.type" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.double.string" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.0"/>
  <testcase name="Transforming configuration into ResourceBundle and retrieving key key.foo" classname="org.codehaus.griffon.runtime.core.MutableConfigurationSpec" time="0.003"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[[Test worker] TRACE griffon.core.editors.PropertyEditorResolver - Searching PropertyEditor for java.lang.Integer
[Test worker] TRACE griffon.core.editors.PropertyEditorResolver - PropertyEditor for java.lang.Integer is griffon.core.editors.IntegerPropertyEditor
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.string
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@61702b7d; key=key.string; value='string'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.boolean.type
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@60a5b2d; key=key.boolean.type; value='true'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.boolean.string
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7ca4e6fb; key=key.boolean.string; value='true'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.int.type
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@1c6f11d1; key=key.int.type; value='42'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.int.string
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@293942ad; key=key.int.string; value='21'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.long.type
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@7dbea794; key=key.long.type; value='64'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.long.string
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@26f605e6; key=key.long.string; value='32'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.float.type
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@42736970; key=key.float.type; value='3.1416'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.float.string
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@21bc77b9; key=key.float.string; value='6.2832'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.double.type
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@29b6f61d; key=key.double.type; value='3.1416'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.double.string
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@3f790ff8; key=key.double.string; value='6.2832'
[Test worker] TRACE griffon.util.CompositeResourceBundle - Searching key=key.foo
[Test worker] TRACE griffon.util.CompositeResourceBundle - Bundle griffon.util.ExpandableResourceBundle@6618c98e; key=key.foo; value='foo'
]]></system-err>
</testsuite>
