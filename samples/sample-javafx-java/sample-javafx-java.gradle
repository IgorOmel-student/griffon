/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2008-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'groovy'
apply from: rootProject.file('samples/shared-files/samples-common-java.gradle')
apply from: rootProject.file('gradle/javafx-plugin.gradle')

mainClassName = 'sample.javafx.java.Launcher'

ext.hasIntegrationTests = true
ext.hasFunctionalTests = true
ext.depProjects = [
    ':griffon-core',
    ':griffon-javafx',
    ':griffon-guice',
    ':griffon-core-test',
    ':griffon-javafx-test'
]

ext.depProjects.each { evaluationDependsOn it }
/*
apply from: rootProject.file('gradle/coverage-samples.gradle')
*/

config {
    jacoco {
        additionalSourceDirs.from project.files(depProjects.collect{project(it)}.sourceSets.main.allSource.srcDirs.flatten())
        additionalClassDirs.from depProjects.collect{project(it)}.sourceSets.main.output.classesDirs.flatten()
    }
}

dependencies {
    compile project(':griffon-javafx')
    compile "org.kordamp.ikonli:ikonli-javafx:$ikonliVersion"
    compile "org.kordamp.ikonli:ikonli-fontawesome-pack:$ikonliVersion"
    compile "org.kordamp.bootstrapfx:bootstrapfx-core:$bootstrapfxVersion"

    testCompile project(':griffon-javafx-test')

    testCompile "org.hamcrest:java-hamcrest:$hamcrestVersion"
    testCompile "org.junit.jupiter:junit-jupiter-api:$junit5Version"
    testCompile "org.junit.jupiter:junit-jupiter-engine:$junit5Version"
    testCompile("org.junit.vintage:junit-vintage-engine:$junit5Version") {
        exclude module: 'junit', group: 'junit'
    }

    functionalTestCompile project(':griffon-javafx-test')
}

jfx {
    mainClass         = mainClassName
    allPermissions    = true
    keyStoreAlias     = 'example-user'
    keyStorePassword  = 'example-password'
    jfxMainAppJarName = jar.archiveName
    appName           = project.name
    vendor            = project.name
}

compileGroovy.enabled = false