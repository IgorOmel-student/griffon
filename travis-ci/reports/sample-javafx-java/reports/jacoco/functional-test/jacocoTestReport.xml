<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="sample-javafx-java"><sessioninfo id="testing-gce-32b998c0-1c86-42c0-92eb-71cbad2128a4-d411c8b" start="1479480525978" dump="1479480535494"/><package name="org/codehaus/griffon/runtime/core/mvc"><class name="org/codehaus/griffon/runtime/core/mvc/AbstractMVCGroupConfiguration"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMvcType" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMembers" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfig" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="()Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(Ljava/util/Map;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(Ljava/lang/String;Ljava/util/Map;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="67"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/mvc/DefaultMVCGroup"><method name="&lt;init&gt;" desc="(Lgriffon/core/mvc/MVCGroupManager;Lgriffon/core/mvc/MVCGroupConfiguration;Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCGroup;)V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/mvc/AbstractMVCGroup$MVCGroupFunctionDecorator"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/mvc/AbstractMVCGroup;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lgriffon/core/mvc/MVCGroup;)V"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/mvc/AbstractMVCGroup"><method name="&lt;init&gt;" desc="(Lgriffon/core/mvc/MVCGroupManager;Lgriffon/core/mvc/MVCGroupConfiguration;Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCGroup;)V"><counter type="INSTRUCTION" missed="13" covered="72"/><counter type="BRANCH" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInjectedInstances" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContext" desc="()Lgriffon/core/Context;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentGroup" desc="()Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfiguration" desc="()Lgriffon/core/mvc/MVCGroupConfiguration;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMvcType" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMvcId" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModel" desc="()Lgriffon/core/artifact/GriffonModel;"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getView" desc="()Lgriffon/core/artifact/GriffonView;"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getController" desc="()Lgriffon/core/artifact/GriffonController;"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMember" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMembers" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="destroy" desc="()V"><counter type="INSTRUCTION" missed="19" covered="50"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notifyMVCGroupDestroyed" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAlive" desc="()Z"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkIfAlive" desc="()V"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMVCGroup" desc="(Ljava/util/Map;Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/lang/String;Ljava/util/Map;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/util/List;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/util/List;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/util/Map;Ljava/lang/String;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/lang/String;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/lang/String;Ljava/lang/String;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/util/Map;Ljava/lang/String;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/lang/String;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/lang/String;Ljava/lang/String;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/lang/String;Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="manageChildGroup" desc="(Lgriffon/core/mvc/MVCGroup;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="manageChildGroup" desc="(Ljava/util/List;)Ljava/util/List;"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildrenGroups" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="injectParentGroup" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="injectParentGroup" desc="(Ljava/util/Map;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="381" covered="200"/><counter type="BRANCH" missed="11" covered="7"/><counter type="COMPLEXITY" missed="39" covered="15"/><counter type="METHOD" missed="31" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/mvc/AbstractMVCHandler"><method name="&lt;init&gt;" desc="(Lgriffon/core/mvc/MVCGroupManager;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMvcGroupManager" desc="()Lgriffon/core/mvc/MVCGroupManager;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMVCGroup" desc="(Ljava/util/Map;Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/lang/String;Ljava/util/Map;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/lang/String;Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/util/List;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/util/List;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="destroyMVCGroup" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/lang/String;Ljava/lang/String;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/util/Map;Ljava/lang/String;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/lang/String;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/lang/String;Ljava/lang/String;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/util/Map;Ljava/lang/String;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/lang/String;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="165" covered="12"/><counter type="COMPLEXITY" missed="25" covered="2"/><counter type="METHOD" missed="25" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/mvc/DefaultMVCGroupManager$InjectionPoint$Type"><method name="values" desc="()[Lorg/codehaus/griffon/runtime/core/mvc/DefaultMVCGroupManager$InjectionPoint$Type;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lorg/codehaus/griffon/runtime/core/mvc/DefaultMVCGroupManager$InjectionPoint$Type;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="39"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/mvc/DefaultMVCGroupConfiguration"><method name="&lt;init&gt;" desc="(Lgriffon/core/mvc/MVCGroupManager;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMvcGroupManager" desc="()Lgriffon/core/mvc/MVCGroupManager;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instantiateMVCGroup" desc="(Ljava/lang/String;Ljava/util/Map;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="12"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/mvc/DefaultMVCGroupManager$MethodInjectionPoint"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ZLorg/codehaus/griffon/runtime/core/mvc/DefaultMVCGroupManager$InjectionPoint$Type;Ljava/lang/reflect/Method;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lgriffon/core/mvc/MVCGroup;Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="181" covered="32"/><counter type="BRANCH" missed="13" covered="5"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="181" covered="41"/><counter type="BRANCH" missed="13" covered="5"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/mvc/DefaultMVCGroupFactory"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Lgriffon/core/mvc/MVCGroupConfiguration;Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCGroup;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/mvc/AbstractMVCGroupManager"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getApplication" desc="()Lgriffon/core/GriffonApplication;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newMVCGroupConfiguration" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)Lgriffon/core/mvc/MVCGroupConfiguration;"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newMVCGroup" desc="(Lgriffon/core/mvc/MVCGroupConfiguration;Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCGroup;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newContext" desc="(Lgriffon/core/mvc/MVCGroup;)Lgriffon/core/Context;"><counter type="INSTRUCTION" missed="3" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfigurations" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGroups" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="5" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findConfiguration" desc="(Ljava/lang/String;)Lgriffon/core/mvc/MVCGroupConfiguration;"><counter type="INSTRUCTION" missed="24" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findGroup" desc="(Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="5" covered="21"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAt" desc="(Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="6" covered="25"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addConfiguration" desc="(Lgriffon/core/mvc/MVCGroupConfiguration;)V"><counter type="INSTRUCTION" missed="14" covered="23"/><counter type="BRANCH" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeConfiguration" desc="(Lgriffon/core/mvc/MVCGroupConfiguration;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeConfiguration" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addGroup" desc="(Lgriffon/core/mvc/MVCGroup;)V"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeGroup" desc="(Lgriffon/core/mvc/MVCGroup;)V"><counter type="INSTRUCTION" missed="5" covered="25"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModels" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getViews" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getControllers" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cloneMVCGroupConfiguration" desc="(Ljava/lang/String;Ljava/util/Map;)Lgriffon/core/mvc/MVCGroupConfiguration;"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Lgriffon/core/mvc/MVCGroupConfiguration;Ljava/lang/String;Ljava/util/Map;)Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withMVCGroup" desc="(Lgriffon/core/mvc/MVCGroupConfiguration;Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Lgriffon/core/mvc/MVCGroupConfiguration;Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/lang/String;Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/util/Map;Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/lang/String;Ljava/util/Map;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMVC" desc="(Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/util/List;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/util/List;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/lang/String;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/lang/String;Ljava/lang/String;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/util/Map;Ljava/lang/String;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/lang/String;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/lang/String;Ljava/lang/String;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/util/Map;Ljava/lang/String;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getController" desc="(Ljava/lang/String;Ljava/lang/Class;)Lgriffon/core/artifact/GriffonController;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModel" desc="(Ljava/lang/String;Ljava/lang/Class;)Lgriffon/core/artifact/GriffonModel;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getView" desc="(Ljava/lang/String;Ljava/lang/Class;)Lgriffon/core/artifact/GriffonView;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findController" desc="(Ljava/lang/String;Ljava/lang/Class;)Lgriffon/core/artifact/GriffonController;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findModel" desc="(Ljava/lang/String;Ljava/lang/Class;)Lgriffon/core/artifact/GriffonModel;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findView" desc="(Ljava/lang/String;Ljava/lang/Class;)Lgriffon/core/artifact/GriffonView;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="730" covered="245"/><counter type="BRANCH" missed="35" covered="5"/><counter type="COMPLEXITY" missed="59" covered="15"/><counter type="METHOD" missed="39" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/mvc/DefaultMVCGroupManager$FieldInjectionPoint"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ZLorg/codehaus/griffon/runtime/core/mvc/DefaultMVCGroupManager$InjectionPoint$Type;Ljava/lang/reflect/Field;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lgriffon/core/mvc/MVCGroup;Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="147" covered="30"/><counter type="BRANCH" missed="11" covered="5"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="147" covered="39"/><counter type="BRANCH" missed="11" covered="5"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/mvc/AbstractMVCGroup$MVCFunctionDecorator"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/mvc/AbstractMVCGroup;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lgriffon/core/artifact/GriffonModel;Lgriffon/core/artifact/GriffonView;Lgriffon/core/artifact/GriffonController;)V"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/mvc/DefaultMVCGroupManager$InjectionPoint"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ZLorg/codehaus/griffon/runtime/core/mvc/DefaultMVCGroupManager$InjectionPoint$Type;)V"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/mvc/DefaultMVCGroupManager$1"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/mvc/DefaultMVCGroupManager;Lgriffon/core/artifact/GriffonArtifact;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V"><counter type="INSTRUCTION" missed="5" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="24"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/mvc/DefaultMVCGroupManager$2"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/mvc/DefaultMVCGroupManager;Lgriffon/core/artifact/GriffonMvcArtifact;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V"><counter type="INSTRUCTION" missed="5" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="14"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/mvc/DefaultMVCGroupManager$ClassHolder"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/mvc/DefaultMVCGroupManager"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;Lgriffon/core/ApplicationClassLoader;)V"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doInitialize" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMVCGroup" desc="(Lgriffon/core/mvc/MVCGroupConfiguration;Ljava/lang/String;Ljava/util/Map;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="85" covered="189"/><counter type="BRANCH" missed="5" covered="7"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="adjustMvcArguments" desc="(Lgriffon/core/mvc/MVCGroup;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveMvcId" desc="(Lgriffon/core/mvc/MVCGroupConfiguration;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="13" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selectClassesPerMember" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyAndConfigureArguments" desc="(Ljava/util/Map;Lgriffon/core/mvc/MVCGroupConfiguration;Ljava/lang/String;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="39" covered="25"/><counter type="BRANCH" missed="5" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkIdIsUnique" desc="(Ljava/lang/String;Lgriffon/core/mvc/MVCGroupConfiguration;)V"><counter type="INSTRUCTION" missed="43" covered="5"/><counter type="BRANCH" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instantiateMembers" desc="(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="42" covered="59"/><counter type="BRANCH" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeMembers" desc="(Lgriffon/core/mvc/MVCGroup;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="6" covered="37"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeArtifactMember" desc="(Lgriffon/core/mvc/MVCGroup;Ljava/lang/String;Lgriffon/core/artifact/GriffonArtifact;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeNonArtifactMember" desc="(Lgriffon/core/mvc/MVCGroup;Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fillReferencedProperties" desc="(Lgriffon/core/mvc/MVCGroup;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="2" covered="217"/><counter type="BRANCH" missed="2" covered="28"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveType" desc="(Ljava/lang/reflect/AnnotatedElement;)Lorg/codehaus/griffon/runtime/core/mvc/DefaultMVCGroupManager$InjectionPoint$Type;"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isContextual" desc="(Ljava/lang/reflect/AnnotatedElement;)Z"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInjectable" desc="(Ljava/lang/reflect/AnnotatedElement;)Z"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMvcMember" desc="(Ljava/lang/reflect/AnnotatedElement;)Z"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doAddGroup" desc="(Lgriffon/core/mvc/MVCGroup;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="destroyMVCGroup" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="destroyMembers" desc="(Lgriffon/core/mvc/MVCGroup;Z)V"><counter type="INSTRUCTION" missed="16" covered="44"/><counter type="BRANCH" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="destroyArtifactMember" desc="(Ljava/lang/String;Lgriffon/core/artifact/GriffonArtifact;Z)V"><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="BRANCH" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="destroyContextualMemberProperties" desc="(Ljava/lang/String;Lgriffon/core/artifact/GriffonArtifact;)V"><counter type="INSTRUCTION" missed="33" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="destroyNonArtifactMember" desc="(Ljava/lang/String;Ljava/lang/Object;Z)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doRemoveGroup" desc="(Lgriffon/core/mvc/MVCGroup;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConfigFlagEnabled" desc="(Lgriffon/core/mvc/MVCGroupConfiguration;Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadClass" desc="(Ljava/lang/String;)Ljava/lang/Class;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="304" covered="916"/><counter type="BRANCH" missed="36" covered="82"/><counter type="COMPLEXITY" missed="36" covered="50"/><counter type="METHOD" missed="3" covered="24"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/mvc/DefaultMVCGroupConfigurationFactory"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)Lgriffon/core/mvc/MVCGroupConfiguration;"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="2043" covered="1677"/><counter type="BRANCH" missed="116" covered="104"/><counter type="COMPLEXITY" missed="191" covered="108"/><counter type="METHOD" missed="110" covered="79"/><counter type="CLASS" missed="2" covered="16"/></package><package name="org/codehaus/griffon/runtime/core/artifact"><class name="org/codehaus/griffon/runtime/core/artifact/AbstractGriffonModel"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getArtifactType" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVetoableChangeListener" desc="(Ljava/beans/VetoableChangeListener;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addVetoableChangeListener" desc="(Ljava/lang/String;Ljava/beans/VetoableChangeListener;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeVetoableChangeListener" desc="(Ljava/beans/VetoableChangeListener;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeVetoableChangeListener" desc="(Ljava/lang/String;Ljava/beans/VetoableChangeListener;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVetoableChangeListeners" desc="()[Ljava/beans/VetoableChangeListener;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVetoableChangeListeners" desc="(Ljava/lang/String;)[Ljava/beans/VetoableChangeListener;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addPropertyChangeListener" desc="(Ljava/beans/PropertyChangeListener;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addPropertyChangeListener" desc="(Ljava/lang/String;Ljava/beans/PropertyChangeListener;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removePropertyChangeListener" desc="(Ljava/beans/PropertyChangeListener;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removePropertyChangeListener" desc="(Ljava/lang/String;Ljava/beans/PropertyChangeListener;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyChangeListeners" desc="()[Ljava/beans/PropertyChangeListener;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyChangeListeners" desc="(Ljava/lang/String;)[Ljava/beans/PropertyChangeListener;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="firePropertyChange" desc="(Ljava/beans/PropertyChangeEvent;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="firePropertyChange" desc="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fireVetoableChange" desc="(Ljava/beans/PropertyChangeEvent;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fireVetoableChange" desc="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="112" covered="17"/><counter type="COMPLEXITY" missed="17" covered="2"/><counter type="METHOD" missed="17" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/DefaultArtifactManager"><method name="&lt;init&gt;" desc="(Lgriffon/core/ApplicationClassLoader;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doLoadArtifactMetadata" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="BRANCH" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/DefaultGriffonClass"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/AbstractArtifactManager$1"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/artifact/AbstractArtifactManager;Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Lgriffon/core/artifact/GriffonArtifact;"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/ViewArtifactHandler"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newGriffonClassInstance" desc="(Ljava/lang/Class;)Lgriffon/core/artifact/GriffonClass;"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/ModelArtifactHandler"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newGriffonClassInstance" desc="(Ljava/lang/Class;)Lgriffon/core/artifact/GriffonClass;"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/AbstractArtifactManager"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArtifactHandlers" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadArtifactMetadata" desc="()V"><counter type="INSTRUCTION" missed="10" covered="57"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllTypes" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newInstance" desc="(Lgriffon/core/artifact/GriffonClass;)Lgriffon/core/artifact/GriffonArtifact;"><counter type="INSTRUCTION" missed="6" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="(Ljava/lang/Class;)Lgriffon/core/artifact/GriffonArtifact;"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerArtifactHandler" desc="(Lgriffon/core/artifact/ArtifactHandler;)V"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unregisterArtifactHandler" desc="(Lgriffon/core/artifact/ArtifactHandler;)V"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isArtifactTypeSupported" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findGriffonClass" desc="(Ljava/lang/String;Ljava/lang/String;)Lgriffon/core/artifact/GriffonClass;"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findGriffonClass" desc="(Ljava/lang/Class;Ljava/lang/String;)Lgriffon/core/artifact/GriffonClass;"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findGriffonClass" desc="(Lgriffon/core/artifact/GriffonArtifact;)Lgriffon/core/artifact/GriffonClass;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findGriffonClass" desc="(Ljava/lang/Class;)Lgriffon/core/artifact/GriffonClass;"><counter type="INSTRUCTION" missed="10" covered="37"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findGriffonClass" desc="(Ljava/lang/String;)Lgriffon/core/artifact/GriffonClass;"><counter type="INSTRUCTION" missed="10" covered="36"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassesOfType" desc="(Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllClasses" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isClassOfType" desc="(Ljava/lang/String;Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="297" covered="216"/><counter type="BRANCH" missed="18" covered="12"/><counter type="COMPLEXITY" missed="20" covered="13"/><counter type="METHOD" missed="9" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/DefaultGriffonServiceClass"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetCaches" desc="()V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getServiceNames" desc="()[Ljava/lang/String;"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="56" covered="12"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/ClassPropertyFetcher$GetterPropertyFetcher"><method name="&lt;init&gt;" desc="(Ljava/lang/reflect/Method;Z)V"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lorg/codehaus/griffon/runtime/core/artifact/ClassPropertyFetcher$ReferenceInstanceCallback;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyType" desc="(Ljava/lang/String;)Ljava/lang/Class;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="11"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/AbstractGriffonController"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getArtifactType" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getActionManager" desc="()Lgriffon/core/controller/ActionManager;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeAction" desc="(Ljava/lang/String;[Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="actionFor" desc="(Ljava/lang/String;)Lgriffon/core/controller/Action;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="5"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/AbstractGriffonView"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getArtifactType" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="actionFor" desc="(Lgriffon/core/artifact/GriffonController;Ljava/lang/String;)Lgriffon/core/controller/Action;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/DefaultGriffonModelClass"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetCaches" desc="()V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyNames" desc="()[Ljava/lang/String;"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setModelPropertyValue" desc="(Lgriffon/core/artifact/GriffonModel;Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModelPropertyValue" desc="(Lgriffon/core/artifact/GriffonModel;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="82" covered="28"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/DefaultGriffonControllerClass"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetCaches" desc="()V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActionNames" desc="()[Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="4" covered="8"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="66"/><counter type="BRANCH" missed="4" covered="8"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/DefaultArtifactManager$1"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/artifact/DefaultArtifactManager;Ljava/util/Map;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="process" desc="(Ljava/lang/ClassLoader;Ljava/lang/Class;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="6" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="48"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/DefaultGriffonViewClass"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/ControllerArtifactHandler"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newGriffonClassInstance" desc="(Ljava/lang/Class;)Lgriffon/core/artifact/GriffonClass;"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/AbstractGriffonService"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getArtifactType" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/ClassPropertyFetcher$3"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/artifact/ClassPropertyFetcher;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doWith" desc="(Ljava/lang/reflect/Method;)V"><counter type="INSTRUCTION" missed="80" covered="14"/><counter type="BRANCH" missed="23" covered="5"/><counter type="COMPLEXITY" missed="12" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="80" covered="20"/><counter type="BRANCH" missed="23" covered="5"/><counter type="COMPLEXITY" missed="12" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/ClassPropertyFetcher$2"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/artifact/ClassPropertyFetcher;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doWith" desc="(Ljava/lang/reflect/Field;)V"><counter type="INSTRUCTION" missed="37" covered="11"/><counter type="BRANCH" missed="5" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="17"/><counter type="BRANCH" missed="5" covered="3"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/ClassPropertyFetcher$1"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReferenceInstance" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="6"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/ClassPropertyFetcher$FieldReaderFetcher"><method name="&lt;init&gt;" desc="(Ljava/lang/reflect/Field;Z)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Lorg/codehaus/griffon/runtime/core/artifact/ClassPropertyFetcher$ReferenceInstanceCallback;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyType" desc="(Ljava/lang/String;)Ljava/lang/Class;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/artifact/AbstractGriffonClass"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="7" covered="90"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getApplication" desc="()Lgriffon/core/GriffonApplication;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyValue" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasProperty" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getShortName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFullName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLogicalPropertyName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNaturalName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPackageName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClazz" desc="()Ljava/lang/Class;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArtifactType" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyValue" desc="(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resetCaches" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEventNames" desc="()[Ljava/lang/String;"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertiesWithFields" desc="()[Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyType" desc="(Ljava/lang/String;)Ljava/lang/Class;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReadableProperty" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyOrStaticPropertyOrFieldValue" desc="(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="198" covered="99"/><counter type="BRANCH" missed="18" covered="2"/><counter type="COMPLEXITY" missed="29" covered="4"/><counter type="METHOD" missed="19" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/AbstractGriffonArtifact"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getApplication" desc="()Lgriffon/core/GriffonApplication;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGriffonClass" desc="()Lgriffon/core/artifact/GriffonClass;"><counter type="INSTRUCTION" missed="5" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLog" desc="()Lorg/slf4j/Logger;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUIThread" desc="()Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runFuture" desc="(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runFuture" desc="(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runInsideUISync" desc="(Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runOutsideUI" desc="(Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runInsideUIAsync" desc="(Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runInsideUISync" desc="(Ljava/util/concurrent/Callable;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="classloader" desc="()Ljava/lang/ClassLoader;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResourceAsURL" desc="(Ljava/lang/String;)Ljava/net/URL;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResources" desc="(Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResourceAsStream" desc="(Ljava/lang/String;)Ljava/io/InputStream;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/util/Map;Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/lang/String;Ljava/lang/String;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/lang/String;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/lang/String;Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/util/List;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/util/Map;Ljava/lang/String;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/lang/String;Ljava/util/Map;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/util/List;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/util/Map;Ljava/lang/String;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/lang/String;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/lang/String;Ljava/lang/String;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="destroyMVCGroup" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="msg" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="msg" desc="(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="msg" desc="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="msg" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="284" covered="61"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="41" covered="5"/><counter type="METHOD" missed="40" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/ServiceArtifactHandler"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newGriffonClassInstance" desc="(Ljava/lang/Class;)Lgriffon/core/artifact/GriffonClass;"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/ClassPropertyFetcher"><method name="clearClassPropertyFetcherCache" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forClass" desc="(Ljava/lang/Class;)Lorg/codehaus/griffon/runtime/core/artifact/ClassPropertyFetcher;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forClass" desc="(Ljava/lang/Class;Lorg/codehaus/griffon/runtime/core/artifact/ClassPropertyFetcher$ReferenceInstanceCallback;)Lorg/codehaus/griffon/runtime/core/artifact/ClassPropertyFetcher;"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Lorg/codehaus/griffon/runtime/core/artifact/ClassPropertyFetcher$ReferenceInstanceCallback;)V"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReference" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyDescriptors" desc="()[Ljava/beans/PropertyDescriptor;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReadableProperty" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertiesWithFields" desc="()[Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="()V"><counter type="INSTRUCTION" missed="49" covered="222"/><counter type="BRANCH" missed="4" covered="28"/><counter type="COMPLEXITY" missed="4" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveAllClasses" desc="(Ljava/lang/Class;)Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPropertyValue" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyValue" desc="(Ljava/lang/String;Z)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyValueWithFetcher" desc="(Ljava/lang/String;Lorg/codehaus/griffon/runtime/core/artifact/ClassPropertyFetcher$PropertyFetcher;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStaticPropertyValue" desc="(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyValue" desc="(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnOnlyIfInstanceOf" desc="(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveFetcher" desc="(Ljava/lang/String;Z)Lorg/codehaus/griffon/runtime/core/artifact/ClassPropertyFetcher$PropertyFetcher;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyType" desc="(Ljava/lang/String;)Ljava/lang/Class;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyType" desc="(Ljava/lang/String;Z)Ljava/lang/Class;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeAccessible" desc="(Ljava/lang/reflect/AccessibleObject;)V"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="187" covered="307"/><counter type="BRANCH" missed="27" covered="35"/><counter type="COMPLEXITY" missed="30" covered="22"/><counter type="METHOD" missed="14" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/AbstractGriffonMvcArtifact"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMvcGroup" desc="(Lgriffon/core/mvc/MVCGroup;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMvcGroup" desc="()Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mvcGroupInit" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mvcGroupDestroy" desc="()V"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMVCGroup" desc="(Ljava/util/Map;Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/lang/String;Ljava/util/Map;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/lang/String;Ljava/lang/String;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVCGroup" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lgriffon/core/mvc/MVCGroup;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/util/List;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createMVC" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/util/List;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/util/Map;Ljava/lang/String;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/util/Map;Ljava/lang/String;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/lang/String;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/lang/String;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVC" desc="(Ljava/lang/String;Ljava/lang/String;Lgriffon/core/mvc/MVCFunction;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withMVCGroup" desc="(Ljava/lang/String;Ljava/lang/String;Lgriffon/core/mvc/MVCGroupFunction;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="164" covered="15"/><counter type="COMPLEXITY" missed="25" covered="5"/><counter type="METHOD" missed="25" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/artifact/AbstractArtifactHandler"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArtifactType" desc="()Ljava/lang/Class;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTrailing" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="([Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassesByName" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isArtifact" desc="(Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isArtifact" desc="(Lgriffon/core/artifact/GriffonClass;)Z"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClasses" desc="()[Lgriffon/core/artifact/GriffonClass;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClassFor" desc="(Ljava/lang/Class;)Lgriffon/core/artifact/GriffonClass;"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassFor" desc="(Ljava/lang/String;)Lgriffon/core/artifact/GriffonClass;"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findClassFor" desc="(Ljava/lang/String;)Lgriffon/core/artifact/GriffonClass;"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getApplication" desc="()Lgriffon/core/GriffonApplication;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="140" covered="94"/><counter type="BRANCH" missed="16" covered="2"/><counter type="COMPLEXITY" missed="15" covered="7"/><counter type="METHOD" missed="7" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="1757" covered="1219"/><counter type="BRANCH" missed="145" covered="73"/><counter type="COMPLEXITY" missed="233" covered="99"/><counter type="METHOD" missed="151" covered="72"/><counter type="CLASS" missed="1" covered="26"/></package><package name="org/codehaus/griffon/runtime/core/injection"><class name="org/codehaus/griffon/runtime/core/injection/Bindings"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bind" desc="(Ljava/lang/Class;)Lorg/codehaus/griffon/runtime/core/injection/AnnotatedBindingBuilder;"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/injection/InjectionUnitOfWork"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="start" desc="()V"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finish" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="1" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="track" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="33"/><counter type="BRANCH" missed="4" covered="2"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/injection/Bindings$ProviderBindingImpl"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljavax/inject/Provider;Ljava/lang/annotation/Annotation;Z)V"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljavax/inject/Provider;Ljava/lang/Class;Z)V"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProvider" desc="()Ljavax/inject/Provider;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="8" covered="48"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="77"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/injection/InjectorProvider"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInjector" desc="(Lgriffon/core/injection/Injector;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lgriffon/core/injection/Injector;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/injection/Bindings$AbstractBindingImpl"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/annotation/Annotation;Z)V"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/Class;Z)V"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSource" desc="()Ljava/lang/Class;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassifierType" desc="()Ljava/lang/Class;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassifier" desc="()Ljava/lang/annotation/Annotation;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSingleton" desc="()Z"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateClassifier" desc="(Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="12" covered="4"/><counter type="BRANCH" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateClassifierType" desc="(Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="60"/><counter type="BRANCH" missed="4" covered="4"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/injection/Bindings$InstanceBindingImpl"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/annotation/Annotation;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="16" covered="40"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="56"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/injection/Bindings$TargetBindingImpl"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/annotation/Annotation;Z)V"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Z)V"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTarget" desc="()Ljava/lang/Class;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="8" covered="49"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="76"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/injection/AbstractModule"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configure" desc="()V"><counter type="INSTRUCTION" missed="1" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBindings" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bind" desc="(Ljava/lang/Class;)Lorg/codehaus/griffon/runtime/core/injection/AnnotatedBindingBuilder;"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="73"/><counter type="BRANCH" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/injection/Bindings$ProviderTypeBindingImpl"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/annotation/Annotation;Z)V"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Z)V"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProviderType" desc="()Ljava/lang/Class;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="8" covered="49"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="76"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/injection/Bindings$AnnotatedBindingBuilderImpl"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBinding" desc="()Lgriffon/core/injection/Binding;"><counter type="INSTRUCTION" missed="23" covered="128"/><counter type="BRANCH" missed="2" covered="16"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withClassifier" desc="(Ljava/lang/Class;)Lorg/codehaus/griffon/runtime/core/injection/LinkedBindingBuilder;"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withClassifier" desc="(Ljava/lang/annotation/Annotation;)Lorg/codehaus/griffon/runtime/core/injection/LinkedBindingBuilder;"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="165"/><counter type="BRANCH" missed="2" covered="16"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/injection/Bindings$LinkedBindingBuilderImpl"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="to" desc="(Ljava/lang/Class;)Lorg/codehaus/griffon/runtime/core/injection/SingletonBindingBuilder;"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toInstance" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toProvider" desc="(Ljavax/inject/Provider;)Lorg/codehaus/griffon/runtime/core/injection/SingletonBindingBuilder;"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toProvider" desc="(Ljava/lang/Class;)Lorg/codehaus/griffon/runtime/core/injection/SingletonBindingBuilder;"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/injection/Bindings$SingletonBindingBuilderImpl"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asSingleton" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/injection/AbstractTestingModule"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><counter type="INSTRUCTION" missed="120" covered="677"/><counter type="BRANCH" missed="18" covered="38"/><counter type="COMPLEXITY" missed="21" covered="57"/><counter type="METHOD" missed="5" covered="45"/><counter type="CLASS" missed="1" covered="12"/></package><package name="griffon/core/event"><class name="griffon/core/event/Event"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTimestamp" desc="()J"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="griffon/core/injection"><class name="griffon/core/injection/Qualified"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/annotation/Annotation;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQualifier" desc="()Ljava/lang/annotation/Annotation;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="102" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/injection/Key"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/annotation/Annotation;)V"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSource" desc="()Ljava/lang/Class;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAnnotationType" desc="()Ljava/lang/Class;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAnnotation" desc="()Ljava/lang/annotation/Annotation;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="13" covered="46"/><counter type="BRANCH" missed="10" covered="10"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Ljava/lang/Class;)Lgriffon/core/injection/Key;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Ljava/lang/Class;Ljava/lang/annotation/Annotation;)Lgriffon/core/injection/Key;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Ljava/lang/Class;Ljava/lang/Class;)Lgriffon/core/injection/Key;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Lgriffon/core/injection/Binding;)Lgriffon/core/injection/Key;"><counter type="INSTRUCTION" missed="8" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="99" covered="121"/><counter type="BRANCH" missed="12" covered="16"/><counter type="COMPLEXITY" missed="19" covered="8"/><counter type="METHOD" missed="8" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="201" covered="121"/><counter type="BRANCH" missed="28" covered="16"/><counter type="COMPLEXITY" missed="33" covered="8"/><counter type="METHOD" missed="14" covered="5"/><counter type="CLASS" missed="1" covered="1"/></package><package name="org/codehaus/griffon/runtime/core/addon"><class name="org/codehaus/griffon/runtime/core/addon/DefaultAddonManager"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/addon/AbstractAddonManager"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getApplication" desc="()Lgriffon/core/GriffonApplication;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAddons" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAddon" desc="(Ljava/lang/String;)Lgriffon/core/addon/GriffonAddon;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="()V"><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doInitialize" desc="()V"><counter type="INSTRUCTION" missed="89" covered="31"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preloadAddons" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addMVCGroups" desc="(Lgriffon/core/addon/GriffonAddon;)V"><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAddonsInternal" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="event" desc="(Lgriffon/core/ApplicationEvent;)V"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="event" desc="(Lgriffon/core/ApplicationEvent;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="203" covered="108"/><counter type="BRANCH" missed="13" covered="3"/><counter type="COMPLEXITY" missed="11" covered="9"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/addon/AbstractGriffonAddon"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLog" desc="()Lorg/slf4j/Logger;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMvcGroups" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStartupGroups" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canShutdown" desc="(Lgriffon/core/GriffonApplication;)Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onShutdown" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><counter type="INSTRUCTION" missed="230" covered="112"/><counter type="BRANCH" missed="13" covered="3"/><counter type="COMPLEXITY" missed="18" covered="10"/><counter type="METHOD" missed="10" covered="10"/><counter type="CLASS" missed="1" covered="2"/></package><package name="org/codehaus/griffon/runtime/javafx"><class name="org/codehaus/griffon/runtime/javafx/DefaultJavaFXWindowManager$OnWindowHidingHelper"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/javafx/DefaultJavaFXWindowManager;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handle" desc="(Ljavafx/stage/WindowEvent;)V"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/javafx/TestJavaFXGriffonApplicationBootstrapper"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadModules" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/javafx/JavaFXModule"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doConfigure" desc="()V"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/javafx/DefaultJavaFXWindowDisplayHandler"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="show" desc="(Ljava/lang/String;Ljavafx/stage/Window;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hide" desc="(Ljava/lang/String;Ljavafx/stage/Window;)V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/javafx/TestJavaFXGriffonApplication"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exit" desc="()V"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createApplicationBootstrapper" desc="()Lgriffon/core/ApplicationBootstrapper;"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/javafx/JavaFXUIThreadManager"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUIThread" desc="()Z"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runInsideUIAsync" desc="(Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runInsideUISync" desc="(Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="9" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/javafx/TestJavaFXGriffonApplicationBootstrapper$1"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/javafx/TestJavaFXGriffonApplicationBootstrapper;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doConfigure" desc="()V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/javafx/DefaultJavaFXWindowManager$OnWindowHiddenHelper"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/javafx/DefaultJavaFXWindowManager;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handle" desc="(Ljavafx/stage/WindowEvent;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/javafx/ConfigurableJavaFXWindowDisplayHandler"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;Lgriffon/javafx/JavaFXWindowDisplayHandler;)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fetchDefaultWindowDisplayHandler" desc="()Lgriffon/javafx/JavaFXWindowDisplayHandler;"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleShowByInjectedHandler" desc="(Ljava/lang/String;Ljavafx/stage/Window;)Z"><counter type="INSTRUCTION" missed="19" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleHideByInjectedHandler" desc="(Ljava/lang/String;Ljavafx/stage/Window;)Z"><counter type="INSTRUCTION" missed="19" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="40" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/javafx/TestJavaFXWindowManager"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;Lgriffon/javafx/JavaFXWindowDisplayHandler;)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveStartingWindowFromConfiguration" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/javafx/DefaultJavaFXWindowManager$OnWindowShownHelper"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/javafx/DefaultJavaFXWindowManager;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handle" desc="(Ljavafx/stage/WindowEvent;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/javafx/TestJavaFXWindowManagerProvider"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lgriffon/core/view/WindowManager;"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/javafx/JavaFXUIThreadManager$1"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/javafx/JavaFXUIThreadManager;Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V"><counter type="INSTRUCTION" missed="7" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="14"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/javafx/DefaultJavaFXWindowManager"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;Lgriffon/javafx/JavaFXWindowDisplayHandler;)V"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doAttach" desc="(Ljavafx/stage/Window;)V"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doDetach" desc="(Ljavafx/stage/Window;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWindowVisible" desc="(Ljavafx/stage/Window;)Z"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleClose" desc="(Ljavafx/stage/Window;)V"><counter type="INSTRUCTION" missed="42" covered="6"/><counter type="BRANCH" missed="13" covered="1"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="56" covered="61"/><counter type="BRANCH" missed="13" covered="1"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="114" covered="374"/><counter type="BRANCH" missed="19" covered="7"/><counter type="COMPLEXITY" missed="14" covered="38"/><counter type="METHOD" missed="1" covered="38"/><counter type="CLASS" missed="0" covered="14"/></package><package name="org/codehaus/griffon/runtime/core/controller"><class name="org/codehaus/griffon/runtime/core/controller/AbstractActionManager$1"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/controller/AbstractActionManager;[Ljava/lang/Object;Lgriffon/core/controller/Action;Lgriffon/core/artifact/GriffonController;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V"><counter type="INSTRUCTION" missed="103" covered="110"/><counter type="BRANCH" missed="11" covered="7"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="103" covered="128"/><counter type="BRANCH" missed="11" covered="7"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/controller/AbstractActionManager$2"><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="4" covered="29"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="29"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/controller/AbstractAction"><method name="&lt;init&gt;" desc="(Lgriffon/core/controller/ActionManager;Lgriffon/core/artifact/GriffonController;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getActionManager" desc="()Lgriffon/core/controller/ActionManager;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getController" desc="()Lgriffon/core/artifact/GriffonController;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getActionName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFullyQualifiedName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEnabled" desc="()Z"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEnabled" desc="(Z)V"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="([Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="()V"><counter type="INSTRUCTION" missed="8" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="93"/><counter type="BRANCH" missed="3" covered="1"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/controller/AbstractActionInterceptor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="configure" desc="(Lgriffon/core/artifact/GriffonController;Ljava/lang/String;Ljava/lang/reflect/Method;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="before" desc="(Lgriffon/core/artifact/GriffonController;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="after" desc="(Lgriffon/core/controller/ActionExecutionStatus;Lgriffon/core/artifact/GriffonController;Ljava/lang/String;[Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exception" desc="(Ljava/lang/Exception;Lgriffon/core/artifact/GriffonController;Ljava/lang/String;[Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="abortActionExecution" desc="()Lgriffon/core/controller/AbortActionExecution;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="qualifyActionName" desc="(Lgriffon/core/artifact/GriffonController;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/controller/DefaultActionManager"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doConfigureAction" desc="(Lgriffon/core/controller/Action;Lgriffon/core/artifact/GriffonController;Ljava/lang/String;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createControllerAction" desc="(Lgriffon/core/artifact/GriffonController;Ljava/lang/String;)Lgriffon/core/controller/Action;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/controller/AbstractActionManager"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findActionAsMethod" desc="(Lgriffon/core/artifact/GriffonController;Ljava/lang/String;)Ljava/lang/reflect/Method;"><counter type="INSTRUCTION" missed="2" covered="37"/><counter type="BRANCH" missed="4" covered="6"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfiguration" desc="()Lgriffon/core/Configuration;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessageSource" desc="()Lgriffon/core/i18n/MessageSource;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUiThreadManager" desc="()Lgriffon/core/threading/UIThreadManager;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getThreadingPolicies" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="actionsFor" desc="(Lgriffon/core/artifact/GriffonController;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="actionFor" desc="(Lgriffon/core/artifact/GriffonController;Ljava/lang/String;)Lgriffon/core/controller/Action;"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createActions" desc="(Lgriffon/core/artifact/GriffonController;)V"><counter type="INSTRUCTION" missed="30" covered="77"/><counter type="BRANCH" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrapAction" desc="(Lgriffon/core/controller/Action;Ljava/lang/reflect/Method;)Lorg/codehaus/griffon/runtime/core/controller/AbstractActionManager$ActionWrapper;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateActions" desc="()V"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="updateActions" desc="(Lgriffon/core/artifact/GriffonController;)V"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="updateAction" desc="(Lgriffon/core/controller/Action;)V"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="updateAction" desc="(Lgriffon/core/artifact/GriffonController;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeAction" desc="(Lgriffon/core/controller/Action;[Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="injectFromContext" desc="(Lgriffon/core/controller/Action;[Ljava/lang/Object;)[Ljava/lang/Object;"><counter type="INSTRUCTION" missed="110" covered="23"/><counter type="BRANCH" missed="17" covered="3"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invokeAction" desc="(Lgriffon/core/artifact/GriffonController;Ljava/lang/String;[Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doInvokeAction" desc="(Lgriffon/core/artifact/GriffonController;Ljava/lang/String;[Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="10" covered="27"/><counter type="BRANCH" missed="4" covered="4"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invokeAction" desc="(Lgriffon/core/artifact/GriffonController;Ljava/lang/String;Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="15" covered="52"/><counter type="BRANCH" missed="4" covered="4"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveThreadingPolicy" desc="(Lgriffon/core/artifact/GriffonController;Ljava/lang/String;)Lgriffon/transform/Threading$Policy;"><counter type="INSTRUCTION" missed="4" covered="18"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveThreadingPolicy" desc="(Lgriffon/core/artifact/GriffonController;)Lgriffon/transform/Threading$Policy;"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveThreadingPolicy" desc="()Lgriffon/transform/Threading$Policy;"><counter type="INSTRUCTION" missed="127" covered="9"/><counter type="BRANCH" missed="45" covered="1"/><counter type="COMPLEXITY" missed="30" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isThreadingDisabled" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="7" covered="39"/><counter type="BRANCH" missed="4" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addActionHandler" desc="(Lgriffon/core/controller/ActionHandler;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addActionInterceptor" desc="(Lgriffon/core/controller/ActionInterceptor;)V"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createAndConfigureAction" desc="(Lgriffon/core/artifact/GriffonController;Ljava/lang/String;)Lgriffon/core/controller/Action;"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalizeName" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="9" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="msg" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="16" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="446" covered="514"/><counter type="BRANCH" missed="95" covered="33"/><counter type="COMPLEXITY" missed="75" covered="26"/><counter type="METHOD" missed="7" covered="22"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/controller/DefaultAction$2"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/controller/DefaultAction;Lgriffon/core/threading/UIThreadManager;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="propertyChange" desc="(Ljava/beans/PropertyChangeEvent;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/controller/DefaultAction$1"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/controller/DefaultAction;Lgriffon/core/controller/ActionManager;Lgriffon/core/artifact/GriffonController;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/controller/DefaultAction$2$1"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/controller/DefaultAction$2;Ljava/beans/PropertyChangeEvent;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/controller/NoopActionManager"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="actionsFor" desc="(Lgriffon/core/artifact/GriffonController;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="actionFor" desc="(Lgriffon/core/artifact/GriffonController;Ljava/lang/String;)Lgriffon/core/controller/Action;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createActions" desc="(Lgriffon/core/artifact/GriffonController;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="normalizeName" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="updateActions" desc="()V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="updateActions" desc="(Lgriffon/core/artifact/GriffonController;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="updateAction" desc="(Lgriffon/core/controller/Action;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="updateAction" desc="(Lgriffon/core/artifact/GriffonController;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeAction" desc="(Lgriffon/core/artifact/GriffonController;Ljava/lang/String;[Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeAction" desc="(Lgriffon/core/controller/Action;[Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addActionHandler" desc="(Lgriffon/core/controller/ActionHandler;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addActionInterceptor" desc="(Lgriffon/core/controller/ActionInterceptor;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/controller/AbstractActionHandler"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="update" desc="(Lgriffon/core/controller/Action;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="configure" desc="(Lgriffon/core/controller/Action;Ljava/lang/reflect/Method;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="before" desc="(Lgriffon/core/controller/Action;[Ljava/lang/Object;)[Ljava/lang/Object;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="after" desc="(Lgriffon/core/controller/ActionExecutionStatus;Lgriffon/core/controller/Action;[Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exception" desc="(Ljava/lang/Exception;Lgriffon/core/controller/Action;[Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="abortActionExecution" desc="()Lgriffon/core/controller/AbortActionExecution;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/controller/AbstractActionManager$ActionWrapper"><method name="&lt;init&gt;" desc="(Lgriffon/core/controller/Action;Ljava/lang/reflect/Method;)V"><counter type="INSTRUCTION" missed="86" covered="28"/><counter type="BRANCH" missed="14" covered="2"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="86" covered="28"/><counter type="BRANCH" missed="14" covered="2"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/controller/DefaultAction"><method name="&lt;init&gt;" desc="(Lgriffon/core/threading/UIThreadManager;Lgriffon/core/controller/ActionManager;Lgriffon/core/artifact/GriffonController;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getToolkitAction" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doExecute" desc="([Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doInitialize" desc="()V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/controller/AbstractActionManager$ArgInfo"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/controller/DefaultToolkitAction"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setName" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRunnable" desc="()Ljava/lang/Runnable;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRunnable" desc="(Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="()V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/controller/AbstractActionManager$ActionCache"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lgriffon/core/artifact/GriffonController;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="6" covered="37"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Lgriffon/core/artifact/GriffonController;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="22" covered="31"/><counter type="BRANCH" missed="4" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allActions" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="65" covered="76"/><counter type="BRANCH" missed="7" covered="5"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/controller/ActionDecorator"><method name="&lt;init&gt;" desc="(Lgriffon/core/controller/Action;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getActionName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFullyQualifiedName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setName" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEnabled" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setEnabled" desc="(Z)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActionManager" desc="()Lgriffon/core/controller/ActionManager;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getController" desc="()Lgriffon/core/artifact/GriffonController;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getToolkitAction" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="([Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="25"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="7" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="1017" covered="893"/><counter type="BRANCH" missed="132" covered="48"/><counter type="COMPLEXITY" missed="159" covered="48"/><counter type="METHOD" missed="66" covered="43"/><counter type="CLASS" missed="10" covered="7"/></package><package name="griffon/javafx/editors"><class name="griffon/javafx/editors/InsetsPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsText" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsList" desc="(Ljava/util/List;)V"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsMap" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseValue" desc="(Ljava/lang/Object;)D"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)D"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/Number;)D"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMapValue" desc="(Ljava/util/Map;Ljava/lang/String;D)D"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsNumber" desc="(Ljava/lang/Number;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="336" covered="3"/><counter type="BRANCH" missed="42" covered="0"/><counter type="COMPLEXITY" missed="34" covered="1"/><counter type="METHOD" missed="10" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/editors/GraphicPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleWithImagePropertyEditor" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsClassWithArg" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="161" covered="8"/><counter type="BRANCH" missed="16" covered="0"/><counter type="COMPLEXITY" missed="12" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/editors/Point2DPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsText" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsList" desc="(Ljava/util/List;)V"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsMap" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseValue" desc="(Ljava/lang/Object;)D"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)D"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/Number;)D"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMapValue" desc="(Ljava/util/Map;Ljava/lang/String;D)D"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsNumber" desc="(Ljava/lang/Number;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="283" covered="3"/><counter type="BRANCH" missed="36" covered="0"/><counter type="COMPLEXITY" missed="29" covered="1"/><counter type="METHOD" missed="10" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/editors/PaintPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsText" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="3"/><counter type="BRANCH" missed="14" covered="0"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/editors/ImagePropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="52" covered="8"/><counter type="BRANCH" missed="13" covered="1"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsFile" desc="(Ljava/io/File;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsURL" desc="(Ljava/net/URL;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsURI" desc="(Ljava/net/URI;)V"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsInputStream" desc="(Ljava/io/InputStream;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsClassWithArg" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="224" covered="11"/><counter type="BRANCH" missed="23" covered="1"/><counter type="COMPLEXITY" missed="18" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/editors/ColorPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="format" desc="(Ljavafx/scene/paint/Color;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsText" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveFormatter" desc="()Lgriffon/core/formatters/Formatter;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsList" desc="(Ljava/util/List;)V"><counter type="INSTRUCTION" missed="101" covered="0"/><counter type="BRANCH" missed="11" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsMap" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)D"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/Number;)D"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMapValue" desc="(Ljava/util/Map;Ljava/lang/String;D)D"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsNumber" desc="(Ljava/lang/Number;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="322" covered="3"/><counter type="BRANCH" missed="41" covered="0"/><counter type="COMPLEXITY" missed="32" covered="1"/><counter type="METHOD" missed="11" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/editors/Rectangle2DPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsText" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsList" desc="(Ljava/util/List;)V"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsMap" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseValue" desc="(Ljava/lang/Object;)D"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)D"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/Number;)D"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMapValue" desc="(Ljava/util/Map;Ljava/lang/String;D)D"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="297" covered="3"/><counter type="BRANCH" missed="34" covered="0"/><counter type="COMPLEXITY" missed="26" covered="1"/><counter type="METHOD" missed="9" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/editors/LinearGradientPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsText" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsList" desc="(Ljava/util/List;)V"><counter type="INSTRUCTION" missed="89" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsMap" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseCyclicMethod" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljavafx/scene/paint/CycleMethod;"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)D"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseValue" desc="(Ljava/lang/Object;)D"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/Number;)D"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMapValue" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="343" covered="3"/><counter type="BRANCH" missed="35" covered="0"/><counter type="COMPLEXITY" missed="28" covered="1"/><counter type="METHOD" missed="10" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/editors/Dimension2DPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsText" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsList" desc="(Ljava/util/List;)V"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsMap" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseValue" desc="(Ljava/lang/Object;)D"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)D"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/Number;)D"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMapValue" desc="(Ljava/util/Map;Ljava/lang/String;D)D"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsNumber" desc="(Ljava/lang/Number;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="293" covered="3"/><counter type="BRANCH" missed="38" covered="0"/><counter type="COMPLEXITY" missed="30" covered="1"/><counter type="METHOD" missed="10" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/editors/RadialGradientPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsText" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsList" desc="(Ljava/util/List;)V"><counter type="INSTRUCTION" missed="98" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsMap" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="103" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseCyclicMethod" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljavafx/scene/paint/CycleMethod;"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)D"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseValue" desc="(Ljava/lang/Object;)D"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/Number;)D"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMapValue" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="362" covered="3"/><counter type="BRANCH" missed="35" covered="0"/><counter type="COMPLEXITY" missed="28" covered="1"/><counter type="METHOD" missed="10" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="2716" covered="43"/><counter type="BRANCH" missed="314" covered="1"/><counter type="COMPLEXITY" missed="247" covered="11"/><counter type="METHOD" missed="83" covered="11"/><counter type="CLASS" missed="0" covered="10"/></package><package name="org/codehaus/griffon/runtime/injection"><class name="org/codehaus/griffon/runtime/injection/InstanceTracker"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInjector" desc="(Lcom/google/inject/Injector;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInjector" desc="()Lcom/google/inject/Injector;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="track" desc="(Lcom/google/inject/Binding;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="20" covered="14"/><counter type="BRANCH" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="release" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="releaseAll" desc="()V"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="54"/><counter type="BRANCH" missed="6" covered="2"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/injection/GuiceInjector$1"><method name="&lt;init&gt;" desc="(Ljava/lang/Iterable;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configure" desc="()V"><counter type="INSTRUCTION" missed="12" covered="45"/><counter type="BRANCH" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleBinding" desc="(Lgriffon/core/injection/Binding;)Lcom/google/inject/binder/LinkedBindingBuilder;"><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleTargetBinding" desc="(Lgriffon/core/injection/TargetBinding;)V"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleInstanceBinding" desc="(Lgriffon/core/injection/InstanceBinding;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleProviderTypeBinding" desc="(Lgriffon/core/injection/ProviderTypeBinding;)V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleProviderBinding" desc="(Lgriffon/core/injection/ProviderBinding;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="133"/><counter type="BRANCH" missed="4" covered="20"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/injection/GuiceInjectorFactory$3"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/injection/GuiceInjectorFactory;Lorg/codehaus/griffon/runtime/core/injection/InjectorProvider;Lcom/google/inject/spi/InjectionListener;Lcom/google/inject/spi/InjectionListener;Lorg/codehaus/griffon/runtime/injection/InstanceTracker;)V"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configure" desc="()V"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/injection/GuiceInjectorFactory$2"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/injection/GuiceInjectorFactory;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterInjection" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/injection/GuiceInjectorFactory$1"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/injection/GuiceInjectorFactory;Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterInjection" desc="(Lgriffon/core/artifact/GriffonArtifact;)V"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/injection/GuiceInjector"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/injection/InstanceTracker;)V"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="moduleFromBindings" desc="(Ljava/lang/Iterable;)Lcom/google/inject/Module;"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstance" desc="(Ljava/lang/Class;Ljava/lang/annotation/Annotation;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstances" desc="(Ljava/lang/Class;)Ljava/util/Collection;"><counter type="INSTRUCTION" missed="28" covered="42"/><counter type="BRANCH" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQualifiedInstances" desc="(Ljava/lang/Class;)Ljava/util/Collection;"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="translate" desc="(Ljava/lang/annotation/Annotation;)Ljava/lang/annotation/Annotation;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="injectMembers" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="16" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDelegateInjector" desc="()Lcom/google/inject/Injector;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="release" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V"><counter type="INSTRUCTION" missed="10" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isClosed" desc="()Z"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="165" covered="165"/><counter type="BRANCH" missed="12" covered="10"/><counter type="COMPLEXITY" missed="12" covered="11"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/injection/GuiceInjectorFactory"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createInjector" desc="(Lgriffon/core/GriffonApplication;Ljava/lang/Iterable;)Lorg/codehaus/griffon/runtime/injection/GuiceInjector;"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createModules" desc="(Lgriffon/core/GriffonApplication;Lorg/codehaus/griffon/runtime/core/injection/InjectorProvider;Ljava/lang/Iterable;)Lorg/codehaus/griffon/runtime/injection/GuiceInjector;"><counter type="INSTRUCTION" missed="13" covered="74"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="104"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/injection/MethodUtils"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasMethodAnnotatedwith" desc="(Ljava/lang/Object;Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="6" covered="34"/><counter type="BRANCH" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invokeAnnotatedMethod" desc="(Ljava/lang/Object;Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="35" covered="43"/><counter type="BRANCH" missed="6" covered="6"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildCause" desc="(Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/util/List;)Ljava/lang/Throwable;"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="82" covered="77"/><counter type="BRANCH" missed="11" covered="11"/><counter type="COMPLEXITY" missed="9" covered="6"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/injection/MethodUtils$1"><method name="&lt;init&gt;" desc="(Ljava/lang/reflect/Method;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/injection/GuiceInjectorFactory$3$1"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/injection/GuiceInjectorFactory$3;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Lcom/google/inject/TypeLiteral;)Z"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/injection/GuiceInjectorFactory$3$2"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/injection/GuiceInjectorFactory$3;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hear" desc="(Lcom/google/inject/TypeLiteral;Lcom/google/inject/spi/TypeEncounter;)V"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/injection/GuiceInjectorFactory$3$3"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/injection/GuiceInjectorFactory$3;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hear" desc="(Lcom/google/inject/TypeLiteral;Lcom/google/inject/spi/TypeEncounter;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/injection/GuiceInjectorFactory$3$4"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/injection/GuiceInjectorFactory$3;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onProvision" desc="(Lcom/google/inject/spi/ProvisionListener$ProvisionInvocation;)V"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="388" covered="686"/><counter type="BRANCH" missed="35" covered="45"/><counter type="COMPLEXITY" missed="34" covered="55"/><counter type="METHOD" missed="9" covered="40"/><counter type="CLASS" missed="1" covered="12"/></package><package name="griffon/core"><class name="griffon/core/GriffonExceptionHandler"><method name="addClassTest" desc="(Lgriffon/core/CallableWithArgs;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getApplication" desc="()Lgriffon/core/GriffonApplication;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uncaughtException" desc="(Ljava/lang/Thread;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handle" desc="(Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sanitize" desc="(Ljava/lang/Throwable;)Ljava/lang/Throwable;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sanitize" desc="([Ljava/lang/StackTraceElement;)[Ljava/lang/StackTraceElement;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isOutputEnabled" desc="()Z"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="configure" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="registerExceptionHandler" desc="()V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleThrowable" desc="(Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deepSanitize" desc="(Ljava/lang/Throwable;)Ljava/lang/Throwable;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doSanitize" desc="(Ljava/lang/Throwable;)Ljava/lang/Throwable;"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isApplicationClass" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="269" covered="33"/><counter type="BRANCH" missed="28" covered="0"/><counter type="COMPLEXITY" missed="28" covered="2"/><counter type="METHOD" missed="14" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/ObservableContext$ContextEvent$Type"><method name="values" desc="()[Lgriffon/core/ObservableContext$ContextEvent$Type;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgriffon/core/ObservableContext$ContextEvent$Type;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/ApplicationEvent"><method name="values" desc="()[Lgriffon/core/ApplicationEvent;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgriffon/core/ApplicationEvent;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="257"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="284"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/ObservableContext$ContextEvent"><method name="&lt;init&gt;" desc="(Lgriffon/core/ObservableContext$ContextEvent$Type;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Lgriffon/core/ObservableContext$ContextEvent$Type;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKey" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOldValue" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNewValue" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="178" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><counter type="INSTRUCTION" missed="504" covered="317"/><counter type="BRANCH" missed="54" covered="0"/><counter type="COMPLEXITY" missed="55" covered="6"/><counter type="METHOD" missed="28" covered="6"/><counter type="CLASS" missed="2" covered="2"/></package><package name="org/codehaus/griffon/runtime/javafx/artifact"><class name="org/codehaus/griffon/runtime/javafx/artifact/AbstractJavaFXGriffonView"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadFromFXML" desc="()Ljavafx/scene/Node;"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadFromFXML" desc="(Ljava/lang/String;)Ljavafx/scene/Node;"><counter type="INSTRUCTION" missed="19" covered="83"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveBasename" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectActions" desc="(Ljava/lang/Object;Lgriffon/core/artifact/GriffonController;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toolkitActionFor" desc="(Lgriffon/core/artifact/GriffonController;Ljava/lang/String;)Lgriffon/javafx/support/JavaFXAction;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$loadFromFXML$0" desc="(Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="36" covered="124"/><counter type="BRANCH" missed="6" covered="4"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="36" covered="124"/><counter type="BRANCH" missed="6" covered="4"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/codehaus/griffon/runtime/core/storage"><class name="org/codehaus/griffon/runtime/core/storage/DefaultObjectStorage"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKeys" desc="()[Ljava/lang/String;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValues" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveKey" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/storage/AbstractObjectFactory"><method name="&lt;init&gt;" desc="(Lgriffon/core/Configuration;Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfiguration" desc="()Lgriffon/core/Configuration;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getApplication" desc="()Lgriffon/core/GriffonApplication;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="event" desc="(Ljava/lang/String;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="narrowConfig" desc="(Ljava/lang/String;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><counter type="INSTRUCTION" missed="142" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="2" covered="0"/></package><package name="griffon/core/artifact"><class name="griffon/core/artifact/ArtifactManager"><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/artifact/GriffonClass"><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="2" covered="0"/></package><package name="griffon/javafx/support"><class name="griffon/javafx/support/AbstractUIThreadAwareProperty"><method name="&lt;init&gt;" desc="(Ljavafx/beans/property/Property;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDelegate" desc="()Ljavafx/beans/property/Property;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unbind" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBound" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bindBidirectional" desc="(Ljavafx/beans/property/Property;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unbindBidirectional" desc="(Ljavafx/beans/property/Property;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBean" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="133" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwareListChangeListener"><method name="&lt;init&gt;" desc="(Ljavafx/collections/ListChangeListener;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onChanged" desc="(Ljavafx/collections/ListChangeListener$Change;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$onChanged$0" desc="(Ljavafx/collections/ListChangeListener$Change;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwareObservableBooleanValue"><method name="&lt;init&gt;" desc="(Ljavafx/beans/value/ObservableBooleanValue;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Z"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwareChangeListener"><method name="&lt;init&gt;" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="changed" desc="(Ljavafx/beans/value/ObservableValue;Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$changed$0" desc="(Ljavafx/beans/value/ObservableValue;Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/DelegatingObservableSet"><method name="&lt;init&gt;" desc="(Ljavafx/collections/ObservableSet;)V"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDelegate" desc="()Ljavafx/collections/ObservableSet;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getListener" desc="()Ljavafx/collections/SetChangeListener;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Ljava/util/Iterator;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()[Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="([Ljava/lang/Object;)[Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAll" desc="(Ljava/util/Collection;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Ljava/util/Collection;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retainAll" desc="(Ljava/util/Collection;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAll" desc="(Ljava/util/Collection;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="99" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/JavaFXAction"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onActionProperty" desc="()Ljavafx/beans/property/ObjectProperty;"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOnAction" desc="(Ljavafx/event/EventHandler;)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOnAction" desc="()Ljavafx/event/EventHandler;"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nameProperty" desc="()Ljavafx/beans/property/StringProperty;"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="descriptionProperty" desc="()Ljavafx/beans/property/StringProperty;"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDescription" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enabledProperty" desc="()Ljavafx/beans/property/BooleanProperty;"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEnabled" desc="(Z)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnabled" desc="()Z"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEnabled" desc="()Z"><counter type="INSTRUCTION" missed="1" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAccelerator" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAccelerator" desc="(Ljavafx/scene/input/KeyCombination;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAccelerator" desc="()Ljavafx/scene/input/KeyCombination;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="acceleratorProperty" desc="()Ljavafx/beans/property/ObjectProperty;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iconProperty" desc="()Ljavafx/beans/property/StringProperty;"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIcon" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIcon" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="imageProperty" desc="()Ljavafx/beans/property/ObjectProperty;"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setImage" desc="(Ljavafx/scene/image/Image;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getImage" desc="()Ljavafx/scene/image/Image;"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="graphicProperty" desc="()Ljavafx/beans/property/ObjectProperty;"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setGraphic" desc="(Ljavafx/scene/Node;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGraphic" desc="()Ljavafx/scene/Node;"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selectedProperty" desc="()Ljavafx/beans/property/BooleanProperty;"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSelected" desc="(Z)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSelected" desc="()Z"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSelected" desc="()Z"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visibleProperty" desc="()Ljavafx/beans/property/BooleanProperty;"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVisible" desc="(Z)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVisible" desc="()Z"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isVisible" desc="()Z"><counter type="INSTRUCTION" missed="1" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="styleClassProperty" desc="()Ljavafx/beans/property/StringProperty;"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStyleClass" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStyleClass" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="styleProperty" desc="()Ljavafx/beans/property/StringProperty;"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStyle" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStyle" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="graphicStyleClassProperty" desc="()Ljavafx/beans/property/StringProperty;"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setGraphicStyleClass" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGraphicStyleClass" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="graphicStyleProperty" desc="()Ljavafx/beans/property/StringProperty;"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setGraphicStyle" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGraphicStyle" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="134" covered="304"/><counter type="BRANCH" missed="35" covered="39"/><counter type="COMPLEXITY" missed="40" covered="44"/><counter type="METHOD" missed="15" covered="32"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/support/MappingObservableList"><method name="&lt;init&gt;" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Function;)V"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljavafx/collections/ObservableList;Ljavafx/beans/value/ObservableValue;)V"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveMapper" desc="()Ljava/util/function/Function;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSourceIndex" desc="(I)I"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceChanged" desc="(Ljavafx/collections/ListChangeListener$Change;)V"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="permutate" desc="(Ljavafx/collections/ListChangeListener$Change;)V"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Ljavafx/collections/ListChangeListener$Change;)V"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="update" desc="(Ljavafx/collections/ListChangeListener$Change;)V"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljavafx/collections/ListChangeListener$Change;)V"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljavafx/collections/ListChangeListener$Change;)V"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="updateAll" desc="()V"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;Ljava/util/function/Function;)V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="444" covered="0"/><counter type="BRANCH" missed="36" covered="0"/><counter type="COMPLEXITY" missed="32" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/ObservableSetBase"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/collections/SetChangeListener;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/collections/SetChangeListener;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fireChange" desc="(Ljavafx/collections/SetChangeListener$Change;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasListeners" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwareObservableStringValue"><method name="&lt;init&gt;" desc="(Ljavafx/beans/value/ObservableStringValue;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwareSetProperty"><method name="&lt;init&gt;" desc="(Ljavafx/beans/property/SetProperty;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeProperty" desc="()Ljavafx/beans/property/ReadOnlyIntegerProperty;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emptyProperty" desc="()Ljavafx/beans/property/ReadOnlyBooleanProperty;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bind" desc="(Ljavafx/beans/value/ObservableValue;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unbind" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBound" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBean" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljavafx/collections/ObservableSet;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljavafx/collections/ObservableSet;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/collections/SetChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/collections/SetChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$set$0" desc="(Ljavafx/collections/ObservableSet;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="187" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="COMPLEXITY" missed="29" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/JavaFXUtils"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGriffonActionId" desc="(Ljavafx/scene/Node;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGriffonActionId" desc="(Ljavafx/scene/Node;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setGriffonActionId" desc="(Ljavafx/scene/control/MenuItem;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGriffonActionId" desc="(Ljavafx/scene/control/MenuItem;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createJavaFXThreadProxyList" desc="(Ljavafx/collections/ObservableList;)Ljavafx/collections/ObservableList;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createJavaFXThreadProxySet" desc="(Ljavafx/collections/ObservableSet;)Ljavafx/collections/ObservableSet;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createJavaFXThreadProxyMap" desc="(Ljavafx/collections/ObservableMap;)Ljavafx/collections/ObservableMap;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractProperty" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljavafx/beans/property/Property;"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="connectActions" desc="(Ljava/lang/Object;Lgriffon/core/artifact/GriffonController;)V"><counter type="INSTRUCTION" missed="8" covered="74"/><counter type="BRANCH" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configureControl" desc="(Ljava/lang/Object;Lgriffon/javafx/support/JavaFXAction;)V"><counter type="INSTRUCTION" missed="26" covered="9"/><counter type="BRANCH" missed="5" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrapAction" desc="(Lgriffon/javafx/support/JavaFXAction;)Ljavafx/event/EventHandler;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runInsideUIThread" desc="(Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalizeStyle" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="configure" desc="(Ljavafx/scene/control/ToggleButton;Lgriffon/javafx/support/JavaFXAction;)V"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="configure" desc="(Ljavafx/scene/control/CheckBox;Lgriffon/javafx/support/JavaFXAction;)V"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="configure" desc="(Ljavafx/scene/control/RadioButton;Lgriffon/javafx/support/JavaFXAction;)V"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="configure" desc="(Ljavafx/scene/control/ButtonBase;Lgriffon/javafx/support/JavaFXAction;)V"><counter type="INSTRUCTION" missed="12" covered="117"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configure" desc="(Ljavafx/scene/control/CheckMenuItem;Lgriffon/javafx/support/JavaFXAction;)V"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="configure" desc="(Ljavafx/scene/control/RadioMenuItem;Lgriffon/javafx/support/JavaFXAction;)V"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="configure" desc="(Ljavafx/scene/control/MenuItem;Lgriffon/javafx/support/JavaFXAction;)V"><counter type="INSTRUCTION" missed="129" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setStyle" desc="(Ljavafx/scene/Node;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="32" covered="8"/><counter type="BRANCH" missed="5" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStyle" desc="(Ljavafx/scene/control/MenuItem;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGraphicStyle" desc="(Ljavafx/scene/control/ButtonBase;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="8" covered="8"/><counter type="BRANCH" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setGraphicStyle" desc="(Ljavafx/scene/control/MenuItem;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setStyleClass" desc="(Ljavafx/scene/Node;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStyleClass" desc="(Ljavafx/scene/Node;Ljava/lang/String;Z)V"><counter type="INSTRUCTION" missed="8" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStyleClass" desc="(Ljavafx/scene/control/MenuItem;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setStyleClass" desc="(Ljavafx/scene/control/MenuItem;Ljava/lang/String;Z)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGraphicStyleClass" desc="(Ljavafx/scene/control/ButtonBase;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setGraphicStyleClass" desc="(Ljavafx/scene/control/ButtonBase;Ljava/lang/String;Z)V"><counter type="INSTRUCTION" missed="12" covered="8"/><counter type="BRANCH" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setGraphicStyleClass" desc="(Ljavafx/scene/control/MenuItem;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGraphicStyleClass" desc="(Ljavafx/scene/control/MenuItem;Ljava/lang/String;Z)V"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyStyleClass" desc="(Ljava/lang/String;Ljavafx/collections/ObservableList;Z)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTooltip" desc="(Ljavafx/scene/control/Control;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIcon" desc="(Ljavafx/scene/control/Labeled;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIcon" desc="(Ljavafx/scene/control/MenuItem;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGraphic" desc="(Ljavafx/scene/control/Labeled;Ljavafx/scene/image/Image;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGraphic" desc="(Ljavafx/scene/control/MenuItem;Ljavafx/scene/image/Image;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGraphic" desc="(Ljavafx/scene/control/Labeled;Ljavafx/scene/Node;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGraphic" desc="(Ljavafx/scene/control/MenuItem;Ljavafx/scene/Node;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveIcon" desc="(Ljava/lang/String;)Ljavafx/scene/Node;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsClassWithArg" desc="(Ljava/lang/String;)Ljavafx/scene/Node;"><counter type="INSTRUCTION" missed="82" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findNode" desc="(Ljavafx/scene/Node;Ljava/lang/String;)Ljavafx/scene/Node;"><counter type="INSTRUCTION" missed="193" covered="0"/><counter type="BRANCH" missed="46" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findElement" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="240" covered="77"/><counter type="BRANCH" missed="56" covered="18"/><counter type="COMPLEXITY" missed="34" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findElement" desc="(Ljava/lang/Object;Lgriffon/javafx/support/JavaFXUtils$Predicate;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="315" covered="0"/><counter type="BRANCH" missed="74" covered="0"/><counter type="COMPLEXITY" missed="38" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findElements" desc="(Ljava/lang/Object;Lgriffon/javafx/support/JavaFXUtils$Predicate;)Ljava/util/Collection;"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findElements" desc="(Ljava/lang/Object;Lgriffon/javafx/support/JavaFXUtils$Predicate;Ljava/util/Collection;)V"><counter type="INSTRUCTION" missed="200" covered="68"/><counter type="BRANCH" missed="35" covered="15"/><counter type="COMPLEXITY" missed="24" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWindowAncestor" desc="(Ljava/lang/Object;)Ljavafx/stage/Window;"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="illegalValue" desc="(Ljava/lang/Object;Ljava/lang/Class;)Lgriffon/core/editors/ValueConversionException;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="illegalValue" desc="(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Exception;)Lgriffon/core/editors/ValueConversionException;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setGraphic$61" desc="(Ljavafx/scene/Node;Ljavafx/scene/control/MenuItem;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setGraphic$60" desc="(Ljavafx/scene/Node;Ljavafx/scene/control/Labeled;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setGraphic$59" desc="(Ljavafx/scene/image/Image;Ljavafx/scene/control/MenuItem;)V"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setGraphic$58" desc="(Ljavafx/scene/image/Image;Ljavafx/scene/control/Labeled;)V"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setIcon$57" desc="(Ljavafx/scene/control/MenuItem;Ljavafx/scene/Node;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setIcon$56" desc="(Ljavafx/scene/control/Labeled;Ljavafx/scene/Node;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setTooltip$55" desc="(Ljava/lang/String;Ljavafx/scene/control/Control;)V"><counter type="INSTRUCTION" missed="23" covered="4"/><counter type="BRANCH" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$applyStyleClass$54" desc="(Ljava/lang/String;ZLjavafx/collections/ObservableList;)V"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$53" desc="(Ljavafx/scene/control/MenuItem;Ljavafx/beans/value/ObservableValue;Ljava/lang/String;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$52" desc="(Ljavafx/scene/control/MenuItem;Ljavafx/beans/value/ObservableValue;Ljava/lang/String;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$51" desc="(Ljavafx/scene/control/MenuItem;Ljavafx/beans/value/ObservableValue;Ljava/lang/String;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$50" desc="(Ljavafx/scene/control/MenuItem;Ljavafx/beans/value/ObservableValue;Ljava/lang/String;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$49" desc="(Ljavafx/scene/control/MenuItem;Lgriffon/javafx/support/JavaFXAction;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$48" desc="(Ljavafx/scene/control/MenuItem;Ljavafx/beans/value/ObservableValue;Ljava/lang/Boolean;Ljava/lang/Boolean;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$null$47" desc="(Ljavafx/scene/control/MenuItem;Ljava/lang/Boolean;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$46" desc="(Ljavafx/scene/control/MenuItem;Lgriffon/javafx/support/JavaFXAction;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$45" desc="(Ljavafx/scene/control/MenuItem;Ljavafx/beans/value/ObservableValue;Ljavafx/scene/input/KeyCombination;Ljavafx/scene/input/KeyCombination;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$null$44" desc="(Ljavafx/scene/control/MenuItem;Ljavafx/scene/input/KeyCombination;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$43" desc="(Ljavafx/scene/control/MenuItem;Lgriffon/javafx/support/JavaFXAction;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$42" desc="(Ljavafx/scene/control/MenuItem;Ljavafx/beans/value/ObservableValue;Ljava/lang/Boolean;Ljava/lang/Boolean;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$null$41" desc="(Ljavafx/scene/control/MenuItem;Ljava/lang/Boolean;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$40" desc="(Ljavafx/scene/control/MenuItem;Ljavafx/beans/value/ObservableValue;Ljavafx/scene/Node;Ljavafx/scene/Node;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$39" desc="(Ljavafx/scene/control/MenuItem;Ljavafx/beans/value/ObservableValue;Ljavafx/scene/image/Image;Ljavafx/scene/image/Image;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$38" desc="(Ljavafx/scene/control/MenuItem;Ljavafx/beans/value/ObservableValue;Ljava/lang/String;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$37" desc="(Ljavafx/scene/control/MenuItem;Lgriffon/javafx/support/JavaFXAction;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$36" desc="(Ljavafx/scene/control/MenuItem;Ljavafx/beans/value/ObservableValue;Ljava/lang/String;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$null$35" desc="(Ljavafx/scene/control/MenuItem;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$34" desc="(Ljavafx/scene/control/MenuItem;Ljavafx/beans/value/ObservableValue;Ljavafx/event/EventHandler;Ljavafx/event/EventHandler;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$33" desc="(Ljavafx/scene/control/RadioMenuItem;Lgriffon/javafx/support/JavaFXAction;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$32" desc="(Ljavafx/scene/control/RadioMenuItem;Ljavafx/beans/value/ObservableValue;Ljava/lang/Boolean;Ljava/lang/Boolean;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$null$31" desc="(Ljavafx/scene/control/RadioMenuItem;Ljava/lang/Boolean;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$30" desc="(Ljavafx/scene/control/CheckMenuItem;Lgriffon/javafx/support/JavaFXAction;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$29" desc="(Ljavafx/scene/control/CheckMenuItem;Ljavafx/beans/value/ObservableValue;Ljava/lang/Boolean;Ljava/lang/Boolean;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$null$28" desc="(Ljavafx/scene/control/CheckMenuItem;Ljava/lang/Boolean;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$27" desc="(Ljavafx/scene/control/ButtonBase;Ljavafx/beans/value/ObservableValue;Ljava/lang/String;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$26" desc="(Ljavafx/scene/control/ButtonBase;Ljavafx/beans/value/ObservableValue;Ljava/lang/String;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$25" desc="(Ljavafx/scene/control/ButtonBase;Ljavafx/beans/value/ObservableValue;Ljava/lang/String;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$24" desc="(Ljavafx/scene/control/ButtonBase;Ljavafx/beans/value/ObservableValue;Ljava/lang/String;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$23" desc="(Ljavafx/scene/control/ButtonBase;Lgriffon/javafx/support/JavaFXAction;)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$configure$22" desc="(Ljavafx/scene/control/ButtonBase;Ljavafx/beans/value/ObservableValue;Ljava/lang/Boolean;Ljava/lang/Boolean;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$null$21" desc="(Ljavafx/scene/control/ButtonBase;Ljava/lang/Boolean;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$20" desc="(Ljavafx/scene/control/ButtonBase;Lgriffon/javafx/support/JavaFXAction;)V"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$configure$19" desc="(Ljavafx/scene/control/ButtonBase;Ljavafx/beans/value/ObservableValue;Ljava/lang/Boolean;Ljava/lang/Boolean;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$null$18" desc="(Ljavafx/scene/control/ButtonBase;Ljava/lang/Boolean;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$17" desc="(Ljavafx/scene/control/ButtonBase;Ljavafx/beans/value/ObservableValue;Ljavafx/scene/Node;Ljavafx/scene/Node;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$16" desc="(Ljavafx/scene/control/ButtonBase;Ljavafx/beans/value/ObservableValue;Ljavafx/scene/image/Image;Ljavafx/scene/image/Image;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$15" desc="(Ljavafx/scene/control/ButtonBase;Ljavafx/beans/value/ObservableValue;Ljava/lang/String;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$14" desc="(Ljavafx/scene/control/ButtonBase;Ljavafx/beans/value/ObservableValue;Ljava/lang/String;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$13" desc="(Ljavafx/scene/control/ButtonBase;Lgriffon/javafx/support/JavaFXAction;)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$configure$12" desc="(Ljavafx/scene/control/ButtonBase;Ljavafx/beans/value/ObservableValue;Ljava/lang/String;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$null$11" desc="(Ljavafx/scene/control/ButtonBase;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$10" desc="(Ljavafx/scene/control/ButtonBase;Ljavafx/beans/value/ObservableValue;Ljavafx/event/EventHandler;Ljavafx/event/EventHandler;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$9" desc="(Ljavafx/scene/control/RadioButton;Lgriffon/javafx/support/JavaFXAction;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$8" desc="(Ljavafx/scene/control/RadioButton;Ljavafx/beans/value/ObservableValue;Ljava/lang/Boolean;Ljava/lang/Boolean;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$null$7" desc="(Ljavafx/scene/control/RadioButton;Ljava/lang/Boolean;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$6" desc="(Ljavafx/scene/control/CheckBox;Lgriffon/javafx/support/JavaFXAction;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$5" desc="(Ljavafx/scene/control/CheckBox;Ljavafx/beans/value/ObservableValue;Ljava/lang/Boolean;Ljava/lang/Boolean;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$null$4" desc="(Ljavafx/scene/control/CheckBox;Ljava/lang/Boolean;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$3" desc="(Ljavafx/scene/control/ToggleButton;Lgriffon/javafx/support/JavaFXAction;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$configure$2" desc="(Ljavafx/scene/control/ToggleButton;Ljavafx/beans/value/ObservableValue;Ljava/lang/Boolean;Ljava/lang/Boolean;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$null$1" desc="(Ljavafx/scene/control/ToggleButton;Ljava/lang/Boolean;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$wrapAction$0" desc="(Lgriffon/javafx/support/JavaFXAction;Ljavafx/event/ActionEvent;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2182" covered="440"/><counter type="BRANCH" missed="315" covered="49"/><counter type="COMPLEXITY" missed="271" covered="24"/><counter type="METHOD" missed="94" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/support/UIThreadAwareObservableDoubleValue"><method name="&lt;init&gt;" desc="(Ljavafx/beans/value/ObservableDoubleValue;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()D"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwarePropertyLong"><method name="&lt;init&gt;" desc="(Ljavafx/beans/property/Property;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bind" desc="(Ljavafx/beans/value/ObservableValue;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Long;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/Long;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setValue$0" desc="(Ljava/lang/Long;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwareMapProperty"><method name="&lt;init&gt;" desc="(Ljavafx/beans/property/MapProperty;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeProperty" desc="()Ljavafx/beans/property/ReadOnlyIntegerProperty;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emptyProperty" desc="()Ljavafx/beans/property/ReadOnlyBooleanProperty;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bind" desc="(Ljavafx/beans/value/ObservableValue;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unbind" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBound" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBean" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljavafx/collections/ObservableMap;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljavafx/collections/ObservableMap;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/collections/MapChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/collections/MapChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$set$0" desc="(Ljavafx/collections/ObservableMap;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="187" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="COMPLEXITY" missed="29" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwareListProperty"><method name="&lt;init&gt;" desc="(Ljavafx/beans/property/ListProperty;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeProperty" desc="()Ljavafx/beans/property/ReadOnlyIntegerProperty;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emptyProperty" desc="()Ljavafx/beans/property/ReadOnlyBooleanProperty;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bind" desc="(Ljavafx/beans/value/ObservableValue;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unbind" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBound" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBean" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljavafx/collections/ObservableList;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljavafx/collections/ObservableList;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/collections/ListChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/collections/ListChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$set$0" desc="(Ljavafx/collections/ObservableList;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="187" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="COMPLEXITY" missed="29" covered="0"/><counter type="METHOD" missed="20" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/DelegatingObservableMap"><method name="&lt;init&gt;" desc="(Ljavafx/collections/ObservableMap;)V"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDelegate" desc="()Ljavafx/collections/ObservableMap;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getListener" desc="()Ljavafx/collections/MapChangeListener;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsValue" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsKey" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keySet" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="values" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="entrySet" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="98" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwareBooleanProperty"><method name="&lt;init&gt;" desc="(Ljavafx/beans/property/BooleanProperty;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Z)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bind" desc="(Ljavafx/beans/value/ObservableValue;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unbind" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBound" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBean" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$set$0" desc="(Z)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="146" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwareObservableValue"><method name="&lt;init&gt;" desc="(Ljavafx/beans/value/ObservableValue;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDelegate" desc="()Ljavafx/beans/value/ObservableValue;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="111" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwareFloatProperty"><method name="&lt;init&gt;" desc="(Ljavafx/beans/property/FloatProperty;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()F"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(F)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bind" desc="(Ljavafx/beans/value/ObservableValue;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unbind" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBound" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBean" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$set$0" desc="(F)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="146" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwareDoubleProperty"><method name="&lt;init&gt;" desc="(Ljavafx/beans/property/DoubleProperty;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()D"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(D)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bind" desc="(Ljavafx/beans/value/ObservableValue;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unbind" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBound" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBean" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$set$0" desc="(D)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="146" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwareLongProperty"><method name="&lt;init&gt;" desc="(Ljavafx/beans/property/LongProperty;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()J"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(J)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bind" desc="(Ljavafx/beans/value/ObservableValue;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unbind" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBound" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBean" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$set$0" desc="(J)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="146" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/JavaFXUtils$JavaFXThreadProxyObservableMap"><method name="&lt;init&gt;" desc="(Ljavafx/collections/ObservableMap;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceChanged" desc="(Ljavafx/collections/MapChangeListener$Change;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$sourceChanged$0" desc="(Ljavafx/collections/MapChangeListener$Change;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwarePropertyInteger"><method name="&lt;init&gt;" desc="(Ljavafx/beans/property/Property;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bind" desc="(Ljavafx/beans/value/ObservableValue;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/Integer;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setValue$0" desc="(Ljava/lang/Integer;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwarePropertyBoolean"><method name="&lt;init&gt;" desc="(Ljavafx/beans/property/Property;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bind" desc="(Ljavafx/beans/value/ObservableValue;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/Boolean;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setValue$0" desc="(Ljava/lang/Boolean;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwareSetChangeListener"><method name="&lt;init&gt;" desc="(Ljavafx/collections/SetChangeListener;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onChanged" desc="(Ljavafx/collections/SetChangeListener$Change;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$onChanged$0" desc="(Ljavafx/collections/SetChangeListener$Change;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/JavaFXUtils$1"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="12" covered="10"/><counter type="BRANCH" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="16"/><counter type="BRANCH" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/support/UIThreadAwarePropertyDouble"><method name="&lt;init&gt;" desc="(Ljavafx/beans/property/Property;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bind" desc="(Ljavafx/beans/value/ObservableValue;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Double;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/Double;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setValue$0" desc="(Ljava/lang/Double;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwareStringProperty"><method name="&lt;init&gt;" desc="(Ljavafx/beans/property/StringProperty;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bind" desc="(Ljavafx/beans/value/ObservableValue;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unbind" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBound" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBean" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$set$0" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="147" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwareObservableLongValue"><method name="&lt;init&gt;" desc="(Ljavafx/beans/value/ObservableLongValue;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()J"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwarePropertyFloat"><method name="&lt;init&gt;" desc="(Ljavafx/beans/property/Property;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bind" desc="(Ljavafx/beans/value/ObservableValue;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Float;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/Float;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setValue$0" desc="(Ljava/lang/Float;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/JavaFXUtils$JavaFXThreadProxyObservableList"><method name="&lt;init&gt;" desc="(Ljavafx/collections/ObservableList;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceChanged" desc="(Ljavafx/collections/ListChangeListener$Change;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$sourceChanged$0" desc="(Ljavafx/collections/ListChangeListener$Change;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwareObjectProperty"><method name="&lt;init&gt;" desc="(Ljavafx/beans/property/ObjectProperty;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bind" desc="(Ljavafx/beans/value/ObservableValue;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unbind" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBound" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBean" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$set$0" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="146" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwareObservableIntegerValue"><method name="&lt;init&gt;" desc="(Ljavafx/beans/value/ObservableIntegerValue;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/DelegatingObservableList"><method name="&lt;init&gt;" desc="(Ljavafx/collections/ObservableList;)V"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDelegate" desc="()Ljavafx/collections/ObservableList;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getListener" desc="()Ljavafx/collections/ListChangeListener;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAll" desc="([Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(II)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(I)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lastIndexOf" desc="(Ljava/lang/Object;)I"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="([Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subList" desc="(II)Ljava/util/List;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(ILjava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(ILjava/lang/Object;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAll" desc="(Ljava/util/Collection;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Ljava/util/Iterator;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAll" desc="(Ljava/util/Collection;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="([Ljava/lang/Object;)[Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Ljava/util/Collection;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retainAll" desc="([Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retainAll" desc="(Ljava/util/Collection;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAll" desc="(Ljava/util/Collection;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listIterator" desc="(I)Ljava/util/ListIterator;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(ILjava/util/Collection;)Z"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()[Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listIterator" desc="()Ljava/util/ListIterator;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="(Ljava/util/function/Consumer;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAll" desc="([Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexOf" desc="(Ljava/lang/Object;)I"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="179" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="34" covered="0"/><counter type="METHOD" missed="33" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwareIntegerProperty"><method name="&lt;init&gt;" desc="(Ljavafx/beans/property/IntegerProperty;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(I)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bind" desc="(Ljavafx/beans/value/ObservableValue;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unbind" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBound" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBean" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$set$0" desc="(I)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="146" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="16" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/BindingUtils"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToObject" desc="(Ljavafx/beans/value/ObservableStringValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToObject" desc="(Ljavafx/beans/value/ObservableBooleanValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToObject" desc="(Ljavafx/beans/value/ObservableIntegerValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToObject" desc="(Ljavafx/beans/value/ObservableLongValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToObject" desc="(Ljavafx/beans/value/ObservableFloatValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToObject" desc="(Ljavafx/beans/value/ObservableDoubleValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToBoolean" desc="(Ljavafx/beans/value/ObservableObjectValue;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToInteger" desc="(Ljavafx/beans/value/ObservableObjectValue;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToLong" desc="(Ljavafx/beans/value/ObservableObjectValue;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToFloat" desc="(Ljavafx/beans/value/ObservableObjectValue;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToDouble" desc="(Ljavafx/beans/value/ObservableObjectValue;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToString" desc="(Ljavafx/beans/value/ObservableObjectValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapList" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Function;)Ljavafx/collections/ObservableList;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapList" desc="(Ljavafx/collections/ObservableList;Ljavafx/beans/value/ObservableValue;)Ljavafx/collections/ObservableList;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapObject" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapObject" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;Ljava/lang/Object;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapObject" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapObject" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapObject" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Object;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapObject" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapBoolean" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapBoolean" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;Ljava/lang/Boolean;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapBoolean" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapBoolean" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapBoolean" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Boolean;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapBoolean" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapInteger" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapInteger" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;Ljava/lang/Integer;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapInteger" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapInteger" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapInteger" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Integer;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapInteger" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapLong" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapLong" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;Ljava/lang/Long;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapLong" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapLong" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapLong" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Long;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapLong" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapFloat" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapFloat" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;Ljava/lang/Float;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapFloat" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapFloat" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapFloat" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Float;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapFloat" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapDouble" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapDouble" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;Ljava/lang/Double;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapDouble" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapDouble" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapDouble" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Double;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapDouble" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapString" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapString" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;Ljava/lang/String;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapString" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapString" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapString" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/String;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapString" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareChangeListener" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareChangeListener" desc="(Ljavafx/beans/value/ChangeListener;)Ljavafx/beans/value/ChangeListener;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareChangeListener" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Consumer;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareChangeListener" desc="(Ljava/util/function/Consumer;)Ljavafx/beans/value/ChangeListener;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareChangeListener" desc="(Ljavafx/beans/value/ObservableValue;Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareChangeListener" desc="(Ljava/lang/Runnable;)Ljavafx/beans/value/ChangeListener;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareInvalidationListener" desc="(Ljavafx/beans/Observable;Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareInvalidationListener" desc="(Ljavafx/beans/InvalidationListener;)Ljavafx/beans/InvalidationListener;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareInvalidationListener" desc="(Ljavafx/beans/Observable;Ljava/util/function/Consumer;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareInvalidationListener" desc="(Ljava/util/function/Consumer;)Ljavafx/beans/InvalidationListener;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareInvalidationListener" desc="(Ljavafx/beans/Observable;Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareInvalidationListener" desc="(Ljava/lang/Runnable;)Ljavafx/beans/InvalidationListener;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareListChangeListener" desc="(Ljavafx/collections/ObservableList;Ljavafx/collections/ListChangeListener;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareListChangeListener" desc="(Ljavafx/collections/ListChangeListener;)Ljavafx/collections/ListChangeListener;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareListChangeListener" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Consumer;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareListChangeListener" desc="(Ljava/util/function/Consumer;)Ljavafx/collections/ListChangeListener;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareListChangeListener" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareListChangeListener" desc="(Ljava/lang/Runnable;)Ljavafx/collections/ListChangeListener;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareMapChangeListener" desc="(Ljavafx/collections/ObservableMap;Ljavafx/collections/MapChangeListener;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareMapChangeListener" desc="(Ljavafx/collections/MapChangeListener;)Ljavafx/collections/MapChangeListener;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareMapChangeListener" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Consumer;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareMapChangeListener" desc="(Ljava/util/function/Consumer;)Ljavafx/collections/MapChangeListener;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareMapChangeListener" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareMapChangeListener" desc="(Ljava/lang/Runnable;)Ljavafx/collections/MapChangeListener;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareSetChangeListener" desc="(Ljavafx/collections/ObservableSet;Ljavafx/collections/SetChangeListener;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareSetChangeListener" desc="(Ljavafx/collections/SetChangeListener;)Ljavafx/collections/SetChangeListener;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareSetChangeListener" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Consumer;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareSetChangeListener" desc="(Ljava/util/function/Consumer;)Ljavafx/collections/SetChangeListener;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareSetChangeListener" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareSetChangeListener" desc="(Ljava/lang/Runnable;)Ljavafx/collections/SetChangeListener;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareBooleanProperty" desc="(Ljavafx/beans/property/BooleanProperty;)Ljavafx/beans/property/BooleanProperty;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareIntegerProperty" desc="(Ljavafx/beans/property/IntegerProperty;)Ljavafx/beans/property/IntegerProperty;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareLongProperty" desc="(Ljavafx/beans/property/LongProperty;)Ljavafx/beans/property/LongProperty;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareFloatProperty" desc="(Ljavafx/beans/property/FloatProperty;)Ljavafx/beans/property/FloatProperty;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareDoubleProperty" desc="(Ljavafx/beans/property/DoubleProperty;)Ljavafx/beans/property/DoubleProperty;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareStringProperty" desc="(Ljavafx/beans/property/StringProperty;)Ljavafx/beans/property/StringProperty;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwarePropertyBoolean" desc="(Ljavafx/beans/property/Property;)Ljavafx/beans/property/Property;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwarePropertyInteger" desc="(Ljavafx/beans/property/Property;)Ljavafx/beans/property/Property;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwarePropertyLong" desc="(Ljavafx/beans/property/Property;)Ljavafx/beans/property/Property;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwarePropertyFloat" desc="(Ljavafx/beans/property/Property;)Ljavafx/beans/property/Property;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwarePropertyDouble" desc="(Ljavafx/beans/property/Property;)Ljavafx/beans/property/Property;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwarePropertyString" desc="(Ljavafx/beans/property/Property;)Ljavafx/beans/property/Property;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareObjectProperty" desc="(Ljavafx/beans/property/ObjectProperty;)Ljavafx/beans/property/ObjectProperty;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareListProperty" desc="(Ljavafx/beans/property/ListProperty;)Ljavafx/beans/property/ListProperty;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareSetProperty" desc="(Ljavafx/beans/property/SetProperty;)Ljavafx/beans/property/SetProperty;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareMapProperty" desc="(Ljavafx/beans/property/MapProperty;)Ljavafx/beans/property/MapProperty;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareObservable" desc="(Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/value/ObservableValue;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareObservableString" desc="(Ljavafx/beans/value/ObservableStringValue;)Ljavafx/beans/value/ObservableStringValue;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareObservableBoolean" desc="(Ljavafx/beans/value/ObservableBooleanValue;)Ljavafx/beans/value/ObservableBooleanValue;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareObservableInteger" desc="(Ljavafx/beans/value/ObservableIntegerValue;)Ljavafx/beans/value/ObservableIntegerValue;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareObservableLong" desc="(Ljavafx/beans/value/ObservableLongValue;)Ljavafx/beans/value/ObservableLongValue;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareObservableFloat" desc="(Ljavafx/beans/value/ObservableFloatValue;)Ljavafx/beans/value/ObservableFloatValue;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="uiThreadAwareObservableDouble" desc="(Ljavafx/beans/value/ObservableDoubleValue;)Ljavafx/beans/value/ObservableDoubleValue;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinList" desc="(Ljavafx/collections/ObservableList;Ljava/lang/String;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinList" desc="(Ljavafx/collections/ObservableList;Ljava/lang/String;Ljava/util/function/Function;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinList" desc="(Ljavafx/collections/ObservableList;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinList" desc="(Ljavafx/collections/ObservableList;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinSet" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/String;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinSet" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/String;Ljava/util/function/Function;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinSet" desc="(Ljavafx/collections/ObservableSet;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinSet" desc="(Ljavafx/collections/ObservableSet;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinMap" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/String;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinMap" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/String;Ljava/util/function/Function;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinMap" desc="(Ljavafx/collections/ObservableMap;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="joinMap" desc="(Ljavafx/collections/ObservableMap;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduce" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduce" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduce" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduce" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToBoolean" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToBoolean" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToBoolean" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToBoolean" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToInteger" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToInteger" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToInteger" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToInteger" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToLong" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToLong" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToLong" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToLong" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToFloat" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToFloat" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToFloat" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToFloat" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToDouble" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToDouble" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToDouble" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToDouble" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToString" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToString" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToString" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToString" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduce" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduce" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduce" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduce" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToString" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToString" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToString" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToString" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToInteger" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToInteger" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToInteger" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToInteger" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToLong" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToLong" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToLong" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToLong" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToFloat" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToFloat" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToFloat" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToFloat" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToDouble" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToDouble" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToDouble" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToDouble" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToBoolean" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToBoolean" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToBoolean" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToBoolean" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToNumber" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/NumberBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToNumber" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/NumberBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToNumber" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/NumberBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToNumber" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/NumberBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduce" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduce" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduce" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduce" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToString" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToString" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToString" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToString" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToInteger" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToInteger" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToInteger" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToInteger" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToLong" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToLong" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToLong" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToLong" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToFloat" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToFloat" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToFloat" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToFloat" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToDouble" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToDouble" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToDouble" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToDouble" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToBoolean" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToBoolean" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToBoolean" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToBoolean" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToNumber" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/NumberBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToNumber" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/NumberBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToNumber" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/NumberBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMapToNumber" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/NumberBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapBoolean" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Boolean;Ljava/util/function/BiFunction;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapBoolean" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;Ljava/util/function/BiFunction;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapBoolean" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Boolean;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapBoolean" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapInteger" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Integer;Ljava/util/function/BiFunction;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapInteger" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;Ljava/util/function/BiFunction;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapInteger" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Integer;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapInteger" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapLong" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Long;Ljava/util/function/BiFunction;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapLong" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;Ljava/util/function/BiFunction;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapLong" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Long;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapLong" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapFloat" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Float;Ljava/util/function/BiFunction;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapFloat" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;Ljava/util/function/BiFunction;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapFloat" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Float;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapFloat" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapDouble" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Double;Ljava/util/function/BiFunction;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapDouble" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;Ljava/util/function/BiFunction;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapDouble" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Double;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapDouble" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapObject" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapObject" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;Ljava/util/function/BiFunction;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapObject" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapObject" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapString" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/String;Ljava/util/function/BiFunction;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapString" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;Ljava/util/function/BiFunction;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapString" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/String;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapString" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMap" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMap" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMap" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMap" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMap" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMap" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMap" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMap" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMap" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Object;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMap" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMap" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceThenMap" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Object;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/ObjectBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToBooleanThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Boolean;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToBooleanThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToBooleanThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Boolean;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToBooleanThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToBooleanThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Boolean;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToBooleanThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToBooleanThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Boolean;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToBooleanThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToBooleanThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Boolean;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToBooleanThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToBooleanThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Boolean;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToBooleanThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/BooleanBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToIntegerThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Integer;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToIntegerThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToIntegerThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Integer;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToIntegerThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToIntegerThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Integer;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToIntegerThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToIntegerThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Integer;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToIntegerThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToIntegerThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Integer;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToIntegerThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToIntegerThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Integer;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToIntegerThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/IntegerBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToLongThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Long;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToLongThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToLongThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Long;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToLongThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToLongThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Long;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToLongThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToLongThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Long;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToLongThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToLongThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Long;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToLongThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToLongThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Long;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToLongThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/LongBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToFloatThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Float;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToFloatThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToFloatThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Float;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToFloatThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToFloatThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Float;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToFloatThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToFloatThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Float;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToFloatThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToFloatThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Float;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToFloatThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToFloatThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Float;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToFloatThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/FloatBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToDoubleThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Double;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToDoubleThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToDoubleThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/lang/Double;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToDoubleThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToDoubleThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Double;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToDoubleThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToDoubleThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/Double;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToDoubleThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToDoubleThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Double;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToDoubleThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToDoubleThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/Double;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToDoubleThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/DoubleBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToStringThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToStringThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToStringThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/lang/String;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToStringThenReduce" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToStringThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToStringThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToStringThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/lang/String;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToStringThenReduce" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToStringThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToStringThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToStringThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/lang/String;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapToStringThenReduce" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;)Ljavafx/beans/binding/StringBinding;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToStringThenReduce$261" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToStringThenReduce$260" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToStringThenReduce$259" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToStringThenReduce$258" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToStringThenReduce$257" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToStringThenReduce$256" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToStringThenReduce$255" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToStringThenReduce$254" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToStringThenReduce$253" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToStringThenReduce$252" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToStringThenReduce$251" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToStringThenReduce$250" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToDoubleThenReduce$249" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToDoubleThenReduce$248" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/lang/Double;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToDoubleThenReduce$247" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToDoubleThenReduce$246" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/lang/Double;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToDoubleThenReduce$245" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToDoubleThenReduce$244" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/lang/Double;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToDoubleThenReduce$243" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToDoubleThenReduce$242" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/lang/Double;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToDoubleThenReduce$241" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToDoubleThenReduce$240" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/lang/Double;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToDoubleThenReduce$239" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToDoubleThenReduce$238" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/lang/Double;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToFloatThenReduce$237" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToFloatThenReduce$236" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/lang/Float;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToFloatThenReduce$235" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToFloatThenReduce$234" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/lang/Float;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToFloatThenReduce$233" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToFloatThenReduce$232" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/lang/Float;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToFloatThenReduce$231" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToFloatThenReduce$230" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/lang/Float;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToFloatThenReduce$229" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToFloatThenReduce$228" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/lang/Float;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToFloatThenReduce$227" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToFloatThenReduce$226" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/lang/Float;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToLongThenReduce$225" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToLongThenReduce$224" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/lang/Long;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToLongThenReduce$223" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToLongThenReduce$222" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/lang/Long;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToLongThenReduce$221" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToLongThenReduce$220" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/lang/Long;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToLongThenReduce$219" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToLongThenReduce$218" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/lang/Long;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToLongThenReduce$217" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToLongThenReduce$216" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/lang/Long;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToLongThenReduce$215" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToLongThenReduce$214" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/lang/Long;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToIntegerThenReduce$213" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToIntegerThenReduce$212" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/lang/Integer;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToIntegerThenReduce$211" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToIntegerThenReduce$210" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/lang/Integer;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToIntegerThenReduce$209" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToIntegerThenReduce$208" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/lang/Integer;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToIntegerThenReduce$207" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToIntegerThenReduce$206" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/lang/Integer;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToIntegerThenReduce$205" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToIntegerThenReduce$204" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/lang/Integer;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToIntegerThenReduce$203" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToIntegerThenReduce$202" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/lang/Integer;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToBooleanThenReduce$201" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToBooleanThenReduce$200" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/lang/Boolean;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToBooleanThenReduce$199" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToBooleanThenReduce$198" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/lang/Boolean;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToBooleanThenReduce$197" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToBooleanThenReduce$196" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/lang/Boolean;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToBooleanThenReduce$195" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToBooleanThenReduce$194" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/lang/Boolean;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToBooleanThenReduce$193" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToBooleanThenReduce$192" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/lang/Boolean;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToBooleanThenReduce$191" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapToBooleanThenReduce$190" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/lang/Boolean;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapThenReduce$189" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapThenReduce$188" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapThenReduce$187" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapThenReduce$186" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapThenReduce$185" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapThenReduce$184" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapThenReduce$183" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapThenReduce$182" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapThenReduce$181" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapThenReduce$180" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapThenReduce$179" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapThenReduce$178" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Function;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMap$177" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMap$176" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMap$175" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableMap;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMap$174" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableMap;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMap$173" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMap$172" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMap$171" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableSet;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMap$170" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableSet;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMap$169" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMap$168" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMap$167" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableList;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMap$166" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableList;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapString$165" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapString$164" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapString$163" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapString$162" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/BiFunction;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapObject$161" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapObject$160" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapObject$159" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapObject$158" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapDouble$157" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapDouble$156" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Double;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapDouble$155" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapDouble$154" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/BiFunction;Ljava/lang/Double;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapFloat$153" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapFloat$152" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Float;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapFloat$151" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapFloat$150" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/BiFunction;Ljava/lang/Float;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapLong$149" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapLong$148" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Long;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapLong$147" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapLong$146" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/BiFunction;Ljava/lang/Long;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapInteger$145" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapInteger$144" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Integer;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapInteger$143" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapInteger$142" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/BiFunction;Ljava/lang/Integer;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapBoolean$141" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapBoolean$140" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Boolean;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapBoolean$139" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/BiFunction;Ljava/util/function/Supplier;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapBoolean$138" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/BiFunction;Ljava/lang/Boolean;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToNumber$137" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToNumber$136" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/lang/Object;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToNumber$135" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableSet;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToNumber$134" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableSet;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToBoolean$133" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToBoolean$132" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/lang/Object;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToBoolean$131" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableSet;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToBoolean$130" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableSet;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToDouble$129" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToDouble$128" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/lang/Object;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToDouble$127" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableSet;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToDouble$126" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableSet;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToFloat$125" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToFloat$124" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/lang/Object;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToFloat$123" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableSet;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToFloat$122" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableSet;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToLong$121" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToLong$120" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/lang/Object;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToLong$119" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableSet;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToLong$118" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableSet;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToInteger$117" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToInteger$116" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/lang/Object;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToInteger$115" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableSet;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToInteger$114" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableSet;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToString$113" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToString$112" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/lang/Object;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToString$111" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableSet;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToString$110" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableSet;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduce$109" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/util/function/Supplier;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduce$108" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduce$107" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduce$106" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToNumber$105" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToNumber$104" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/lang/Object;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToNumber$103" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableList;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToNumber$102" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableList;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToBoolean$101" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToBoolean$100" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/lang/Object;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToBoolean$99" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableList;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToBoolean$98" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableList;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToDouble$97" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToDouble$96" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/lang/Object;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToDouble$95" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableList;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToDouble$94" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableList;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToFloat$93" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToFloat$92" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/lang/Object;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToFloat$91" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableList;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToFloat$90" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableList;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToLong$89" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToLong$88" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/lang/Object;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToLong$87" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableList;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToLong$86" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableList;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToInteger$85" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToInteger$84" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/lang/Object;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToInteger$83" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableList;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToInteger$82" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableList;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToString$81" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToString$80" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/lang/Object;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToString$79" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableList;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToString$78" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableList;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduce$77" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/util/function/Supplier;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduce$76" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduce$75" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduce$74" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToString$73" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToString$72" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/lang/Object;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToString$71" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableMap;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToString$70" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableMap;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToDouble$69" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToDouble$68" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/lang/Object;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToDouble$67" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableMap;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToDouble$66" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableMap;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToFloat$65" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToFloat$64" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/lang/Object;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToFloat$63" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableMap;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToFloat$62" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableMap;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToLong$61" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToLong$60" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/lang/Object;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToLong$59" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableMap;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToLong$58" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableMap;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToInteger$57" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToInteger$56" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/lang/Object;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToInteger$55" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableMap;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToInteger$54" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableMap;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToBoolean$53" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToBoolean$52" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/lang/Object;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToBoolean$51" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableMap;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduceThenMapToBoolean$50" desc="(Ljava/util/function/Function;Ljavafx/collections/ObservableMap;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduce$49" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/util/function/Supplier;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduce$48" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduce$47" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/BinaryOperator;Ljava/util/function/Supplier;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reduce$46" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/BinaryOperator;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$joinMap$45" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Function;Ljavafx/collections/ObservableMap;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$joinMap$44" desc="(Ljava/util/Map$Entry;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$joinMap$43" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableMap;Ljava/util/function/Function;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$joinMap$42" desc="(Ljava/util/Map$Entry;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$joinMap$41" desc="(Ljavafx/collections/ObservableMap;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$joinMap$40" desc="(Ljava/util/Map$Entry;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$joinSet$39" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$joinSet$38" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableSet;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$joinSet$37" desc="(Ljavafx/collections/ObservableSet;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$joinList$36" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$joinList$35" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/collections/ObservableList;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$joinList$34" desc="(Ljavafx/collections/ObservableList;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$uiThreadAwareSetChangeListener$33" desc="(Ljava/lang/Runnable;Ljavafx/collections/SetChangeListener$Change;)V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$uiThreadAwareMapChangeListener$32" desc="(Ljava/lang/Runnable;Ljavafx/collections/MapChangeListener$Change;)V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$uiThreadAwareListChangeListener$31" desc="(Ljava/lang/Runnable;Ljavafx/collections/ListChangeListener$Change;)V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$uiThreadAwareInvalidationListener$30" desc="(Ljava/lang/Runnable;Ljavafx/beans/Observable;)V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$uiThreadAwareChangeListener$29" desc="(Ljava/lang/Runnable;Ljavafx/beans/value/ObservableValue;Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$uiThreadAwareChangeListener$28" desc="(Ljava/util/function/Consumer;Ljavafx/beans/value/ObservableValue;Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapString$27" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapString$26" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapString$25" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;Ljava/util/function/Function;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapString$24" desc="(Ljavafx/beans/value/ObservableValue;Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapDouble$23" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapDouble$22" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Double;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapDouble$21" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;Ljava/util/function/Function;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapDouble$20" desc="(Ljavafx/beans/value/ObservableValue;Ljava/lang/Double;Ljava/util/function/Function;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapFloat$19" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapFloat$18" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Float;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapFloat$17" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;Ljava/util/function/Function;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapFloat$16" desc="(Ljavafx/beans/value/ObservableValue;Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapLong$15" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapLong$14" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Long;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapLong$13" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;Ljava/util/function/Function;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapLong$12" desc="(Ljavafx/beans/value/ObservableValue;Ljava/lang/Long;Ljava/util/function/Function;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapInteger$11" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapInteger$10" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Integer;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapInteger$9" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;Ljava/util/function/Function;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapInteger$8" desc="(Ljavafx/beans/value/ObservableValue;Ljava/lang/Integer;Ljava/util/function/Function;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapBoolean$7" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapBoolean$6" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Boolean;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapBoolean$5" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;Ljava/util/function/Function;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapBoolean$4" desc="(Ljavafx/beans/value/ObservableValue;Ljava/lang/Boolean;Ljava/util/function/Function;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapObject$3" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapObject$2" desc="(Ljavafx/beans/value/ObservableValue;Ljavafx/beans/value/ObservableValue;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapObject$1" desc="(Ljavafx/beans/value/ObservableValue;Ljava/util/function/Supplier;Ljava/util/function/Function;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$mapObject$0" desc="(Ljavafx/beans/value/ObservableValue;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13121" covered="0"/><counter type="BRANCH" missed="264" covered="0"/><counter type="COMPLEXITY" missed="732" covered="0"/><counter type="METHOD" missed="600" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/JavaFXUtils$JavaFXThreadProxyObservableSet"><method name="&lt;init&gt;" desc="(Ljavafx/collections/ObservableSet;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceChanged" desc="(Ljavafx/collections/SetChangeListener$Change;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$sourceChanged$0" desc="(Ljavafx/collections/SetChangeListener$Change;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/ObservableMapBase"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/collections/MapChangeListener;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/collections/MapChangeListener;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fireChange" desc="(Ljavafx/collections/MapChangeListener$Change;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasListeners" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwareObservableFloatValue"><method name="&lt;init&gt;" desc="(Ljavafx/beans/value/ObservableFloatValue;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()F"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwarePropertyString"><method name="&lt;init&gt;" desc="(Ljavafx/beans/property/Property;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bind" desc="(Ljavafx/beans/value/ObservableValue;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setValue$0" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwareInvalidationListener"><method name="&lt;init&gt;" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invalidated" desc="(Ljavafx/beans/Observable;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$invalidated$0" desc="(Ljavafx/beans/Observable;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/UIThreadAwareMapChangeListener"><method name="&lt;init&gt;" desc="(Ljavafx/collections/MapChangeListener;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onChanged" desc="(Ljavafx/collections/MapChangeListener$Change;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$onChanged$0" desc="(Ljavafx/collections/MapChangeListener$Change;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/support/AbstractUIThreadAwareObservableNumberValue"><method name="&lt;init&gt;" desc="(Ljavafx/beans/value/ObservableNumberValue;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDelegate" desc="()Ljavafx/beans/value/ObservableNumberValue;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intValue" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="longValue" desc="()J"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="floatValue" desc="()F"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doubleValue" desc="()D"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Number;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/value/ChangeListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeListener" desc="(Ljavafx/beans/InvalidationListener;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="125" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><counter type="INSTRUCTION" missed="18888" covered="760"/><counter type="BRANCH" missed="895" covered="89"/><counter type="COMPLEXITY" missed="1574" covered="70"/><counter type="METHOD" missed="1099" covered="53"/><counter type="CLASS" missed="40" covered="3"/></package><package name="griffon/util"><class name="griffon/util/ExpandableResourceBundle$IteratorAsEnumeration"><method name="&lt;init&gt;" desc="(Ljava/util/Iterator;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasMoreElements" desc="()Z"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextElement" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/util/CollectionUtils$MapToPropertiesAdapter"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setProperty" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperty" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperty" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="propertyNames" desc="()Ljava/util/Enumeration;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stringPropertyNames" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keys" desc="()Ljava/util/Enumeration;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elements" desc="()Ljava/util/Enumeration;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsValue" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsKey" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keySet" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="entrySet" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="values" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="136" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="22" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/util/CollectionUtils$SetBuilder"><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="e" desc="(Ljava/lang/Object;)Lgriffon/util/CollectionUtils$SetBuilder;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Ljava/util/Iterator;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()[Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="([Ljava/lang/Object;)[Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAll" desc="(Ljava/util/Collection;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Ljava/util/Collection;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retainAll" desc="(Ljava/util/Collection;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAll" desc="(Ljava/util/Collection;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="86" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/util/MethodDescriptor"><method name="forMethod" desc="(Ljava/lang/reflect/Method;)Lgriffon/util/MethodDescriptor;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forMethod" desc="(Ljava/lang/reflect/Method;Z)Lgriffon/util/MethodDescriptor;"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="areParametersCompatible" desc="([Ljava/lang/String;[Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;[Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;[Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;[Ljava/lang/Class;I)V"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;[Ljava/lang/String;I)V"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameterTypes" desc="()[Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModifiers" desc="()I"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Lgriffon/util/MethodDescriptor;)I"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Lgriffon/util/MethodDescriptor;)Z"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadClass" desc="(Ljava/lang/String;)Ljava/lang/Class;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="218" covered="176"/><counter type="BRANCH" missed="36" covered="14"/><counter type="COMPLEXITY" missed="27" covered="17"/><counter type="METHOD" missed="9" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/util/CollectionUtils$ListBuilder"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="e" desc="(Ljava/lang/Object;)Lgriffon/util/CollectionUtils$ListBuilder;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Ljava/util/Iterator;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()[Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="([Ljava/lang/Object;)[Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAll" desc="(Ljava/util/Collection;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Ljava/util/Collection;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(ILjava/util/Collection;)Z"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAll" desc="(Ljava/util/Collection;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retainAll" desc="(Ljava/util/Collection;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(ILjava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(ILjava/lang/Object;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(I)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexOf" desc="(Ljava/lang/Object;)I"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lastIndexOf" desc="(Ljava/lang/Object;)I"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listIterator" desc="()Ljava/util/ListIterator;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listIterator" desc="(I)Ljava/util/ListIterator;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subList" desc="(II)Ljava/util/List;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="139" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="28" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/util/AnnotationUtils$BindToImpl"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value" desc="()Ljava/lang/Class;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="annotationType" desc="()Ljava/lang/Class;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/util/CompositeResourceBundle"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Ljava/util/ResourceBundle;)V"><counter type="INSTRUCTION" missed="1" covered="78"/><counter type="BRANCH" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleGetObject" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="1" covered="53"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKeys" desc="()Ljava/util/Enumeration;"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toResourceBundleArray" desc="(Ljava/util/Collection;)[Ljava/util/ResourceBundle;"><counter type="INSTRUCTION" missed="3" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="161"/><counter type="BRANCH" missed="4" covered="12"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/util/CollectionUtils"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverse" desc="(Ljava/util/List;)Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="(Ljava/util/Collection;)Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newMap" desc="([Ljava/lang/Object;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newSet" desc="([Ljava/lang/Object;)Ljava/util/Set;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newList" desc="([Ljava/lang/Object;)Ljava/util/List;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="()Lgriffon/util/CollectionUtils$MapBuilder;"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="map" desc="(Ljava/util/Map;)Lgriffon/util/CollectionUtils$MapBuilder;"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="list" desc="()Lgriffon/util/CollectionUtils$ListBuilder;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="list" desc="(Ljava/util/List;)Lgriffon/util/CollectionUtils$ListBuilder;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="()Lgriffon/util/CollectionUtils$SetBuilder;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/util/Set;)Lgriffon/util/CollectionUtils$SetBuilder;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toProperties" desc="(Ljava/util/Map;)Ljava/util/Properties;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="93" covered="28"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="14" covered="4"/><counter type="METHOD" missed="9" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/util/AnnotationUtils$NamedImpl"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="annotationType" desc="()Ljava/lang/Class;"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="52"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/util/MethodUtils"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCacheMethods" desc="(Z)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clearCache" desc="()I"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeMethod" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeMethod" desc="(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="27"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invokeMethod" desc="(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invokeExactMethod" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeExactMethod" desc="(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="17" covered="19"/><counter type="BRANCH" missed="4" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invokeExactMethod" desc="(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="22" covered="17"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invokeExactStaticMethod" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeStaticMethod" desc="(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeStaticMethod" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeStaticMethod" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeExactStaticMethod" desc="(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeExactStaticMethod" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAccessibleMethod" desc="(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/reflect/Method;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAccessibleMethod" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;"><counter type="INSTRUCTION" missed="3" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAccessibleMethod" desc="(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAccessibleMethod" desc="(Ljava/lang/Class;Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;"><counter type="INSTRUCTION" missed="45" covered="35"/><counter type="BRANCH" missed="7" covered="9"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAccessibleMethodFromSuperclass" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAccessibleMethodFromInterfaceNest" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMatchingAccessibleMethod" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;"><counter type="INSTRUCTION" missed="62" covered="58"/><counter type="BRANCH" missed="13" covered="7"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMethodAccessible" desc="(Ljava/lang/reflect/Method;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTotalTransformationCost" desc="([Ljava/lang/Class;[Ljava/lang/Class;)F"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getObjectTransformationCost" desc="(Ljava/lang/Class;Ljava/lang/Class;)F"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAssignmentCompatible" desc="(Ljava/lang/Class;Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPrimitiveWrapper" desc="(Ljava/lang/Class;)Ljava/lang/Class;"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPrimitiveType" desc="(Ljava/lang/Class;)Ljava/lang/Class;"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toNonPrimitiveClass" desc="(Ljava/lang/Class;)Ljava/lang/Class;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCachedMethod" desc="(Lgriffon/util/MethodUtils$MethodDescriptor;)Ljava/lang/reflect/Method;"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cacheMethod" desc="(Lgriffon/util/MethodUtils$MethodDescriptor;Ljava/lang/reflect/Method;)V"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invokeSafe" desc="(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="689" covered="255"/><counter type="BRANCH" missed="134" covered="34"/><counter type="COMPLEXITY" missed="101" covered="16"/><counter type="METHOD" missed="23" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/util/AbstractMapResourceBundle"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeKeys" desc="()V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleGetObject" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKeys" desc="()Ljava/util/Enumeration;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keySet" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleKeySet" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="30"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/util/CompositeResourceBundle$IteratorAsEnumeration"><method name="&lt;init&gt;" desc="(Ljava/util/Iterator;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasMoreElements" desc="()Z"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextElement" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/util/CollectionUtils$MapToPropertiesAdapter$1"><method name="&lt;init&gt;" desc="(Lgriffon/util/CollectionUtils$MapToPropertiesAdapter;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasMoreElements" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextElement" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/util/CollectionUtils$MapToPropertiesAdapter$2"><method name="&lt;init&gt;" desc="(Lgriffon/util/CollectionUtils$MapToPropertiesAdapter;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasMoreElements" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextElement" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/util/GriffonClassUtils"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="registerPrimitiveClassPair" desc="(Ljava/lang/Class;Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requireState" desc="(Z)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireState" desc="(ZLjava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="3"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requireNonEmpty" desc="([B)[B"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="([BLjava/lang/String;)[B"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="([S)[S"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="([SLjava/lang/String;)[S"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="([I)[I"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="([ILjava/lang/String;)[I"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="([J)[J"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="([JLjava/lang/String;)[J"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="([F)[F"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="([FLjava/lang/String;)[F"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="([D)[D"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="([DLjava/lang/String;)[D"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="([C)[C"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="([CLjava/lang/String;)[C"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="([Z)[Z"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="([ZLjava/lang/String;)[Z"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="([Ljava/lang/Object;)[Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="([Ljava/lang/Object;Ljava/lang/String;)[Ljava/lang/Object;"><counter type="INSTRUCTION" missed="1" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requireNonEmpty" desc="(Ljava/util/Collection;)Ljava/util/Collection;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="(Ljava/util/Collection;Ljava/lang/String;)Ljava/util/Collection;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="(Ljava/util/Map;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonEmpty" desc="(Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEventHandler" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="6" covered="11"/><counter type="BRANCH" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEventHandler" desc="(Ljava/lang/reflect/Method;)Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEventHandler" desc="(Ljava/lang/reflect/Method;Z)Z"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEventHandler" desc="(Lgriffon/util/MethodDescriptor;)Z"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBasicMethod" desc="(Ljava/lang/reflect/Method;)Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBasicMethod" desc="(Ljava/lang/reflect/Method;Z)Z"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBasicMethod" desc="(Lgriffon/util/MethodDescriptor;)Z"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isContributionMethod" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isContributionMethod" desc="(Ljava/lang/reflect/Method;)Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isContributionMethod" desc="(Ljava/lang/reflect/Method;Z)Z"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isContributionMethod" desc="(Lgriffon/util/MethodDescriptor;)Z"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isGroovyInjectedMethod" desc="(Ljava/lang/reflect/Method;)Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isGroovyInjectedMethod" desc="(Ljava/lang/reflect/Method;Z)Z"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isGroovyInjectedMethod" desc="(Lgriffon/util/MethodDescriptor;)Z"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isGetterMethod" desc="(Ljava/lang/reflect/Method;)Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isGetterMethod" desc="(Ljava/lang/reflect/Method;Z)Z"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isGetterMethod" desc="(Lgriffon/util/MethodDescriptor;)Z"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSetterMethod" desc="(Ljava/lang/reflect/Method;)Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSetterMethod" desc="(Ljava/lang/reflect/Method;Z)Z"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSetterMethod" desc="(Lgriffon/util/MethodDescriptor;)Z"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isArtifactMethod" desc="(Ljava/lang/reflect/Method;)Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isArtifactMethod" desc="(Ljava/lang/reflect/Method;Z)Z"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isArtifactMethod" desc="(Lgriffon/util/MethodDescriptor;)Z"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMvcMethod" desc="(Ljava/lang/reflect/Method;)Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMvcMethod" desc="(Ljava/lang/reflect/Method;Z)Z"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMvcMethod" desc="(Lgriffon/util/MethodDescriptor;)Z"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isThreadingMethod" desc="(Ljava/lang/reflect/Method;)Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isThreadingMethod" desc="(Ljava/lang/reflect/Method;Z)Z"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isThreadingMethod" desc="(Lgriffon/util/MethodDescriptor;)Z"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEventPublisherMethod" desc="(Ljava/lang/reflect/Method;)Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEventPublisherMethod" desc="(Ljava/lang/reflect/Method;Z)Z"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEventPublisherMethod" desc="(Lgriffon/util/MethodDescriptor;)Z"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isObservableMethod" desc="(Ljava/lang/reflect/Method;)Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isObservableMethod" desc="(Ljava/lang/reflect/Method;Z)Z"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isObservableMethod" desc="(Lgriffon/util/MethodDescriptor;)Z"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isResourceHandlerMethod" desc="(Ljava/lang/reflect/Method;)Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isResourceHandlerMethod" desc="(Ljava/lang/reflect/Method;Z)Z"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isResourceHandlerMethod" desc="(Lgriffon/util/MethodDescriptor;)Z"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMessageSourceMethod" desc="(Ljava/lang/reflect/Method;)Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMessageSourceMethod" desc="(Ljava/lang/reflect/Method;Z)Z"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMessageSourceMethod" desc="(Lgriffon/util/MethodDescriptor;)Z"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isResourceResolverMethod" desc="(Ljava/lang/reflect/Method;)Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isResourceResolverMethod" desc="(Ljava/lang/reflect/Method;Z)Z"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isResourceResolverMethod" desc="(Lgriffon/util/MethodDescriptor;)Z"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInstanceMethod" desc="(Ljava/lang/reflect/Method;)Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInstanceMethod" desc="(Ljava/lang/reflect/Method;Z)Z"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInstanceMethod" desc="(Lgriffon/util/MethodDescriptor;)Z"><counter type="INSTRUCTION" missed="1" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPlainMethod" desc="(Ljava/lang/reflect/Method;)Z"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPlainMethod" desc="(Ljava/lang/reflect/Method;Z)Z"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPlainMethod" desc="(Lgriffon/util/MethodDescriptor;)Z"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="7" covered="17"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPropertyOfType" desc="(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instantiateClass" desc="(Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instantiate" desc="(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyValueOfNewInstance" desc="(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyValueOfNewInstance" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyDescriptorForValue" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/beans/PropertyDescriptor;"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyType" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Class;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertiesOfType" desc="(Ljava/lang/Class;Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTypeInstanceOfPropertyType" desc="(Ljava/lang/Class;Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertiesAssignableToType" desc="(Ljava/lang/Class;Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperty" desc="(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/beans/PropertyDescriptor;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectionToObjectArray" desc="(Ljava/util/Collection;)[Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMatchBetweenPrimitiveAndWrapperTypes" desc="(Ljava/lang/Class;Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMatchBetweenPrimitiveAndWrapperTypes" desc="(Ljava/lang/String;Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findDeclaredMethod" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isStaticProperty" desc="(Ljava/lang/Class;Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPublicStatic" desc="(Ljava/lang/reflect/Method;)Z"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPublicStatic" desc="(Ljava/lang/reflect/Field;)Z"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGetterName" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStaticPropertyValue" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyOrStaticPropertyOrFieldValue" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFieldValue" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getField" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/reflect/Field;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getField" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllDeclaredFields" desc="(Ljava/lang/Class;)[Ljava/lang/reflect/Field;"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPublicField" desc="(Ljava/lang/Object;Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPropertyInherited" desc="(Ljava/lang/Class;Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createConcreteCollection" desc="(Ljava/lang/Class;)Ljava/util/Collection;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSetterName" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isGetter" desc="(Ljava/lang/String;[Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyForGetter" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertPropertyName" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyForSetter" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSetter" desc="(Ljava/lang/String;[Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAssignableOrConvertibleFrom" desc="(Ljava/lang/Class;Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBooleanFromMap" desc="(Ljava/lang/String;Ljava/util/Map;)Z"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isClassBelowPackage" desc="(Ljava/lang/Class;Ljava/util/List;)Z"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPropertiesOrFields" desc="(Ljava/lang/Object;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPropertiesOrFieldsNoException" desc="(Ljava/lang/Object;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPropertyOrFieldValue" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPropertyOrFieldValueNoException" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="5" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFieldsOrProperties" desc="(Ljava/lang/Object;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFieldsOrPropertiesNoException" desc="(Ljava/lang/Object;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFieldOrPropertyValue" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFields" desc="(Ljava/lang/Object;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFieldsNoException" desc="(Ljava/lang/Object;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFieldValue" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFieldValueNoException" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setProperties" desc="(Ljava/lang/Object;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPropertiesNoException" desc="(Ljava/lang/Object;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPropertyValue" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="10" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPropertyValue" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="17" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPropertyDescriptor" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/beans/PropertyDescriptor;"><counter type="INSTRUCTION" missed="3" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPropertyDescriptor" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/beans/PropertyDescriptor;"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPropertyDescriptors" desc="(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;"><counter type="INSTRUCTION" missed="7" covered="31"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReadMethod" desc="(Ljava/beans/PropertyDescriptor;)Ljava/lang/reflect/Method;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isReadable" desc="(Ljava/lang/Object;Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWriteMethod" desc="(Ljava/beans/PropertyDescriptor;)Ljava/lang/reflect/Method;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWritable" desc="(Ljava/lang/Object;Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setField" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="13" covered="45"/><counter type="BRANCH" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setProperty" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="13" covered="81"/><counter type="BRANCH" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProperty" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="38" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReadMethod" desc="(Ljava/lang/Class;Ljava/beans/PropertyDescriptor;)Ljava/lang/reflect/Method;"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWriteMethod" desc="(Ljava/lang/Class;Ljava/beans/PropertyDescriptor;)Ljava/lang/reflect/Method;"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTrue" desc="(ZLjava/lang/String;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeInstanceMethod" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeInstanceMethod" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeInstanceMethod" desc="(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="15" covered="17"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invokeExactInstanceMethod" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeExactInstanceMethod" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeExactInstanceMethod" desc="(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="19" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invokeStaticMethod" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeStaticMethod" desc="(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeStaticMethod" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeExactStaticMethod" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeExactStaticMethod" desc="(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeExactStaticMethod" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAbbreviation" desc="(Ljava/lang/String;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getShortClassName" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getShortClassName" desc="(Ljava/lang/Class;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getShortClassName" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="51" covered="49"/><counter type="BRANCH" missed="12" covered="6"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPackageName" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPackageName" desc="(Ljava/lang/Class;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPackageName" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="21" covered="27"/><counter type="BRANCH" missed="7" covered="5"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToTypeArray" desc="([Ljava/lang/Object;)[Ljava/lang/Class;"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="6" covered="559"/><counter type="BRANCH" missed="11" covered="41"/><counter type="COMPLEXITY" missed="11" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2331" covered="1407"/><counter type="BRANCH" missed="355" covered="135"/><counter type="COMPLEXITY" missed="331" covered="76"/><counter type="METHOD" missed="119" covered="43"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/util/ConfigUtils"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsKey" desc="(Ljava/util/Map;Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsKey" desc="(Ljava/util/ResourceBundle;Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="88" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValueDefined" desc="(Ljava/util/Map;Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValueDefined" desc="(Ljava/util/ResourceBundle;Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="103" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfigValue" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="17" covered="52"/><counter type="BRANCH" missed="5" covered="7"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfigValue" desc="(Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="100" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfigValue" desc="(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="20" covered="61"/><counter type="BRANCH" missed="5" covered="7"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfigValue" desc="(Ljava/util/ResourceBundle;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="52" covered="64"/><counter type="BRANCH" missed="12" covered="6"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="missingResource" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/util/MissingResourceException;"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfigValueAsBoolean" desc="(Ljava/util/Map;Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfigValueAsBoolean" desc="(Ljava/util/Map;Ljava/lang/String;Z)Z"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfigValueAsInt" desc="(Ljava/util/Map;Ljava/lang/String;)I"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfigValueAsInt" desc="(Ljava/util/Map;Ljava/lang/String;I)I"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfigValueAsLong" desc="(Ljava/util/Map;Ljava/lang/String;)J"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfigValueAsLong" desc="(Ljava/util/Map;Ljava/lang/String;J)J"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfigValueAsDouble" desc="(Ljava/util/Map;Ljava/lang/String;)D"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfigValueAsDouble" desc="(Ljava/util/Map;Ljava/lang/String;D)D"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfigValueAsFloat" desc="(Ljava/util/Map;Ljava/lang/String;)F"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfigValueAsFloat" desc="(Ljava/util/Map;Ljava/lang/String;F)F"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfigValueAsNumber" desc="(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Number;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfigValueAsNumber" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Number;)Ljava/lang/Number;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfigValueAsString" desc="(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfigValueAsString" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFilenameExtension" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stripFilenameExtension" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="collectKeys" desc="(Ljava/util/Map;)Ljava/util/Set;"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCollectKeys" desc="(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Set;)V"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="659" covered="278"/><counter type="BRANCH" missed="112" covered="26"/><counter type="COMPLEXITY" missed="85" covered="12"/><counter type="METHOD" missed="21" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/util/ServiceLoaderUtils"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="load" desc="(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Lgriffon/util/ServiceLoaderUtils$LineProcessor;)Z"><counter type="INSTRUCTION" missed="83" covered="89"/><counter type="BRANCH" missed="9" covered="11"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="(Ljava/lang/ClassLoader;Ljava/lang/String;Lgriffon/util/ServiceLoaderUtils$PathFilter;Lgriffon/util/ServiceLoaderUtils$ResourceProcessor;)Z"><counter type="INSTRUCTION" missed="44" covered="67"/><counter type="BRANCH" missed="8" covered="6"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleFileResource" desc="(Ljava/net/URL;Ljava/lang/ClassLoader;Ljava/lang/String;Lgriffon/util/ServiceLoaderUtils$PathFilter;Lgriffon/util/ServiceLoaderUtils$ResourceProcessor;)V"><counter type="INSTRUCTION" missed="58" covered="63"/><counter type="BRANCH" missed="8" covered="10"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleJarResource" desc="(Ljava/net/URL;Ljava/lang/ClassLoader;Ljava/lang/String;Lgriffon/util/ServiceLoaderUtils$PathFilter;Lgriffon/util/ServiceLoaderUtils$ResourceProcessor;)V"><counter type="INSTRUCTION" missed="128" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="316" covered="223"/><counter type="BRANCH" missed="47" covered="27"/><counter type="COMPLEXITY" missed="33" covered="11"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/util/MethodUtils$MethodDescriptor"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;Z)V"><counter type="INSTRUCTION" missed="12" covered="25"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="2" covered="33"/><counter type="BRANCH" missed="4" covered="6"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="61"/><counter type="BRANCH" missed="7" covered="9"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/util/TypeUtils"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToBoolean" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="castToChar" desc="(Ljava/lang/Object;)C"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToByte" desc="(Ljava/lang/Object;)B"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToShort" desc="(Ljava/lang/Object;)S"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToInt" desc="(Ljava/lang/Object;)I"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToLong" desc="(Ljava/lang/Object;)J"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToFloat" desc="(Ljava/lang/Object;)F"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToDouble" desc="(Ljava/lang/Object;)D"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToBigInteger" desc="(Ljava/lang/Object;)Ljava/math/BigInteger;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToBigDecimal" desc="(Ljava/lang/Object;)Ljava/math/BigDecimal;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToNumber" desc="(Ljava/lang/Object;)Ljava/lang/Number;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToBoolean" desc="(Ljava/lang/Object;Z)Z"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="castToChar" desc="(Ljava/lang/Object;C)C"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToByte" desc="(Ljava/lang/Object;B)B"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToShort" desc="(Ljava/lang/Object;S)S"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToInt" desc="(Ljava/lang/Object;I)I"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToLong" desc="(Ljava/lang/Object;J)J"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToFloat" desc="(Ljava/lang/Object;F)F"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToDouble" desc="(Ljava/lang/Object;D)D"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToNumber" desc="(Ljava/lang/Object;Ljava/lang/Number;)Ljava/lang/Number;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToBigInteger" desc="(Ljava/lang/Object;Ljava/math/BigInteger;)Ljava/math/BigInteger;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="castToBigDecimal" desc="(Ljava/lang/Object;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertValue" desc="(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertValue" desc="(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="123" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveTargetPropertyEditor" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/beans/PropertyEditor;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doResolveTargetPropertyEditor" desc="(Ljava/lang/Class;)Ljava/beans/PropertyEditor;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBoolean" desc="(Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCharacter" desc="(Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isByte" desc="(Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isShort" desc="(Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInteger" desc="(Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLong" desc="(Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFloat" desc="(Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDouble" desc="(Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBigInteger" desc="(Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBigDecimal" desc="(Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNumber" desc="(Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="133" covered="0"/><counter type="BRANCH" missed="46" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayEqual" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="([I[I)Z"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="([Ljava/lang/Object;Ljava/util/List;)Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/util/List;[Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doEquals" desc="([Ljava/lang/Object;Ljava/util/List;)Z"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/util/List;Ljava/util/List;)Z"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/util/Set;Ljava/util/Set;)Z"><counter type="INSTRUCTION" missed="78" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/util/Map;Ljava/util/Map;)Z"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primitiveArrayToList" desc="(Ljava/lang/Object;)Ljava/util/List;"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValidCharacterString" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Ljava/lang/Object;Ljava/lang/Object;)I"><counter type="INSTRUCTION" missed="159" covered="0"/><counter type="BRANCH" missed="44" covered="0"/><counter type="COMPLEXITY" missed="23" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Ljava/lang/Character;Ljava/lang/Number;)I"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Ljava/lang/Number;Ljava/lang/Character;)I"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Ljava/lang/Character;Ljava/lang/Character;)I"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Ljava/lang/Number;Ljava/lang/Number;)I"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFloatingPoint" desc="(Ljava/lang/Number;)Z"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInteger" desc="(Ljava/lang/Number;)Z"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLong" desc="(Ljava/lang/Number;)Z"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBigDecimal" desc="(Ljava/lang/Number;)Z"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBigInteger" desc="(Ljava/lang/Number;)Z"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1287" covered="21"/><counter type="BRANCH" missed="353" covered="3"/><counter type="COMPLEXITY" missed="234" covered="3"/><counter type="METHOD" missed="57" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/util/AbstractMapResourceBundle$IteratorAsEnumeration"><method name="&lt;init&gt;" desc="(Ljava/util/Iterator;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasMoreElements" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextElement" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/util/GriffonNameUtils"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isKeyword" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="capitalize" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="uncapitalize" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="8" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSetterName" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGetterName" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClassName" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClassNameRepresentation" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClassNameForLowerCaseHyphenSeparatedName" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="6" covered="45"/><counter type="BRANCH" missed="4" covered="6"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLogicalName" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLogicalName" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLogicalPropertyName" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="18"/><counter type="BRANCH" missed="5" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPropertyName" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPropertyName" desc="(Ljava/lang/Class;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyNameRepresentation" desc="(Ljava/lang/Class;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyNameRepresentation" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="9" covered="53"/><counter type="BRANCH" missed="4" covered="8"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPropertyNameForLowerCaseHyphenSeparatedName" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getShortName" desc="(Ljava/lang/Class;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getShortName" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNaturalName" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="13" covered="148"/><counter type="BRANCH" missed="8" covered="22"/><counter type="COMPLEXITY" missed="8" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBlank" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="4" covered="27"/><counter type="BRANCH" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requireNonBlank" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireNonBlank" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="5" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHyphenatedName" desc="(Ljava/lang/Class;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHyphenatedName" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="join" desc="(Ljava/lang/Iterable;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="quote" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unquote" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyQuotes" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="220" covered="0"/><counter type="BRANCH" missed="21" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="180"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="538" covered="569"/><counter type="BRANCH" missed="95" covered="56"/><counter type="COMPLEXITY" missed="81" covered="27"/><counter type="METHOD" missed="17" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/util/AnnotationUtils"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="harvestQualifiers" desc="(Ljava/lang/Class;)Ljava/util/List;"><counter type="INSTRUCTION" missed="15" covered="47"/><counter type="BRANCH" missed="4" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAnnotation" desc="(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAnnotation" desc="([Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAnnotatedWith" desc="(Ljava/lang/Object;Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAnnotatedWith" desc="(Ljava/lang/Class;Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requireAnnotation" desc="(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requireAnnotation" desc="(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;"><counter type="INSTRUCTION" missed="18" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDependsOn" desc="(Ljava/lang/Object;)[Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nameFor" desc="(Ljava/lang/Object;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nameFor" desc="(Ljava/lang/reflect/Field;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="namesFor" desc="(Ljava/lang/reflect/Field;)[Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="33"/><counter type="BRANCH" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nameFor" desc="(Ljava/lang/reflect/Method;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="namesFor" desc="(Ljava/lang/reflect/Method;)[Ljava/lang/String;"><counter type="INSTRUCTION" missed="80" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="annotationsOfMethodParameter" desc="(Ljava/lang/reflect/Method;I)[Ljava/lang/annotation/Annotation;"><counter type="INSTRUCTION" missed="1" covered="31"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapInstancesByName" desc="(Ljava/util/Collection;Ljava/lang/String;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortByDependencies" desc="(Ljava/util/Collection;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortByDependencies" desc="(Ljava/util/Collection;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="202" covered="123"/><counter type="BRANCH" missed="20" covered="8"/><counter type="COMPLEXITY" missed="12" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="named" desc="(Ljava/lang/String;)Ljavax/inject/Named;"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typed" desc="(Ljava/lang/Class;)Lgriffon/inject/Typed;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bindto" desc="(Ljava/lang/Class;)Lgriffon/inject/BindTo;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="444" covered="444"/><counter type="BRANCH" missed="58" covered="40"/><counter type="COMPLEXITY" missed="43" covered="28"/><counter type="METHOD" missed="7" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/util/CollectionUtils$MapBuilder"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="e" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lgriffon/util/CollectionUtils$MapBuilder;"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsKey" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsValue" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keySet" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="values" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="entrySet" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="43"/><counter type="COMPLEXITY" missed="9" covered="8"/><counter type="METHOD" missed="9" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/util/ExpandableResourceBundle"><method name="wrapResourceBundle" desc="(Ljava/util/ResourceBundle;)Ljava/util/ResourceBundle;"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/ResourceBundle;)V"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processKey" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Ljava/lang/String;)[Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleGetObject" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKeys" desc="()Ljava/util/Enumeration;"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="145"/><counter type="BRANCH" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/util/AnnotationUtils$TypedImpl"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value" desc="()Ljava/lang/Class;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="annotationType" desc="()Ljava/lang/Class;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/util/GriffonApplicationUtils"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWindows" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWindows95" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWindows98" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWindowsNT" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWindows2000" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWindows2003" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWindowsXP" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWindowsVista" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWindows7" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWindows8" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWindows10" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUnix" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLinux" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSolaris" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMacOSX" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOsArch" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOsName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOsVersion" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaVersion" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="is64Bit" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isJdk14" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isJdk15" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isJdk16" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isJdk17" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isJdk18" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isJdk4" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isJdk5" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isJdk6" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isJdk7" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isJdk8" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isJdk9" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPlatform" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBasePlatform" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsWindows" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsWindows95" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsWindows98" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsWindowsNT" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsWindows2000" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsWindows2003" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsWindowsXP" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsWindowsVista" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsWindows7" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsWindows8" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsWindows10" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsUnix" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsLinux" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsSolaris" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsMacOSX" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIs64Bit" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsJdk14" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsJdk15" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsJdk16" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsJdk17" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsJdk18" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsJdk4" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsJdk5" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsJdk6" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsJdk7" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsJdk8" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIsJdk9" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseLocale" desc="(Ljava/lang/String;)Ljava/util/Locale;"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="447" covered="110"/><counter type="BRANCH" missed="46" covered="8"/><counter type="COMPLEXITY" missed="30" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="614" covered="110"/><counter type="BRANCH" missed="52" covered="8"/><counter type="COMPLEXITY" missed="96" covered="1"/><counter type="METHOD" missed="62" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="7793" covered="4031"/><counter type="BRANCH" missed="1273" covered="376"/><counter type="COMPLEXITY" missed="1162" covered="244"/><counter type="METHOD" missed="426" covered="148"/><counter type="CLASS" missed="8" covered="18"/></package><package name="griffon/exceptions"><class name="griffon/exceptions/PropertyException"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatArgs" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatArgs" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatArgs" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="79" covered="36"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/exceptions/MembersInjectionException"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/exceptions/BeanInstantiationException"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/exceptions/InstanceNotFoundException"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/annotation/Annotation;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/annotation/Annotation;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="36" covered="44"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/exceptions/ClosedInjectorException"><method name="&lt;init&gt;" desc="(Lgriffon/core/injection/Injector;)V"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/exceptions/MVCGroupException"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/exceptions/TypeNotFoundException"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/annotation/Annotation;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/exceptions/NewInstanceException"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/lang/Class;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/exceptions/ArtifactHandlerNotFoundException"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/exceptions/ArtifactNotFoundException"><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lgriffon/core/artifact/GriffonClass;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Lgriffon/core/artifact/GriffonClass;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/lang/Class;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/exceptions/MVCGroupConfigurationException"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMvcType" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/exceptions/StaticMethodInvocationException"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatArguments" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/exceptions/MethodInvocationException"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToTypeArray" desc="([Ljava/lang/Object;)[Ljava/lang/Class;"><counter type="INSTRUCTION" missed="4" covered="29"/><counter type="BRANCH" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="38"/><counter type="BRANCH" missed="2" covered="4"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/exceptions/MVCGroupInstantiationException"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMvcType" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMvcName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/exceptions/TypeConversionException"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatArgs" desc="(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/exceptions/GriffonException"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkNonNull" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkNonBlank" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="35"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/exceptions/InstanceMethodInvocationException"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/reflect/Method;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatArguments" desc="(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="61"/><counter type="BRANCH" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatArguments" desc="(Ljava/lang/Object;Ljava/lang/reflect/Method;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="94" covered="69"/><counter type="BRANCH" missed="6" covered="4"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/exceptions/FieldException"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatArgs" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatArgs" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatArgs" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="79" covered="36"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="704" covered="269"/><counter type="BRANCH" missed="12" covered="8"/><counter type="COMPLEXITY" missed="71" covered="17"/><counter type="METHOD" missed="63" covered="15"/><counter type="CLASS" missed="11" covered="7"/></package><package name="griffon/core/resources"><class name="griffon/core/resources/NoSuchResourceException"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Locale;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKey" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLocale" desc="()Ljava/util/Locale;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="griffon/core/i18n"><class name="griffon/core/i18n/NoSuchMessageException"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Locale;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLocale" desc="()Ljava/util/Locale;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="34"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="17" covered="34"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/codehaus/griffon/runtime/core/threading"><class name="org/codehaus/griffon/runtime/core/threading/DefaultExecutorServiceProvider"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/util/concurrent/ExecutorService;"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/threading/AbstractUIThreadManager"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExecutorServiceManager" desc="(Lgriffon/core/ExecutorServiceManager;)V"><counter type="INSTRUCTION" missed="6" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runFuture" desc="(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runFuture" desc="(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runOutsideUI" desc="(Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="3" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runInsideUISync" desc="(Ljava/util/concurrent/Callable;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="38" covered="52"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/threading/DefaultUIThreadManager"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUIThread" desc="()Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runInsideUIAsync" desc="(Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runInsideUISync" desc="(Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/threading/AbstractUIThreadManager$1"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/threading/AbstractUIThreadManager;Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V"><counter type="INSTRUCTION" missed="7" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="14"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/threading/DefaultExecutorServiceProvider$DefaultThreadFactory"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newThread" desc="(Ljava/lang/Runnable;)Ljava/lang/Thread;"><counter type="INSTRUCTION" missed="3" covered="31"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="67"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/threading/AbstractThreadingHandler"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setUIThreadManager" desc="(Lgriffon/core/threading/UIThreadManager;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUIThread" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runInsideUIAsync" desc="(Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runInsideUISync" desc="(Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runOutsideUI" desc="(Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runFuture" desc="(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runFuture" desc="(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runInsideUISync" desc="(Ljava/util/concurrent/Callable;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><counter type="INSTRUCTION" missed="115" covered="144"/><counter type="BRANCH" missed="5" covered="5"/><counter type="COMPLEXITY" missed="20" covered="11"/><counter type="METHOD" missed="15" covered="11"/><counter type="CLASS" missed="2" covered="4"/></package><package name="griffon/core/test"><class name="griffon/core/test/GriffonUnitRule"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lorg/junit/runners/model/Statement;Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;)Lorg/junit/runners/model/Statement;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="before" desc="(Lgriffon/core/GriffonApplication;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="after" desc="(Lgriffon/core/GriffonApplication;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instantiateApplication" desc="()Lgriffon/core/GriffonApplication;"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instantiateApplicationBootstrapper" desc="(Lgriffon/core/GriffonApplication;Ljava/lang/Object;)Lgriffon/core/ApplicationBootstrapper;"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleTestForAnnotation" desc="(Lgriffon/core/GriffonApplication;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="162" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/test/GriffonUnitRule$1"><method name="&lt;init&gt;" desc="(Lgriffon/core/test/GriffonUnitRule;Ljava/lang/Object;Lorg/junit/runners/model/Statement;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="()V"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><counter type="INSTRUCTION" missed="226" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="2" covered="0"/></package><package name="org/codehaus/griffon/runtime/core/i18n"><class name="org/codehaus/griffon/runtime/core/i18n/DefaultMessageSource"><method name="&lt;init&gt;" desc="(Lgriffon/util/CompositeResourceBundleBuilder;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBasename" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doResolveMessageValue" desc="(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBundle" desc="(Ljava/util/Locale;)Ljava/util/ResourceBundle;"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asResourceBundle" desc="()Ljava/util/ResourceBundle;"><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="72"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/i18n/MessageSourceDecorator"><method name="&lt;init&gt;" desc="(Lgriffon/core/i18n/MessageSource;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDelegate" desc="()Lgriffon/core/i18n/MessageSource;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatMessage" desc="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/util/List;Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;[Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;[Ljava/lang/Object;Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatMessage" desc="(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatMessage" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/Locale;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asResourceBundle" desc="()Ljava/util/ResourceBundle;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/util/List;Ljava/util/Locale;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveMessageValue" desc="(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="115" covered="33"/><counter type="COMPLEXITY" missed="17" covered="6"/><counter type="METHOD" missed="17" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/i18n/DefaultMessageSourceDecoratorFactory"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Lgriffon/core/i18n/MessageSource;)Lorg/codehaus/griffon/runtime/core/i18n/MessageSourceDecorator;"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/i18n/AbstractMessageSource"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;[Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="6" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/util/List;Ljava/util/Locale;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;[Ljava/lang/Object;Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="8" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/util/List;Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/Locale;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveMessageValue" desc="(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="17" covered="36"/><counter type="BRANCH" missed="5" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatMessage" desc="(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatMessage" desc="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatMessage" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evalMessageWithArguments" desc="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evalMessageWithArguments" desc="(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toObjectArray" desc="(Ljava/util/List;)[Ljava/lang/Object;"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="248" covered="135"/><counter type="BRANCH" missed="24" covered="10"/><counter type="COMPLEXITY" missed="30" covered="12"/><counter type="METHOD" missed="14" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/i18n/MessageSourceProvider"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lgriffon/core/i18n/MessageSource;"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/i18n/CompositeMessageSource"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Lgriffon/core/i18n/MessageSource;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toMessageSourceArray" desc="(Ljava/util/Collection;)[Lgriffon/core/i18n/MessageSource;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doResolveMessageValue" desc="(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asResourceBundle" desc="()Ljava/util/ResourceBundle;"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><counter type="INSTRUCTION" missed="467" covered="283"/><counter type="BRANCH" missed="29" covered="13"/><counter type="COMPLEXITY" missed="56" covered="27"/><counter type="METHOD" missed="37" covered="25"/><counter type="CLASS" missed="1" covered="5"/></package><package name="org/codehaus/griffon/runtime/util"><class name="org/codehaus/griffon/runtime/util/AbstractCompositeResourceBundleBuilder"><method name="&lt;init&gt;" desc="(Lgriffon/core/resources/ResourceHandler;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/String;)Ljava/util/ResourceBundle;"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;"><counter type="INSTRUCTION" missed="12" covered="110"/><counter type="BRANCH" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResourceHandler" desc="()Lgriffon/core/resources/ResourceHandler;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResourceAsURL" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL;"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResources" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="167"/><counter type="BRANCH" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/util/DefaultCompositeResourceBundleBuilder"><method name="&lt;init&gt;" desc="(Lgriffon/core/resources/ResourceHandler;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadBundlesFor" desc="(Ljava/lang/String;)Ljava/util/Collection;"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadBundleFromProperties" desc="(Ljava/lang/String;)Ljava/util/Collection;"><counter type="INSTRUCTION" missed="2" covered="40"/><counter type="BRANCH" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadBundleFromClass" desc="(Ljava/lang/String;)Ljava/util/Collection;"><counter type="INSTRUCTION" missed="18" covered="37"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadClass" desc="(Ljava/lang/String;)Ljava/lang/Class;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="(Ljava/lang/Class;)Ljava/util/ResourceBundle;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="117"/><counter type="BRANCH" missed="3" covered="7"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/util/ResourceBundleProvider"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setResourceBundleBuilder" desc="(Lgriffon/util/CompositeResourceBundleBuilder;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/util/ResourceBundle;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="32" covered="305"/><counter type="BRANCH" missed="4" covered="12"/><counter type="COMPLEXITY" missed="4" covered="20"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="3"/></package><package name="org/codehaus/griffon/runtime/core"><class name="org/codehaus/griffon/runtime/core/TestApplicationBootstrapper"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTestCase" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadModules" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortModules" desc="(Ljava/util/List;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="16" covered="42"/><counter type="BRANCH" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCollectModulesFromMethod" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="53" covered="5"/><counter type="BRANCH" missed="9" covered="1"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCollectOverridingModules" desc="(Ljava/util/Collection;)V"><counter type="INSTRUCTION" missed="60" covered="4"/><counter type="BRANCH" missed="9" covered="1"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="harvestModulesFromMethod" desc="(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/util/List;"><counter type="INSTRUCTION" missed="102" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCollectModulesFromInnerClasses" desc="(Ljava/util/Collection;)V"><counter type="INSTRUCTION" missed="8" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCollectModulesFromFields" desc="(Ljava/util/Collection;)V"><counter type="INSTRUCTION" missed="8" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="harvestQualifiers" desc="(Ljava/lang/Class;)Ljava/util/List;"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="harvestQualifiers" desc="(Ljava/lang/reflect/Field;)Ljava/util/List;"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="366" covered="91"/><counter type="BRANCH" missed="55" covered="9"/><counter type="COMPLEXITY" missed="34" covered="10"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/DefaultApplicationBootstrapper"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadModules" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/ResourceBundleConfigurationProvider"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lgriffon/core/Configuration;"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/DelegatingMutableConfiguration"><method name="&lt;init&gt;" desc="(Lgriffon/core/Configuration;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAs" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeConverted" desc="(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asFlatMap" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asResourceBundle" desc="()Ljava/util/ResourceBundle;"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsString" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsKey" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="198" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/ConfigurationDecorator"><method name="&lt;init&gt;" desc="(Lgriffon/core/Configuration;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAt" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAt" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsBoolean" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsBoolean" desc="(Ljava/lang/String;Z)Z"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsInt" desc="(Ljava/lang/String;)I"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsInt" desc="(Ljava/lang/String;I)I"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsLong" desc="(Ljava/lang/String;)J"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsLong" desc="(Ljava/lang/String;J)J"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsFloat" desc="(Ljava/lang/String;)F"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsFloat" desc="(Ljava/lang/String;F)F"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsDouble" desc="(Ljava/lang/String;)D"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsDouble" desc="(Ljava/lang/String;D)D"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsString" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsString" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAs" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAs" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConverted" desc="(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConverted" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asProperties" desc="()Ljava/util/Properties;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsKey" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asFlatMap" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asResourceBundle" desc="()Ljava/util/ResourceBundle;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertValue" desc="(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="115" covered="41"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="21" covered="7"/><counter type="METHOD" missed="19" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/DefaultMacOSXPlatformHandler"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handle" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/MutableConfigurationDecoratorFactory"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(Lgriffon/core/Configuration;)Lorg/codehaus/griffon/runtime/core/ConfigurationDecorator;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/DefaultApplicationClassLoader"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/ClassLoader;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/AbstractGriffonApplication"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="(Ljava/lang/Class;[Ljava/lang/String;)Lgriffon/core/GriffonApplication;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLocale" desc="()Ljava/util/Locale;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLocale" desc="(Ljava/util/Locale;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStartupArgs" desc="()[Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLog" desc="()Lorg/slf4j/Logger;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLocaleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addShutdownHandler" desc="(Lgriffon/core/ShutdownHandler;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeShutdownHandler" desc="(Lgriffon/core/ShutdownHandler;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPhase" desc="()Lgriffon/core/env/ApplicationPhase;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPhase" desc="(Lgriffon/core/env/ApplicationPhase;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getApplicationClassLoader" desc="()Lgriffon/core/ApplicationClassLoader;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContext" desc="()Lgriffon/core/Context;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfiguration" desc="()Lgriffon/core/Configuration;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUIThreadManager" desc="()Lgriffon/core/threading/UIThreadManager;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEventRouter" desc="()Lgriffon/core/event/EventRouter;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getArtifactManager" desc="()Lgriffon/core/artifact/ArtifactManager;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActionManager" desc="()Lgriffon/core/controller/ActionManager;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAddonManager" desc="()Lgriffon/core/addon/AddonManager;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMvcGroupManager" desc="()Lgriffon/core/mvc/MVCGroupManager;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessageSource" desc="()Lgriffon/core/i18n/MessageSource;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResourceResolver" desc="()Lgriffon/core/resources/ResourceResolver;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResourceHandler" desc="()Lgriffon/core/resources/ResourceHandler;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResourceInjector" desc="()Lgriffon/core/resources/ResourceInjector;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInjector" desc="()Lgriffon/core/injection/Injector;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setInjector" desc="(Lgriffon/core/injection/Injector;)V"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWindowManager" desc="()Lgriffon/core/view/WindowManager;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getApplicationConfigurer" desc="()Lgriffon/core/ApplicationConfigurer;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="()V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ready" desc="()V"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="showStartingWindow" desc="()V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canShutdown" desc="()Z"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shutdown" desc="()Z"><counter type="INSTRUCTION" missed="142" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startup" desc="()V"><counter type="INSTRUCTION" missed="200" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="event" desc="(Lgriffon/core/ApplicationEvent;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="754" covered="11"/><counter type="BRANCH" missed="50" covered="0"/><counter type="COMPLEXITY" missed="61" covered="1"/><counter type="METHOD" missed="36" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/AbstractApplicationBootstrapper$3"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/AbstractApplicationBootstrapper;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doConfigure" desc="()V"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/AbstractApplicationBootstrapper$2"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/AbstractApplicationBootstrapper;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="process" desc="(Ljava/lang/ClassLoader;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="13" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="21"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/AbstractApplicationBootstrapper$4"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/AbstractApplicationBootstrapper;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doConfigure" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/AbstractApplicationBootstrapper$1"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/AbstractApplicationBootstrapper;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="1" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/MVCGroupExceptionHandler"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerWith" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="([Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="25"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/AbstractApplicationBootstrapper"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bootstrap" desc="()V"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createBindings" desc="()Ljava/lang/Iterable;"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createArtifactsModule" desc="(Ljava/util/List;)V"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createApplicationModule" desc="(Ljava/util/List;)V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectModuleBindings" desc="(Ljava/util/Collection;)V"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortModules" desc="(Ljava/util/List;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createInjector" desc="(Ljava/lang/Iterable;)V"><counter type="INSTRUCTION" missed="8" covered="27"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="220"/><counter type="BRANCH" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/DefaultObservableContext"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lgriffon/core/Context;)V"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addContextEventListener" desc="(Lgriffon/core/ObservableContext$ContextEventListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeContextEventListener" desc="(Lgriffon/core/ObservableContext$ContextEventListener;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContextEventListeners" desc="()[Lgriffon/core/ObservableContext$ContextEventListener;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAs" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeConverted" desc="(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="86" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="destroy" desc="()V"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fireContextEvent" desc="(Lgriffon/core/ObservableContext$ContextEvent$Type;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fireContextEvent" desc="(Lgriffon/core/ObservableContext$ContextEvent;)V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="422" covered="0"/><counter type="BRANCH" missed="66" covered="0"/><counter type="COMPLEXITY" missed="45" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/DefaultApplicationConfigurer"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="()V"><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runLifecycleHandler" desc="(Lgriffon/core/env/Lifecycle;)V"><counter type="INSTRUCTION" missed="8" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doInitialize" desc="()V"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeEventHandler" desc="()V"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="event" desc="(Lgriffon/core/ApplicationEvent;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializePropertyEditors" desc="()V"><counter type="INSTRUCTION" missed="0" covered="143"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeResourcesInjector" desc="()V"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeArtifactManager" desc="()V"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyPlatformTweaks" desc="()V"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeAddonManager" desc="()V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeMvcManager" desc="()V"><counter type="INSTRUCTION" missed="9" covered="90"/><counter type="BRANCH" missed="4" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initializeActionManager" desc="()V"><counter type="INSTRUCTION" missed="37" covered="52"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadClass" desc="(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;"><counter type="INSTRUCTION" missed="14" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applicationClassLoader" desc="()Lgriffon/core/ApplicationClassLoader;"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="73" covered="500"/><counter type="BRANCH" missed="9" covered="17"/><counter type="COMPLEXITY" missed="8" covered="21"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/DefaultGriffonApplication"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContainerGenerator" desc="()Lgriffon/core/CallableWithArgs;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setContainerGenerator" desc="(Lgriffon/core/CallableWithArgs;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createApplicationContainer" desc="(Ljava/util/Map;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/DefaultContextFactory"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Lgriffon/core/Context;)Lgriffon/core/Context;"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/GriffonExceptionHandlerProvider"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lgriffon/core/ExceptionHandler;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/DefaultApplicationModule"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doConfigure" desc="()V"><counter type="INSTRUCTION" missed="0" covered="277"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="280"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/DelegatingMutableConfiguration$PrivateMapResourceBundle"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/AbstractContext"><method name="&lt;init&gt;" desc="(Lgriffon/core/Context;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentContext" desc="()Lgriffon/core/Context;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAt" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAt" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="destroy" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsKey" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsBoolean" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsBoolean" desc="(Ljava/lang/String;Z)Z"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsInt" desc="(Ljava/lang/String;)I"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsInt" desc="(Ljava/lang/String;I)I"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsLong" desc="(Ljava/lang/String;)J"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsLong" desc="(Ljava/lang/String;J)J"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsFloat" desc="(Ljava/lang/String;)F"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsFloat" desc="(Ljava/lang/String;F)F"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsDouble" desc="(Ljava/lang/String;)D"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsDouble" desc="(Ljava/lang/String;D)D"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsString" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsString" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAs" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAs" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConverted" desc="(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConverted" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertValue" desc="(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="injectMembers" desc="(Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="179" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="364" covered="10"/><counter type="BRANCH" missed="38" covered="0"/><counter type="COMPLEXITY" missed="43" covered="2"/><counter type="METHOD" missed="24" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/LifecycleHandlerProvider$NoopLifecycleHandler"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="()V"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/AbstractVetoable"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addVetoableChangeListener" desc="(Ljava/beans/VetoableChangeListener;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeVetoableChangeListener" desc="(Ljava/beans/VetoableChangeListener;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVetoableChangeListeners" desc="()[Ljava/beans/VetoableChangeListener;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addVetoableChangeListener" desc="(Ljava/lang/String;Ljava/beans/VetoableChangeListener;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeVetoableChangeListener" desc="(Ljava/lang/String;Ljava/beans/VetoableChangeListener;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVetoableChangeListeners" desc="(Ljava/lang/String;)[Ljava/beans/VetoableChangeListener;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fireVetoableChange" desc="(Ljava/beans/PropertyChangeEvent;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fireVetoableChange" desc="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/LifecycleHandlerProvider"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setGriffonApplication" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setApplicationClassLoader" desc="(Lgriffon/core/ApplicationClassLoader;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lgriffon/core/LifecycleHandler;"><counter type="INSTRUCTION" missed="56" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="56" covered="29"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/AbstractConfiguration"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAt" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAt" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsBoolean" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsBoolean" desc="(Ljava/lang/String;Z)Z"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsInt" desc="(Ljava/lang/String;)I"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsInt" desc="(Ljava/lang/String;I)I"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsLong" desc="(Ljava/lang/String;)J"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsLong" desc="(Ljava/lang/String;J)J"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsFloat" desc="(Ljava/lang/String;)F"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsFloat" desc="(Ljava/lang/String;F)F"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsDouble" desc="(Ljava/lang/String;)D"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsDouble" desc="(Ljava/lang/String;D)D"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsString" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAs" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAs" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConverted" desc="(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConverted" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertValue" desc="(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsString" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asProperties" desc="()Ljava/util/Properties;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="131" covered="24"/><counter type="BRANCH" missed="8" covered="4"/><counter type="COMPLEXITY" missed="23" covered="5"/><counter type="METHOD" missed="19" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/DefaultObservableContext$1"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/DefaultObservableContext;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contextChanged" desc="(Lgriffon/core/ObservableContext$ContextEvent;)V"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/PlatformHandlerProvider"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lgriffon/core/PlatformHandler;"><counter type="INSTRUCTION" missed="31" covered="48"/><counter type="BRANCH" missed="4" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="78"/><counter type="BRANCH" missed="4" covered="2"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/DefaultContext"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lgriffon/core/Context;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doGet" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasKey" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAs" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeConverted" desc="(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAt" desc="(Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="destroy" desc="()V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keySet" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="76" covered="15"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="9" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/TestApplicationBootstrapper$InnerClassesModule"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/TestApplicationBootstrapper;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doConfigure" desc="()V"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="harvestBindings" desc="(Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="103" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="145" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/DefaultObservableContextFactory"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(Lgriffon/core/Context;)Lgriffon/core/Context;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/ResourceBundleConfiguration"><method name="&lt;init&gt;" desc="(Ljava/util/ResourceBundle;)V"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsKey" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asFlatMap" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asResourceBundle" desc="()Ljava/util/ResourceBundle;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/DefaultContextProvider"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lgriffon/core/Context;"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/DefaultConfigurationDecoratorFactory"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Lgriffon/core/Configuration;)Lorg/codehaus/griffon/runtime/core/ConfigurationDecorator;"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/AbstractGriffonApplication$1"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/AbstractGriffonApplication;Ljava/util/concurrent/CountDownLatch;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="([Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/DefaultExecutorServiceManager"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExecutorServices" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/ExecutorService;"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/ExecutorService;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shutdownAll" desc="()V"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="35"/><counter type="BRANCH" missed="2" covered="4"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/DefaultApplicationConfigurer$1"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/DefaultApplicationConfigurer;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="process" desc="(Ljava/lang/ClassLoader;Ljava/lang/Class;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="21" covered="38"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="44"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/DefaultApplicationConfigurer$3"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/DefaultApplicationConfigurer;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="([Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/AbstractObservable"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addPropertyChangeListener" desc="(Ljava/beans/PropertyChangeListener;)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addPropertyChangeListener" desc="(Ljava/lang/String;Ljava/beans/PropertyChangeListener;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removePropertyChangeListener" desc="(Ljava/beans/PropertyChangeListener;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removePropertyChangeListener" desc="(Ljava/lang/String;Ljava/beans/PropertyChangeListener;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyChangeListeners" desc="()[Ljava/beans/PropertyChangeListener;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyChangeListeners" desc="(Ljava/lang/String;)[Ljava/beans/PropertyChangeListener;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="firePropertyChange" desc="(Ljava/beans/PropertyChangeEvent;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="firePropertyChange" desc="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="23"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/DefaultApplicationConfigurer$2"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/DefaultApplicationConfigurer;Lgriffon/core/resources/ResourceInjector;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="([Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/DefaultConfiguration"><method name="&lt;init&gt;" desc="(Ljava/util/ResourceBundle;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/TestApplicationBootstrapper$FieldsModule"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/TestApplicationBootstrapper;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doConfigure" desc="()V"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="harvestBindings" desc="(Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="178" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="220" covered="0"/><counter type="BRANCH" missed="38" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/DefaultMacOSXPlatformHandler$GriffonMacOSXSupport"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;Z)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAbout" desc="()V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handlePrefs" desc="()V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleQuit" desc="()V"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/DefaultPlatformHandler"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handle" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/AbstractLifecycleHandler"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getApplication" desc="()Lgriffon/core/GriffonApplication;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isUIThread" desc="()Z"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runFuture" desc="(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runFuture" desc="(Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runInsideUIAsync" desc="(Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runInsideUISync" desc="(Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runOutsideUI" desc="(Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runInsideUISync" desc="(Ljava/util/concurrent/Callable;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="9"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="8" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="3413" covered="1712"/><counter type="BRANCH" missed="340" covered="58"/><counter type="COMPLEXITY" missed="370" covered="121"/><counter type="METHOD" missed="190" covered="102"/><counter type="CLASS" missed="14" covered="32"/></package><package name="griffon/javafx/formatters"><class name="griffon/javafx/formatters/ColorFormatter"><method name="getInstance" desc="(Ljava/lang/String;)Lgriffon/javafx/formatters/ColorFormatter;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljavafx/scene/paint/Color;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljavafx/scene/paint/Color;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPattern" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseColor" desc="(Ljava/lang/String;)Ljavafx/scene/paint/Color;"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="red" desc="(Ljavafx/scene/paint/Color;)I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="green" desc="(Ljavafx/scene/paint/Color;)I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="blue" desc="(Ljavafx/scene/paint/Color;)I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="alpha" desc="(Ljavafx/scene/paint/Color;)I"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toIntColor" desc="(D)I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="padLeft" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="226" covered="0"/><counter type="BRANCH" missed="23" covered="0"/><counter type="COMPLEXITY" missed="26" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/formatters/ColorFormatter$LongWithAlphaColorFormatterDelegate"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljavafx/scene/paint/Color;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljavafx/scene/paint/Color;"><counter type="INSTRUCTION" missed="85" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="124" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/formatters/ColorFormatter$AbstractColorFormatterDelegate"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPattern" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/formatters/ColorFormatter$ShortWithAlphaColorFormatterDelegate"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljavafx/scene/paint/Color;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljavafx/scene/paint/Color;"><counter type="INSTRUCTION" missed="85" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="124" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/formatters/ColorFormatter$LongColorFormatterDelegate"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljavafx/scene/paint/Color;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljavafx/scene/paint/Color;"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="98" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/formatters/ColorFormatter$ShortColorFormatterDelegate"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljavafx/scene/paint/Color;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljavafx/scene/paint/Color;"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="98" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><counter type="INSTRUCTION" missed="679" covered="0"/><counter type="BRANCH" missed="39" covered="0"/><counter type="COMPLEXITY" missed="48" covered="0"/><counter type="METHOD" missed="27" covered="0"/><counter type="CLASS" missed="6" covered="0"/></package><package name="org/codehaus/griffon/runtime/core/resources"><class name="org/codehaus/griffon/runtime/core/resources/AbstractResourceInjector"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="injectResources" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doResourceInjection" desc="(Ljava/lang/Class;Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="229" covered="88"/><counter type="BRANCH" missed="24" covered="12"/><counter type="COMPLEXITY" missed="14" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertValue" desc="(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolvePropertyEditor" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/beans/PropertyEditor;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPropertyValue" desc="(Ljava/lang/Object;Ljava/lang/reflect/Method;Ljava/lang/Object;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFieldValue" desc="(Ljava/lang/Object;Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="372" covered="114"/><counter type="BRANCH" missed="32" covered="14"/><counter type="COMPLEXITY" missed="22" covered="9"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/resources/AbstractResourceHandler"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResourceAsStream" desc="(Ljava/lang/String;)Ljava/io/InputStream;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResourceAsURL" desc="(Ljava/lang/String;)Ljava/net/URL;"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResources" desc="(Ljava/lang/String;)Ljava/util/List;"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toList" desc="(Ljava/util/Enumeration;)Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="37"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/resources/ResourceResolverDecorator"><method name="&lt;init&gt;" desc="(Lgriffon/core/resources/ResourceResolver;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDelegate" desc="()Lgriffon/core/resources/ResourceResolver;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;[Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/util/List;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/util/List;Ljava/util/Locale;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;[Ljava/lang/Object;Ljava/util/Locale;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/util/List;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/util/List;Ljava/util/Locale;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/Locale;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/Locale;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceValue" desc="(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatResource" desc="(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatResource" desc="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatResource" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/util/List;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/util/List;Ljava/util/Locale;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/util/List;Ljava/util/Locale;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/util/List;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/Locale;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/Locale;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;[Ljava/lang/Object;Ljava/util/Locale;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;[Ljava/lang/Object;Ljava/util/Locale;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertValue" desc="(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="295" covered="9"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="40" covered="1"/><counter type="METHOD" missed="38" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/resources/DefaultResourceResolver"><method name="&lt;init&gt;" desc="(Lgriffon/util/CompositeResourceBundleBuilder;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBasename" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doResolveResourceValue" desc="(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBundle" desc="(Ljava/util/Locale;)Ljava/util/ResourceBundle;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="19"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/resources/DefaultResourceInjector"><method name="&lt;init&gt;" desc="(Lgriffon/core/resources/ResourceResolver;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveResource" desc="(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/resources/ResourceResolverProvider"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lgriffon/core/resources/ResourceResolver;"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/resources/AbstractResourceResolver"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveResource" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;[Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/util/List;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/util/List;Ljava/util/Locale;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;[Ljava/lang/Object;Ljava/util/Locale;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/util/List;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/util/List;Ljava/util/Locale;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/Locale;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResource" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/Locale;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/util/List;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/util/List;Ljava/util/Locale;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/util/List;Ljava/util/Locale;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/util/List;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/Locale;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/Locale;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;[Ljava/lang/Object;Ljava/util/Locale;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;[Ljava/lang/Object;Ljava/util/Locale;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceConverted" desc="(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveResourceValue" desc="(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatResource" desc="(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatResource" desc="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatResource" desc="(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evalResourceWithArguments" desc="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evalResourceWithArguments" desc="(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toObjectArray" desc="(Ljava/util/List;)[Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertValue" desc="(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="534" covered="7"/><counter type="BRANCH" missed="38" covered="0"/><counter type="COMPLEXITY" missed="59" covered="2"/><counter type="METHOD" missed="40" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/resources/CompositeResourceResolver"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Lgriffon/core/resources/ResourceResolver;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toResourceResolverArray" desc="(Ljava/util/Collection;)[Lgriffon/core/resources/ResourceResolver;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doResolveResourceValue" desc="(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/resources/DefaultApplicationResourceInjector"><method name="&lt;init&gt;" desc="(Lgriffon/core/resources/ResourceResolver;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/resources/DefaultResourceHandler"><method name="&lt;init&gt;" desc="(Lgriffon/core/ApplicationClassLoader;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classloader" desc="()Ljava/lang/ClassLoader;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/resources/DefaultResourceResolverDecoratorFactory"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Lgriffon/core/resources/ResourceResolver;)Lorg/codehaus/griffon/runtime/core/resources/ResourceResolverDecorator;"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="1337" covered="255"/><counter type="BRANCH" missed="79" covered="17"/><counter type="COMPLEXITY" missed="134" covered="26"/><counter type="METHOD" missed="92" covered="20"/><counter type="CLASS" missed="1" covered="10"/></package><package name="griffon/core/formatters"><class name="griffon/core/formatters/BooleanFormatter"><method name="getInstance" desc="(Ljava/lang/String;)Lgriffon/core/formatters/BooleanFormatter;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPattern" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseBoolean" desc="(Ljava/lang/String;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/lang/Boolean;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="171" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/formatters/CalendarFormatter"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPattern" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/util/Calendar;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/util/Calendar;"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/formatters/BigDecimalFormatter"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/math/BigDecimal;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/math/BigDecimal;"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="85" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/formatters/IntegerFormatter"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/lang/Integer;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/formatters/BooleanFormatter$SwitchBooleanFormatterDelegate"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/formatters/LongFormatter"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/lang/Long;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/lang/Long;"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/formatters/ByteFormatter"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/lang/Byte;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/lang/Byte;"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/formatters/DateFormatter"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPattern" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/util/Date;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/util/Date;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/formatters/LocaleFormatter"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/util/Locale;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/util/Locale;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/formatters/FloatFormatter"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/lang/Float;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/lang/Float;"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/formatters/BooleanFormatter$QueryBooleanFormatterDelegate"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/formatters/BigIntegerFormatter"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/math/BigInteger;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/math/BigInteger;"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/formatters/ParseException"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/formatters/AbstractFormatter"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseHexInt" desc="(Ljava/lang/String;Ljava/lang/Class;)I"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseHexInt" desc="(Ljava/lang/Number;)I"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseError" desc="(Ljava/lang/Object;Ljava/lang/Class;)Lgriffon/core/formatters/ParseException;"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseError" desc="(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Exception;)Lgriffon/core/formatters/ParseException;"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/formatters/DoubleFormatter"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/lang/Double;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/lang/Double;"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/formatters/ShortFormatter"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/lang/Short;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/lang/Short;"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/formatters/BooleanFormatter$BoolBooleanFormatterDelegate"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/formatters/BooleanFormatter$AbstractBooleanFormatterDelegate"><method name="&lt;init&gt;" desc="(Ljava/lang/String;[Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPattern" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/lang/Boolean;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><counter type="INSTRUCTION" missed="1067" covered="0"/><counter type="BRANCH" missed="124" covered="0"/><counter type="COMPLEXITY" missed="131" covered="0"/><counter type="METHOD" missed="69" covered="0"/><counter type="CLASS" missed="18" covered="0"/></package><package name="griffon/core/controller"><class name="griffon/core/controller/AbortActionExecution"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/controller/ActionExecutionStatus"><method name="values" desc="()[Lgriffon/core/controller/ActionExecutionStatus;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgriffon/core/controller/ActionExecutionStatus;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="39"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="12" covered="39"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="1" covered="1"/></package><package name="org/codehaus/griffon/runtime/core/event"><class name="org/codehaus/griffon/runtime/core/event/DefaultEventHandler"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/event/AbstractEventRouter$DefaultThreadFactory"><method name="&lt;init&gt;" desc="(I)V"><counter type="INSTRUCTION" missed="3" covered="29"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newThread" desc="(Ljava/lang/Runnable;)Ljava/lang/Thread;"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="29"/><counter type="BRANCH" missed="5" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/event/AbstractEventRouter$MethodInfo"><method name="&lt;init&gt;" desc="(Lgriffon/util/MethodDescriptor;Ljava/lang/reflect/Method;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDescriptor" desc="()Lgriffon/util/MethodDescriptor;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMethod" desc="()Ljava/lang/reflect/Method;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/event/DefaultEventRouter"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setUIThreadManager" desc="(Lgriffon/core/threading/UIThreadManager;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doPublishOutsideUI" desc="(Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doPublishAsync" desc="(Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="15"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/event/AbstractEventRouter"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExecutorServiceManager" desc="(Lgriffon/core/ExecutorServiceManager;)V"><counter type="INSTRUCTION" missed="6" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runInsideExecutorService" desc="(Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEventPublishingEnabled" desc="()Z"><counter type="INSTRUCTION" missed="5" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEventPublishingEnabled" desc="(Z)V"><counter type="INSTRUCTION" missed="5" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="publishEvent" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEvent" desc="(Ljava/lang/String;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="3" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="publishEventOutsideUI" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEventOutsideUI" desc="(Ljava/lang/String;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEventAsync" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEventAsync" desc="(Ljava/lang/String;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEvent" desc="(Lgriffon/core/event/Event;)V"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEventOutsideUI" desc="(Lgriffon/core/event/Event;)V"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEventAsync" desc="(Lgriffon/core/event/Event;)V"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeEventListener" desc="(Ljava/lang/Class;Lgriffon/core/CallableWithArgs;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeEventListener" desc="(Ljava/lang/Class;Lgriffon/core/RunnableWithArgs;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fireEvent" desc="(Lgriffon/core/RunnableWithArgs;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fireEvent" desc="(Lgriffon/core/CallableWithArgs;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fireEvent" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEventListener" desc="(Ljava/lang/Class;Lgriffon/core/CallableWithArgs;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEventListener" desc="(Ljava/lang/Class;Lgriffon/core/RunnableWithArgs;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEventListener" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="116" covered="20"/><counter type="BRANCH" missed="12" covered="4"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEventListener" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeEventListener" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="86" covered="35"/><counter type="BRANCH" missed="12" covered="6"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEventListener" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEventListener" desc="(Ljava/lang/String;Lgriffon/core/CallableWithArgs;)V"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEventListener" desc="(Ljava/lang/String;Lgriffon/core/RunnableWithArgs;)V"><counter type="INSTRUCTION" missed="8" covered="53"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEventListener" desc="(Ljava/lang/String;Lgriffon/core/CallableWithArgs;)V"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeEventListener" desc="(Ljava/lang/String;Lgriffon/core/RunnableWithArgs;)V"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEventListeners" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEventListeners" desc="(Ljava/lang/String;)Ljava/util/Collection;"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildPublisher" desc="(Ljava/lang/String;Ljava/util/List;Ljava/lang/String;)Ljava/lang/Runnable;"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeNestedListeners" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="27" covered="67"/><counter type="BRANCH" missed="3" covered="7"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNestedListener" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="8" covered="28"/><counter type="BRANCH" missed="4" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asArray" desc="(Ljava/util/List;)[Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="848" covered="344"/><counter type="BRANCH" missed="73" covered="29"/><counter type="COMPLEXITY" missed="68" covered="19"/><counter type="METHOD" missed="22" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/event/AbstractEventPublisher"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setEventRouter" desc="(Lgriffon/core/event/EventRouter;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEventPublishingEnabled" desc="()Z"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setEventPublishingEnabled" desc="(Z)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeEventListener" desc="(Ljava/lang/Class;Lgriffon/core/CallableWithArgs;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeEventListener" desc="(Ljava/lang/Class;Lgriffon/core/RunnableWithArgs;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEventListener" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEventListener" desc="(Ljava/lang/String;Lgriffon/core/CallableWithArgs;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEventListener" desc="(Ljava/lang/String;Lgriffon/core/RunnableWithArgs;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEvent" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEventOutsideUI" desc="(Lgriffon/core/event/Event;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeEventListener" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEventListener" desc="(Ljava/lang/Class;Lgriffon/core/CallableWithArgs;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEventListener" desc="(Ljava/lang/Class;Lgriffon/core/RunnableWithArgs;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEventOutsideUI" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEventOutsideUI" desc="(Ljava/lang/String;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEvent" desc="(Ljava/lang/String;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEventAsync" desc="(Ljava/lang/String;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeEventListener" desc="(Ljava/lang/String;Lgriffon/core/CallableWithArgs;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeEventListener" desc="(Ljava/lang/String;Lgriffon/core/RunnableWithArgs;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeEventListener" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEventListener" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEvent" desc="(Lgriffon/core/event/Event;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEventAsync" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="publishEventAsync" desc="(Lgriffon/core/event/Event;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEventListeners" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEventListeners" desc="(Ljava/lang/String;)Ljava/util/Collection;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="268" covered="0"/><counter type="COMPLEXITY" missed="27" covered="0"/><counter type="METHOD" missed="27" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/event/AbstractEventRouter$1"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/event/AbstractEventRouter;Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/event/AbstractEventRouter$2"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/event/AbstractEventRouter;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V"><counter type="INSTRUCTION" missed="27" covered="86"/><counter type="BRANCH" missed="4" covered="8"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="101"/><counter type="BRANCH" missed="4" covered="8"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/event/DefaultEventPublisher"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/event/AbstractEventRouter$MethodCache"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEventListener" desc="(Ljava/lang/Class;)Z"><counter type="INSTRUCTION" missed="9" covered="21"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMatchingMethodFor" desc="(Ljava/lang/Class;Lgriffon/util/MethodDescriptor;)Ljava/lang/reflect/Method;"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fetchMethodMetadata" desc="(Ljava/lang/Class;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="27" covered="29"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="71" covered="58"/><counter type="BRANCH" missed="12" covered="6"/><counter type="COMPLEXITY" missed="9" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="1311" covered="550"/><counter type="BRANCH" missed="96" covered="44"/><counter type="COMPLEXITY" missed="120" covered="32"/><counter type="METHOD" missed="59" covered="23"/><counter type="CLASS" missed="4" covered="6"/></package><package name="org/codehaus/griffon/runtime/core/view"><class name="org/codehaus/griffon/runtime/core/view/AbstractWindowManager$2"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/view/AbstractWindowManager;Ljava/lang/String;ILjava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/view/AbstractWindowManager$1"><method name="&lt;init&gt;" desc="(Lorg/codehaus/griffon/runtime/core/view/AbstractWindowManager;Ljava/lang/String;ILjava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/view/ConfigurableWindowDisplayHandler"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;Lgriffon/core/view/WindowDisplayHandler;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="show" desc="(Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="54" covered="36"/><counter type="BRANCH" missed="9" covered="3"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hide" desc="(Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="54" covered="36"/><counter type="BRANCH" missed="9" covered="3"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleShowByInjectedHandler" desc="(Ljava/lang/String;Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="19" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleHideByInjectedHandler" desc="(Ljava/lang/String;Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="19" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDelegateWindowsDisplayHandler" desc="()Lgriffon/core/view/WindowDisplayHandler;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canBeRun" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="windowManagerBlock" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="windowBlock" desc="(Ljava/lang/String;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getApplication" desc="()Lgriffon/core/GriffonApplication;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fetchDefaultWindowDisplayHandler" desc="()Lgriffon/core/view/WindowDisplayHandler;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="205" covered="120"/><counter type="BRANCH" missed="28" covered="6"/><counter type="COMPLEXITY" missed="20" covered="10"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/core/view/NoopWindowManager"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findWindow" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAt" desc="(I)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStartingWindow" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWindows" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWindowNames" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findWindowName" desc="(Ljava/lang/Object;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexOf" desc="(Ljava/lang/Object;)I"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attach" desc="(Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detach" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="show" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="show" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hide" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hide" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canShutdown" desc="(Lgriffon/core/GriffonApplication;)Z"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onShutdown" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="countVisibleWindows" desc="()I"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAutoShutdown" desc="()Z"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/view/AbstractWindowManager"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;Lgriffon/core/view/WindowDisplayHandler;)V"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getApplication" desc="()Lgriffon/core/GriffonApplication;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWindowNames" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findWindowName" desc="(Ljava/lang/Object;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="11" covered="32"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(Ljava/lang/Object;)I"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findWindow" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAt" desc="(I)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStartingWindow" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="24" covered="28"/><counter type="BRANCH" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveStartingWindowFromConfiguration" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWindows" desc="()Ljava/util/Collection;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="attach" desc="(Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="11" covered="57"/><counter type="BRANCH" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="detach" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="show" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="8" covered="62"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="show" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hide" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="8" covered="62"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveWindowDisplayHandler" desc="()Lgriffon/core/view/WindowDisplayHandler;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hide" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canShutdown" desc="(Lgriffon/core/GriffonApplication;)Z"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onShutdown" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countVisibleWindows" desc="()I"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAutoShutdown" desc="()Z"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="event" desc="(Lgriffon/core/ApplicationEvent;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="event" desc="(Ljava/lang/String;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="8" covered="10"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="281" covered="329"/><counter type="BRANCH" missed="39" covered="13"/><counter type="COMPLEXITY" missed="35" covered="15"/><counter type="METHOD" missed="10" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="527" covered="539"/><counter type="BRANCH" missed="67" covered="19"/><counter type="COMPLEXITY" missed="73" covered="29"/><counter type="METHOD" missed="31" covered="28"/><counter type="CLASS" missed="1" covered="4"/></package><package name="griffon/javafx"><class name="griffon/javafx/AbstractJavaFXGriffonApplication"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(Ljavafx/stage/Stage;)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stop" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addPropertyChangeListener" desc="(Ljava/beans/PropertyChangeListener;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addPropertyChangeListener" desc="(Ljava/lang/String;Ljava/beans/PropertyChangeListener;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removePropertyChangeListener" desc="(Ljava/beans/PropertyChangeListener;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removePropertyChangeListener" desc="(Ljava/lang/String;Ljava/beans/PropertyChangeListener;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyChangeListeners" desc="()[Ljava/beans/PropertyChangeListener;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertyChangeListeners" desc="(Ljava/lang/String;)[Ljava/beans/PropertyChangeListener;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="firePropertyChange" desc="(Ljava/beans/PropertyChangeEvent;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="firePropertyChange" desc="(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLocale" desc="()Ljava/util/Locale;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLocale" desc="(Ljava/util/Locale;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStartupArgs" desc="()[Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLog" desc="()Lorg/slf4j/Logger;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLocaleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addShutdownHandler" desc="(Lgriffon/core/ShutdownHandler;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeShutdownHandler" desc="(Lgriffon/core/ShutdownHandler;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPhase" desc="()Lgriffon/core/env/ApplicationPhase;"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPhase" desc="(Lgriffon/core/env/ApplicationPhase;)V"><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getApplicationClassLoader" desc="()Lgriffon/core/ApplicationClassLoader;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContext" desc="()Lgriffon/core/Context;"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfiguration" desc="()Lgriffon/core/Configuration;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUIThreadManager" desc="()Lgriffon/core/threading/UIThreadManager;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEventRouter" desc="()Lgriffon/core/event/EventRouter;"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArtifactManager" desc="()Lgriffon/core/artifact/ArtifactManager;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getActionManager" desc="()Lgriffon/core/controller/ActionManager;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAddonManager" desc="()Lgriffon/core/addon/AddonManager;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMvcGroupManager" desc="()Lgriffon/core/mvc/MVCGroupManager;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessageSource" desc="()Lgriffon/core/i18n/MessageSource;"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResourceResolver" desc="()Lgriffon/core/resources/ResourceResolver;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResourceHandler" desc="()Lgriffon/core/resources/ResourceHandler;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResourceInjector" desc="()Lgriffon/core/resources/ResourceInjector;"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInjector" desc="()Lgriffon/core/injection/Injector;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInjector" desc="(Lgriffon/core/injection/Injector;)V"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWindowManager" desc="()Lgriffon/core/view/WindowManager;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getApplicationConfigurer" desc="()Lgriffon/core/ApplicationConfigurer;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialize" desc="()V"><counter type="INSTRUCTION" missed="17" covered="17"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ready" desc="()V"><counter type="INSTRUCTION" missed="1" covered="37"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="showStartingWindow" desc="()V"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canShutdown" desc="()Z"><counter type="INSTRUCTION" missed="40" covered="36"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shutdown" desc="()Z"><counter type="INSTRUCTION" missed="10" covered="129"/><counter type="BRANCH" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startup" desc="()V"><counter type="INSTRUCTION" missed="126" covered="74"/><counter type="BRANCH" missed="21" covered="5"/><counter type="COMPLEXITY" missed="12" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="event" desc="(Lgriffon/core/ApplicationEvent;Ljava/util/List;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$shutdown$1" desc="(Ljava/util/concurrent/CountDownLatch;[Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$start$0" desc="(Ljavafx/stage/WindowEvent;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="297" covered="540"/><counter type="BRANCH" missed="33" covered="23"/><counter type="COMPLEXITY" missed="39" covered="37"/><counter type="METHOD" missed="16" covered="32"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/JavaFXGriffonApplication"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="(Ljava/lang/Class;[Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createApplicationContainer" desc="(Ljava/util/Map;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="4" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterInit" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createApplicationBootstrapper" desc="()Lgriffon/core/ApplicationBootstrapper;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="start" desc="(Ljavafx/stage/Stage;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterStart" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterReady" desc="()V"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shutdown" desc="()Z"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exit" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="52"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="5" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/JavaFXGriffonApplication$1"><method name="&lt;init&gt;" desc="(Lgriffon/javafx/JavaFXGriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="322" covered="608"/><counter type="BRANCH" missed="34" covered="26"/><counter type="COMPLEXITY" missed="45" covered="48"/><counter type="METHOD" missed="21" covered="42"/><counter type="CLASS" missed="0" covered="3"/></package><package name="org/codehaus/griffon/runtime/javafx/controller"><class name="org/codehaus/griffon/runtime/javafx/controller/JavaFXGriffonControllerAction"><method name="&lt;init&gt;" desc="(Lgriffon/core/threading/UIThreadManager;Lgriffon/core/controller/ActionManager;Lgriffon/core/artifact/GriffonController;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAction" desc="(Lgriffon/core/controller/ActionManager;Lgriffon/core/artifact/GriffonController;Ljava/lang/String;)Lgriffon/javafx/support/JavaFXAction;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlePropertyChange" desc="(Ljava/beans/PropertyChangeEvent;)V"><counter type="INSTRUCTION" missed="183" covered="13"/><counter type="BRANCH" missed="41" covered="1"/><counter type="COMPLEXITY" missed="21" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStyleClass" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setStyleClass" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStyle" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setStyle" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGraphicStyleClass" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGraphicStyleClass" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGraphicStyle" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGraphicStyle" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAccelerator" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAccelerator" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSelected" desc="()Z"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSelected" desc="(Z)V"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isVisible" desc="()Z"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVisible" desc="(Z)V"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDescription" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIcon" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIcon" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getImage" desc="()Ljavafx/scene/image/Image;"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setImage" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGraphic" desc="()Ljavafx/scene/Node;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setGraphic" desc="(Ljavafx/scene/Node;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getToolkitAction" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doExecute" desc="([Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doInitialize" desc="()V"><counter type="INSTRUCTION" missed="38" covered="62"/><counter type="BRANCH" missed="8" covered="8"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="(Lgriffon/core/threading/UIThreadManager;Ljava/beans/PropertyChangeEvent;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$null$1" desc="(Ljava/beans/PropertyChangeEvent;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lgriffon/core/controller/ActionManager;Lgriffon/core/artifact/GriffonController;Ljava/lang/String;Ljavafx/event/ActionEvent;)V"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="349" covered="188"/><counter type="BRANCH" missed="55" covered="9"/><counter type="COMPLEXITY" missed="46" covered="17"/><counter type="METHOD" missed="14" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/codehaus/griffon/runtime/javafx/controller/JavaFXActionManager"><method name="&lt;init&gt;" desc="(Lgriffon/core/GriffonApplication;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createControllerAction" desc="(Lgriffon/core/artifact/GriffonController;Ljava/lang/String;)Lgriffon/core/controller/Action;"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doConfigureAction" desc="(Lgriffon/core/controller/Action;Lgriffon/core/artifact/GriffonController;Ljava/lang/String;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="175" covered="177"/><counter type="BRANCH" missed="36" covered="14"/><counter type="COMPLEXITY" missed="25" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="175" covered="194"/><counter type="BRANCH" missed="36" covered="14"/><counter type="COMPLEXITY" missed="25" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="524" covered="382"/><counter type="BRANCH" missed="91" covered="23"/><counter type="COMPLEXITY" missed="71" covered="21"/><counter type="METHOD" missed="14" covered="21"/><counter type="CLASS" missed="0" covered="2"/></package><package name="griffon/core/editors"><class name="griffon/core/editors/DatePropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveFormatter" desc="()Lgriffon/core/formatters/Formatter;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="93" covered="3"/><counter type="BRANCH" missed="14" covered="0"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/editors/PropertyEditorResolver$WeakCache"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="5" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="44"/><counter type="BRANCH" missed="6" covered="4"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/editors/IntegerPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsNumber" desc="(Ljava/lang/Number;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveFormatter" desc="()Lgriffon/core/formatters/Formatter;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="66" covered="3"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/editors/ValueConversionException"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Exception;)V"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Exception;)V"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Ljava/lang/Class;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/editors/FilePropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/editors/BigDecimalPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsNumber" desc="(Ljava/lang/Number;)V"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveFormatter" desc="()Lgriffon/core/formatters/Formatter;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="85" covered="3"/><counter type="BRANCH" missed="14" covered="0"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/editors/BigIntegerPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsNumber" desc="(Ljava/lang/Number;)V"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveFormatter" desc="()Lgriffon/core/formatters/Formatter;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="83" covered="3"/><counter type="BRANCH" missed="14" covered="0"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/editors/BooleanPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsBoolean" desc="(Ljava/lang/Boolean;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveFormatter" desc="()Lgriffon/core/formatters/Formatter;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="3"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/editors/AbstractPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFormat" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFormat" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsText" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAsText" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueInternal" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAsTextInternal" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsTextInternal" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFormattedValue" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFormattedValue" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveFormatter" desc="()Lgriffon/core/formatters/Formatter;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="illegalValue" desc="(Ljava/lang/Object;Ljava/lang/Class;)Lgriffon/core/editors/ValueConversionException;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="illegalValue" desc="(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Exception;)Lgriffon/core/editors/ValueConversionException;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="118" covered="18"/><counter type="BRANCH" missed="13" covered="1"/><counter type="COMPLEXITY" missed="19" covered="4"/><counter type="METHOD" missed="12" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/editors/DoublePropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsNumber" desc="(Ljava/lang/Number;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveFormatter" desc="()Lgriffon/core/formatters/Formatter;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="66" covered="3"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/editors/BytePropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsNumber" desc="(Ljava/lang/Number;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveFormatter" desc="()Lgriffon/core/formatters/Formatter;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="66" covered="3"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/editors/EnumPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEnumType" desc="()Ljava/lang/Class;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setEnumType" desc="(Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/editors/LocalePropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveFormatter" desc="()Lgriffon/core/formatters/Formatter;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="3"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/editors/StringPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="3"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/editors/LongPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsNumber" desc="(Ljava/lang/Number;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveFormatter" desc="()Lgriffon/core/formatters/Formatter;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="66" covered="3"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/editors/PropertyEditorChain"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;[Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFormat" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFormat" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSize" desc="()I"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyOf" desc="()Lgriffon/core/editors/PropertyEditorChain;"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyOf" desc="(Ljava/lang/Class;)Lgriffon/core/editors/PropertyEditorChain;"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsText" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAsText" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFormattedValue" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFormattedValue" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValueInternal" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsTextInternal" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAsTextInternal" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="illegalValue" desc="(Ljava/lang/Object;Ljava/lang/Class;)Lgriffon/core/editors/ValueConversionException;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="illegalValue" desc="(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Exception;)Lgriffon/core/editors/ValueConversionException;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initPropertyEditors" desc="()V"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="520" covered="56"/><counter type="BRANCH" missed="52" covered="2"/><counter type="COMPLEXITY" missed="43" covered="3"/><counter type="METHOD" missed="17" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/editors/URIPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsFile" desc="(Ljava/io/File;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="63" covered="3"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/editors/ShortPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsNumber" desc="(Ljava/lang/Number;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveFormatter" desc="()Lgriffon/core/formatters/Formatter;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="66" covered="3"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/editors/FloatPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsNumber" desc="(Ljava/lang/Number;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveFormatter" desc="()Lgriffon/core/formatters/Formatter;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="66" covered="3"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/editors/PropertyEditorResolver$NoopPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/editors/URLPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsFile" desc="(Ljava/io/File;)V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="72" covered="3"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/editors/CalendarPropertyEditor"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValueInternal" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleAsString" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveFormatter" desc="()Lgriffon/core/formatters/Formatter;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="110" covered="3"/><counter type="BRANCH" missed="14" covered="0"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/editors/PropertyEditorResolver"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findEditor" desc="(Ljava/lang/Class;)Ljava/beans/PropertyEditor;"><counter type="INSTRUCTION" missed="16" covered="30"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unregisterEditor" desc="(Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="registerEditor" desc="(Ljava/lang/Class;Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="44" covered="72"/><counter type="BRANCH" missed="5" covered="5"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doFindEditor" desc="(Ljava/lang/Class;)Ljava/beans/PropertyEditor;"><counter type="INSTRUCTION" missed="34" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="141" covered="142"/><counter type="BRANCH" missed="10" covered="10"/><counter type="COMPLEXITY" missed="12" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="1986" covered="308"/><counter type="BRANCH" missed="251" covered="17"/><counter type="COMPLEXITY" missed="230" covered="33"/><counter type="METHOD" missed="99" covered="30"/><counter type="CLASS" missed="3" covered="20"/></package><package name="org/codehaus/griffon/runtime/core/env"><class name="org/codehaus/griffon/runtime/core/env/RunModeProvider"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBlank" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lgriffon/core/env/RunMode;"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/env/MetadataProvider"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lgriffon/core/env/Metadata;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/codehaus/griffon/runtime/core/env/EnvironmentProvider"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBlank" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Lgriffon/core/env/Environment;"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><counter type="INSTRUCTION" missed="110" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="3" covered="0"/></package><package name="griffon/core/env"><class name="griffon/core/env/Environment$1"><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/env/ApplicationPhase"><method name="values" desc="()[Lgriffon/core/env/ApplicationPhase;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgriffon/core/env/ApplicationPhase;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="59"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/env/RunMode"><method name="values" desc="()[Lgriffon/core/env/RunMode;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgriffon/core/env/RunMode;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSystemSet" desc="()Z"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveRunMode" desc="(Ljava/lang/String;)Lgriffon/core/env/RunMode;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBlank" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setName" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="129" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/env/GriffonEnvironment"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGriffonVersion" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJvmVersion" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOsVersion" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBuildDateTime" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBuildDate" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBuildTime" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBuildRevision" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prettyPrint" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="entry" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="padLeft" desc="(Ljava/lang/String;Ljava/lang/Number;Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPadding" desc="(Ljava/lang/String;I)Ljava/lang/String;"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="multiply" desc="(Ljava/lang/String;Ljava/lang/Number;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="32" covered="61"/><counter type="BRANCH" missed="4" covered="4"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="184" covered="122"/><counter type="BRANCH" missed="14" covered="4"/><counter type="COMPLEXITY" missed="17" covered="6"/><counter type="METHOD" missed="8" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/env/Environment"><method name="values" desc="()[Lgriffon/core/env/Environment;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgriffon/core/env/Environment;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSystemSet" desc="()Z"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveEnvironment" desc="(Ljava/lang/String;)Lgriffon/core/env/Environment;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEnvironmentShortName" desc="(Lgriffon/core/env/Environment;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="6" covered="8"/><counter type="BRANCH" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="50" covered="86"/><counter type="BRANCH" missed="9" covered="3"/><counter type="COMPLEXITY" missed="11" covered="5"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/env/Metadata"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadProperties" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadProperties" desc="(Ljava/io/File;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadProperties" desc="(Ljava/io/InputStream;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getApplicationVersion" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEnvironment" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRunMode" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getApplicationName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keySet" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="153" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/core/env/Lifecycle"><method name="values" desc="()[Lgriffon/core/env/Lifecycle;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgriffon/core/env/Lifecycle;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="3" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="72"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/core/env/Feature"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFeatureEnabled" desc="(Ljava/lang/String;)Z"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFeatureEnabled" desc="(Ljava/lang/String;Z)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withFeature" desc="(Ljava/lang/String;Ljava/lang/Runnable;)V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><counter type="INSTRUCTION" missed="597" covered="339"/><counter type="BRANCH" missed="46" covered="8"/><counter type="COMPLEXITY" missed="70" covered="17"/><counter type="METHOD" missed="43" covered="16"/><counter type="CLASS" missed="4" covered="4"/></package><package name="griffon/javafx/test"><class name="griffon/javafx/test/WindowMatchers$1"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljavafx/stage/Window;)Z"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/test/WindowMatchers$2"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljavafx/stage/Window;)Z"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/test/WindowMatchers$3"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljavafx/stage/Window;)Z"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/test/WindowMatchers$4"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljavafx/stage/Window;)Z"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/test/GriffonTestFXClassRule"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V"><counter type="INSTRUCTION" missed="7" covered="32"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanup" desc="()V"><counter type="INSTRUCTION" missed="13" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lorg/junit/runners/model/Statement;Lorg/junit/runner/Description;)Lorg/junit/runners/model/Statement;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="injectMembers" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasFailures" desc="()Z"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFailures" desc="(Z)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="managedWindow" desc="(Ljava/lang/String;)Ljavafx/stage/Window;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="()V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setup$0" desc="(Lgriffon/javafx/test/GriffonTestFXClassRule$WindowShownHandler;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="122"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/test/FunctionalJavaFXRunner$1"><method name="&lt;init&gt;" desc="(Lgriffon/javafx/test/FunctionalJavaFXRunner;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lorg/junit/runners/model/FrameworkMethod;Lorg/junit/runners/model/FrameworkMethod;)I"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/test/FunctionalJavaFXRunner"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeTestMethods" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runChild" desc="(Lorg/junit/runners/model/FrameworkMethod;Lorg/junit/runner/notification/RunNotifier;)V"><counter type="INSTRUCTION" missed="12" covered="17"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withBefores" desc="(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;"><counter type="INSTRUCTION" missed="6" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIgnored" desc="(Lorg/junit/runners/model/FrameworkMethod;)Z"><counter type="INSTRUCTION" missed="5" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveTestFXClassRule" desc="(Lorg/junit/runners/model/FrameworkMethod;)V"><counter type="INSTRUCTION" missed="21" covered="32"/><counter type="BRANCH" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="44" covered="93"/><counter type="BRANCH" missed="3" covered="5"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/test/GriffonTestFXRule$WindowShownHandler"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isShowing" desc="()Z"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="([Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/test/GriffonTestFXClassRule$WindowShownHandler"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isShowing" desc="()Z"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="([Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/test/FunctionalJavaFXRunner$FailureListener"><method name="&lt;init&gt;" desc="(Lgriffon/javafx/test/GriffonTestFXClassRule;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testFailure" desc="(Lorg/junit/runner/notification/Failure;)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/test/GriffonTestFXClassRule$1"><method name="&lt;init&gt;" desc="(Lgriffon/javafx/test/GriffonTestFXClassRule;Lorg/junit/runners/model/Statement;)V"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="()V"><counter type="INSTRUCTION" missed="6" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/test/GriffonTestFXRule"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lorg/junit/runners/model/Statement;Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;)Lorg/junit/runners/model/Statement;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialize" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="before" desc="(Lgriffon/javafx/JavaFXGriffonApplication;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="after" desc="(Lgriffon/javafx/JavaFXGriffonApplication;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="managedWindow" desc="(Ljava/lang/String;)Ljavafx/stage/Window;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="101" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/test/TestFX"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/test/TestContext"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTestContext" desc="()Lgriffon/javafx/test/TestContext;"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWindowName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setWindowName" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTestCase" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTestCase" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="griffon/javafx/test/GriffonTestFXRule$1"><method name="&lt;init&gt;" desc="(Lgriffon/javafx/test/GriffonTestFXRule;Ljava/lang/Object;Lorg/junit/runners/model/Statement;)V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="()V"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$evaluate$0" desc="(Lgriffon/javafx/test/GriffonTestFXRule$WindowShownHandler;)Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="87" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="griffon/javafx/test/WindowMatchers"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isShowing" desc="()Lorg/hamcrest/Matcher;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotShowing" desc="()Lorg/hamcrest/Matcher;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFocused" desc="()Lorg/hamcrest/Matcher;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotFocused" desc="()Lorg/hamcrest/Matcher;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isShowing" desc="(Ljavafx/stage/Window;)Z"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFocused" desc="(Ljavafx/stage/Window;)Z"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><counter type="INSTRUCTION" missed="378" covered="305"/><counter type="BRANCH" missed="21" covered="11"/><counter type="COMPLEXITY" missed="48" covered="32"/><counter type="METHOD" missed="34" covered="30"/><counter type="CLASS" missed="8" covered="8"/></package><package name="griffon/transform"><class name="griffon/transform/Threading$Policy"><method name="values" desc="()[Lgriffon/transform/Threading$Policy;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgriffon/transform/Threading$Policy;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="53"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="5" covered="53"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></package><counter type="INSTRUCTION" missed="49878" covered="17159"/><counter type="BRANCH" missed="4328" covered="1065"/><counter type="COMPLEXITY" missed="5313" covered="1201"/><counter type="METHOD" missed="2851" covered="942"/><counter type="CLASS" missed="152" covered="235"/></report>