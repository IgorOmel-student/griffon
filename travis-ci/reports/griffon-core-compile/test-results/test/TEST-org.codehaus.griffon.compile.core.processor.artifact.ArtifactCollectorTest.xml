<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.codehaus.griffon.compile.core.processor.artifact.ArtifactCollectorTest" tests="20" skipped="0" failures="0" errors="0" timestamp="2016-11-17T21:56:12" hostname="testing-gce-a500a3b7-3e8b-4697-b127-d17b45a2fbc5" time="0.03">
  <properties/>
  <testcase name="testGetArtifactNewWithBiggerInitializer" classname="org.codehaus.griffon.compile.core.processor.artifact.ArtifactCollectorTest" time="0.008"/>
  <testcase name="testRemoveProviderWhenEmpty" classname="org.codehaus.griffon.compile.core.processor.artifact.ArtifactCollectorTest" time="0.001"/>
  <testcase name="testGetArtifactExisting" classname="org.codehaus.griffon.compile.core.processor.artifact.ArtifactCollectorTest" time="0.001"/>
  <testcase name="testArtifactsMore" classname="org.codehaus.griffon.compile.core.processor.artifact.ArtifactCollectorTest" time="0.001"/>
  <testcase name="testGetArtifactNewWithInitializer" classname="org.codehaus.griffon.compile.core.processor.artifact.ArtifactCollectorTest" time="0.0"/>
  <testcase name="testToStringExistingArtifact" classname="org.codehaus.griffon.compile.core.processor.artifact.ArtifactCollectorTest" time="0.001"/>
  <testcase name="testRemoveProviderWhenInTwoArtifacts" classname="org.codehaus.griffon.compile.core.processor.artifact.ArtifactCollectorTest" time="0.001"/>
  <testcase name="testGetArtifactNewWithInitializerContainingRemovedElement" classname="org.codehaus.griffon.compile.core.processor.artifact.ArtifactCollectorTest" time="0.001"/>
  <testcase name="testToStringEmpty" classname="org.codehaus.griffon.compile.core.processor.artifact.ArtifactCollectorTest" time="0.0"/>
  <testcase name="testToStringNonExistingArtifact" classname="org.codehaus.griffon.compile.core.processor.artifact.ArtifactCollectorTest" time="0.0"/>
  <testcase name="testArtifactsOne" classname="org.codehaus.griffon.compile.core.processor.artifact.ArtifactCollectorTest" time="0.001"/>
  <testcase name="testRemoveProviderNull" classname="org.codehaus.griffon.compile.core.processor.artifact.ArtifactCollectorTest" time="0.0"/>
  <testcase name="testRemoveProviderWhenInOneArtifact" classname="org.codehaus.griffon.compile.core.processor.artifact.ArtifactCollectorTest" time="0.0"/>
  <testcase name="testGetArtifactNull" classname="org.codehaus.griffon.compile.core.processor.artifact.ArtifactCollectorTest" time="0.0"/>
  <testcase name="testGetArtifactNew" classname="org.codehaus.griffon.compile.core.processor.artifact.ArtifactCollectorTest" time="0.001"/>
  <testcase name="testToStringMoreExistingArtifacts" classname="org.codehaus.griffon.compile.core.processor.artifact.ArtifactCollectorTest" time="0.0"/>
  <testcase name="testArtifactsDuplicate" classname="org.codehaus.griffon.compile.core.processor.artifact.ArtifactCollectorTest" time="0.0"/>
  <testcase name="testRemoveProviderWhenInNotOneArtifact" classname="org.codehaus.griffon.compile.core.processor.artifact.ArtifactCollectorTest" time="0.002"/>
  <testcase name="testRemoveProviderWhenInSomeArtifacts" classname="org.codehaus.griffon.compile.core.processor.artifact.ArtifactCollectorTest" time="0.0"/>
  <testcase name="testArtifactsEmpty" classname="org.codehaus.griffon.compile.core.processor.artifact.ArtifactCollectorTest" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
