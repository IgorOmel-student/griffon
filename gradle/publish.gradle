/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2008-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'maven-publish'
apply plugin: 'nebula.optional-base'

publishing {
    publications {
        mavenCustom(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar

            pom {
                name = project.name
                description = project.project_description
                url = 'http://griffon-framework.org'
                inceptionYear = '2008'
                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                scm {
                    url = 'https://github.com/griffon/griffon'
                }
                developers {
                    [
                        aalmiray: 'Andres Almiray',
                        shemnon: 'Danno Ferrin',
                        jwill: 'James Williams',
                        aklein: 'Alexander Klein',
                        rgroeschke: 'Rene Groeschke'
                    ].each { devId, devName ->
                        developer {
                            id = devId
                            name = devName
                        }
                    }
                }
                contributors {
                    [
                        'Dierk Koenig',
                        'Guillaume Laforge',
                        'Dean Iverson'
                    ].each { cName ->
                        contributor {
                            name = cName
                        }
                    }
                }
            }
        }
    }
}

task generateMinPom {
    doLast {
        String pomHeader = """|<?xml version="1.0" encoding="UTF-8"?>
            |<project xmlns="http://maven.apache.org/POM/4.0.0"
            |         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
            |         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            |    <modelVersion>4.0.0</modelVersion>
            |    <groupId>${project.group}</groupId>
            |    <artifactId>${project.name}</artifactId>
            |    <version>${project.version}</version>
            |""".stripMargin('|')

        def dependencyTemplate = { dep -> """|        <dependency>
                                             |            <groupId>$dep.group</groupId>
                                             |            <artifactId>$dep.name</artifactId>
                                             |            <version>$dep.version</version>
                                             |        </dependency>""".stripMargin('|')
        }

        def optionalDependencyTemplate = { dep -> """|        <dependency>
                                                     |            <groupId>$dep.group</groupId>
                                                     |            <artifactId>$dep.name</artifactId>
                                                     |            <version>$dep.version</version>
                                                     |            <optional>true</optional>
                                                     |        </dependency>""".stripMargin('|')
        }

        def dependencyEntry = { dep ->
            project.ext.optionalDeps.contains(dep) ? optionalDependencyTemplate(dep) : dependencyTemplate(dep)
        }

        String deps = configurations.runtime.allDependencies.findAll({it.name!= 'unspecified'})
            .collect({ dep -> dependencyEntry(dep)}).join('\n')

        String pom = pomHeader
        if (deps) {
            pom += "    <dependencies>\n$deps\n    </dependencies>\n"
        }
        pom += "</project>"

        project.file("$buildDir/tmp/maven").mkdirs()
        project.file("$buildDir/tmp/maven/pom.xml").text = pom
        project.file("$buildDir/tmp/maven/pom.properties").text = """|# Generated by Gradle ${gradle.gradleVersion}
            |version=${project.version}
            |groupId=${project.group}
            |artifactId=${project.name}
            |""".stripMargin('|')
    }
}

if (Boolean.valueOf((rootProject.findProperty('release') ?: false))) {
    jar {
        dependsOn 'generateMinPom'
        manifest {
            attributes(
                'Created-By': buildCreatedBy,
                'x-Built-By': buildBy,
                'x-Build-Jdk': buildJdk,
                'x-Build-Date': buildDate,
                'x-Build-Time': buildTime,
                'x-Build-Revision': buildRevision,
                'Specification-Title': project.name,
                'Specification-Version': project.version,
                'Specification-Vendor': 'griffon-framework.org',
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor': 'griffon-framework.org'
            )
        }

        metaInf {
            from(rootProject.file('.')) {
                include 'LICENSE'
            }
            from(file("$buildDir/tmp/maven")) {
                into "maven/${project.group}/${project.name}"
            }
        }
    }
}
